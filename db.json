{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/teatime/source/css/main.css","path":"css/main.css","modified":0,"renderable":1},{"_id":"source/content/images/2017/diving-into-code.jpg","path":"content/images/2017/diving-into-code.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2017/relax-like-a-cat.jpg","path":"content/images/2017/relax-like-a-cat.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/casual-testing.jpg","path":"content/images/2020/casual-testing.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/exploratory-testing-diagram.png","path":"content/images/2020/exploratory-testing-diagram.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/customer-interview-session.jpg","path":"content/images/2018/customer-interview-session.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/flow-interface-type.jpg","path":"content/images/2018/flow-interface-type.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/iterm2-key-mappings.png","path":"content/images/2018/iterm2-key-mappings.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/iterm2_backward_word.png","path":"content/images/2018/iterm2_backward_word.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/iterm2_forward_word.png","path":"content/images/2018/iterm2_forward_word.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/iterm2_option_keyescape_chars.png","path":"content/images/2018/iterm2_option_keyescape_chars.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg","path":"content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/keybinds_backward_word_forward_word.png","path":"content/images/2018/keybinds_backward_word_forward_word.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/react-web-development-course.png","path":"content/images/2018/react-web-development-course.png","modified":0,"renderable":0},{"_id":"source/content/images/pages/speaker-page-promo.jpg","path":"content/images/pages/speaker-page-promo.jpg","modified":0,"renderable":0},{"_id":"source/content/images/defaults/default-social-photo.jpg","path":"content/images/defaults/default-social-photo.jpg","modified":0,"renderable":0},{"_id":"themes/teatime/source/css/images/30seconds.png","path":"css/images/30seconds.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/KIProtect.png","path":"css/images/KIProtect.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/cognito.png","path":"css/images/cognito.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/giftbit.png","path":"css/images/giftbit.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/facebook.png","path":"css/images/facebook.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/heapspace.png","path":"css/images/heapspace.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/miotiv.png","path":"css/images/miotiv.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/koncept.png","path":"css/images/koncept.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/ospitek.png","path":"css/images/ospitek.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/packt.png","path":"css/images/packt.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/reach.png","path":"css/images/reach.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/react.png","path":"css/images/react.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/spicefactory.png","path":"css/images/spicefactory.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/savaevents.png","path":"css/images/savaevents.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/use-array.png","path":"css/images/use-array.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/use-connection.png","path":"css/images/use-connection.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/use-localstorage-hook.png","path":"css/images/use-localstorage-hook.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/use-object.png","path":"css/images/use-object.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/yahoo.png","path":"css/images/yahoo.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/youtube.png","path":"css/images/youtube.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/z9security.png","path":"css/images/z9security.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/zeit.svg","path":"css/images/zeit.svg","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/zkteco.png","path":"css/images/zkteco.png","modified":0,"renderable":1},{"_id":"themes/teatime/source/css/images/amazon.png","path":"css/images/amazon.png","modified":0,"renderable":1},{"_id":"source/content/images/2017/dont-dig-with-kids-toys.jpg","path":"content/images/2017/dont-dig-with-kids-toys.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2017/prairie-dogs-debugging-and-diggin.jpg","path":"content/images/2017/prairie-dogs-debugging-and-diggin.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2017/uncharted-lands.jpg","path":"content/images/2017/uncharted-lands.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2019/mern-stack-development-course.png","path":"content/images/2019/mern-stack-development-course.png","modified":0,"renderable":0},{"_id":"source/content/images/2020/amsterdam-bikes.jpg","path":"content/images/2020/amsterdam-bikes.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/designing-react-components-booleans.jpg","path":"content/images/2020/designing-react-components-booleans.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/who-should-test-software.png","path":"content/images/2020/who-should-test-software.png","modified":0,"renderable":0},{"_id":"source/content/images/2018/tunnel-to-nowhere.jpg","path":"content/images/2018/tunnel-to-nowhere.jpg","modified":0,"renderable":0},{"_id":"themes/teatime/source/css/images/background.png","path":"css/images/background.png","modified":0,"renderable":1},{"_id":"source/content/images/2020/belgrade-map-no-trees.png","path":"content/images/2020/belgrade-map-no-trees.png","modified":0,"renderable":0},{"_id":"source/content/images/2020/carve-potgieterstraat.jpg","path":"content/images/2020/carve-potgieterstraat.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/33_biking.jpg","path":"content/images/2018/workation/33_biking.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/34_biking.jpg","path":"content/images/2018/workation/34_biking.jpg","modified":0,"renderable":0},{"_id":"source/content/images/defaults/favicon.ico","path":"content/images/defaults/favicon.ico","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/02_cabin_crew.jpg","path":"content/images/2018/workation/02_cabin_crew.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/05_mas_grau.jpg","path":"content/images/2018/workation/05_mas_grau.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg","path":"content/images/2018/workation/01_airport_spicefactory_group_photo.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/06_mas_grau.jpg","path":"content/images/2018/workation/06_mas_grau.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/07_group_hike.jpg","path":"content/images/2018/workation/07_group_hike.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/12_girona.jpg","path":"content/images/2018/workation/12_girona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/18_sant_feliu_de_guixols.jpg","path":"content/images/2018/workation/18_sant_feliu_de_guixols.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/19_sant_feliu_de_guixols.jpg","path":"content/images/2018/workation/19_sant_feliu_de_guixols.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/22_siurana.jpg","path":"content/images/2018/workation/22_siurana.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/26_costa_brava.jpg","path":"content/images/2018/workation/26_costa_brava.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/27_barcelona.jpg","path":"content/images/2018/workation/27_barcelona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/28_barcelona.jpg","path":"content/images/2018/workation/28_barcelona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/30_barcelona.jpg","path":"content/images/2018/workation/30_barcelona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/04_mas_grau.jpg","path":"content/images/2018/workation/04_mas_grau.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/03_mas_grau.jpg","path":"content/images/2018/workation/03_mas_grau.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/08_dali_museum.jpg","path":"content/images/2018/workation/08_dali_museum.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/09_dali_museum.jpg","path":"content/images/2018/workation/09_dali_museum.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/10_figueres.jpg","path":"content/images/2018/workation/10_figueres.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/11_poolside_view.jpg","path":"content/images/2018/workation/11_poolside_view.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/13_girona.jpg","path":"content/images/2018/workation/13_girona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/14_girona.jpg","path":"content/images/2018/workation/14_girona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/15_girona.jpg","path":"content/images/2018/workation/15_girona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/17_girona_got.jpg","path":"content/images/2018/workation/17_girona_got.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/16_girona_got.jpg","path":"content/images/2018/workation/16_girona_got.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/20_sant_feliu_de_guixols.jpg","path":"content/images/2018/workation/20_sant_feliu_de_guixols.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/21_siurana.jpg","path":"content/images/2018/workation/21_siurana.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/23_siurana.jpg","path":"content/images/2018/workation/23_siurana.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/24_costa_brava.jpg","path":"content/images/2018/workation/24_costa_brava.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/25_costa_brava.jpg","path":"content/images/2018/workation/25_costa_brava.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/29_barcelona.jpg","path":"content/images/2018/workation/29_barcelona.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/31_biking.jpg","path":"content/images/2018/workation/31_biking.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/35_museo_picasso.jpg","path":"content/images/2018/workation/35_museo_picasso.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2018/workation/32_biking.jpg","path":"content/images/2018/workation/32_biking.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/resume-red-flags.jpg","path":"content/images/2020/resume-red-flags.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/hemingwayapp-example.png","path":"content/images/2020/hemingwayapp-example.png","modified":0,"renderable":0},{"_id":"source/content/images/2020/resume-refactor.png","path":"content/images/2020/resume-refactor.png","modified":0,"renderable":0},{"_id":"source/content/images/2020/skills-section-horror.png","path":"content/images/2020/skills-section-horror.png","modified":0,"renderable":0},{"_id":"source/content/images/2020/amsterdam-canal.jpg","path":"content/images/2020/amsterdam-canal.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2020/sunny-osterpark.jpg","path":"content/images/2020/sunny-osterpark.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2017/crawl-graph.png","path":"content/images/2017/crawl-graph.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/404/index.md","hash":"4c416b9d557d312bdf75ca1ea90115d1afa48440","modified":1600946309211},{"_id":"source/_posts/boolean_trap_when_desgining_react_components_revisited.md","hash":"addb3dec19eb5dee2606de9c44e895e476a32755","modified":1600946309212},{"_id":"source/_posts/guide-to-exploratory-testing.md","hash":"f5df4f9b2d810ba4da38a7b9596a1d3cc04adb1a","modified":1600946309212},{"_id":"source/_posts/hands-on-web-development-with-react-course.md","hash":"f47a8c93260e7fcaed2d2a206e7fe808ead117e7","modified":1600946309212},{"_id":"source/_posts/flow-interface-type-services-and-mocks.md","hash":"bb88bb017e69d6003058e5bd3a16d13dec563514","modified":1600946309212},{"_id":"source/_posts/how-to-read-and-navigate-new-codebase.md","hash":"8ce9c8bc0d6c30f18703df78b427919e39ac56b4","modified":1604240918180},{"_id":"source/_posts/hands-on-mern-stack-web-development-course.md","hash":"1c176c0ff6b1350f64c6f738d6d9995e69ebb41f","modified":1600946309212},{"_id":"source/_posts/how_to_use_alt_arrows_to_navigate_between_words_in_iterm2.md","hash":"d6324e76eb535045f5288ffe886cdab93357e507","modified":1628957147492},{"_id":"source/_posts/joel-spolsky-we-are-developers-2018.md","hash":"9d98825e14a8020ce67f520d91dedbb17a537b11","modified":1600946309213},{"_id":"source/_posts/less-cars-more-trees.md","hash":"8333e1c2469d9b26022da3f41eb18f6eeb8212f3","modified":1600946309213},{"_id":"source/_posts/output-vs-outcome.md","hash":"8a9b6b064da7ad4468a71c45ba38ac0b97fbf8c2","modified":1600946309213},{"_id":"source/_posts/spicefactory-workation-2018.md","hash":"f0308bd1cbd14dd45d1c0c5de163ba5d2f4845cd","modified":1600946309213},{"_id":"source/about/index.md","hash":"b453c024bf92bc7e14f0ce8dd0b558f8d429a785","modified":1600946309213},{"_id":"source/speaking/index.md","hash":"87deba5caa8936cbd3a6a95b05452c36fcf3daba","modified":1600946309255},{"_id":"source/open-source-software/index.md","hash":"188577365857788f0c16c3e38e7b2c24724ed0ab","modified":1600946309254},{"_id":"themes/teatime/layout/analytics.ejs","hash":"4ff71c9f511e40b1f52ccc66a52981bbe27c8c2e","modified":1600946309256},{"_id":"themes/teatime/layout/404.ejs","hash":"bc5a5d39905754d7d64ee94e83b07e5c2ae803fa","modified":1600946309255},{"_id":"themes/teatime/layout/archive.ejs","hash":"3a651a3b0836d586824997b454432d9d84ecacef","modified":1602582757577},{"_id":"themes/teatime/layout/layout.ejs","hash":"d37a4907924dab58937fbd5d6209e4cdf7abc835","modified":1600946309256},{"_id":"themes/teatime/layout/navigation-footer.ejs","hash":"b58d838d2c2d5a1a7bd394685b0267769a265996","modified":1602582720092},{"_id":"themes/teatime/layout/page.ejs","hash":"9744883b20a07a2fa669930b401a4076d4729339","modified":1600946309257},{"_id":"themes/teatime/layout/post.ejs","hash":"be0a187d52ec632d64664ce377b5a18ecc794e9d","modified":1628957221721},{"_id":"themes/teatime/layout/index.ejs","hash":"495ef3c4f2b3c0137a8307b3f399a02e8f454bc7","modified":1604240975759},{"_id":"themes/teatime/source/.DS_Store","hash":"3037d5331d92d3f549f33102664cadfff9459707","modified":1601036498019},{"_id":"themes/teatime/source/css/main.css","hash":"b67a91b95360ae37036ad1b8ab45346cfc9b039b","modified":1628957246265},{"_id":"themes/teatime/source/css/.DS_Store","hash":"2e1d403b5dba569513951118424db280e641e1c4","modified":1601043989775},{"_id":"source/content/images/2017/diving-into-code.jpg","hash":"f96c78698b07870d7797574562af05634319cd0e","modified":1600946309214},{"_id":"source/content/images/2017/relax-like-a-cat.jpg","hash":"be2ca7eae2f49adf76f3d6ed7b9d5e563397b45d","modified":1600946309216},{"_id":"source/content/images/2020/casual-testing.jpg","hash":"269270c80af7f2977a6376abb484f877a19a77dd","modified":1600946309250},{"_id":"source/content/images/2020/exploratory-testing-diagram.png","hash":"ade2467a56d2deb12119eb17d8534ac4f79991ad","modified":1600946309251},{"_id":"source/content/images/2018/customer-interview-session.jpg","hash":"1738dc9bfe0d18f0c2b254377086513651aab925","modified":1600946309216},{"_id":"source/content/images/2018/flow-interface-type.jpg","hash":"e76eb1b9563aef080fa741c254ccbd761a759ff0","modified":1600946309217},{"_id":"source/content/images/2018/iterm2-key-mappings.png","hash":"bb712a20dc0253aee61ffb11213c8b03883b2366","modified":1600946309217},{"_id":"source/content/images/2018/iterm2_backward_word.png","hash":"9192d322003161cba919672fc6e23acff51b5877","modified":1600946309217},{"_id":"source/content/images/2018/iterm2_forward_word.png","hash":"753c9ea8f3b9fe3d29ee5c60d6a0265c6dd3bbb4","modified":1600946309217},{"_id":"source/content/images/2018/iterm2_option_keyescape_chars.png","hash":"6e8ce95f061e0a8d4d33113b62e024f792d530c3","modified":1600946309218},{"_id":"source/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg","hash":"70dd82a7942776a2dff5ed9a7beac9fb281a5a14","modified":1600946309218},{"_id":"source/content/images/2018/keybinds_backward_word_forward_word.png","hash":"ac4333a133a07b4e9ed0d3c01542c048ecdf624e","modified":1600946309218},{"_id":"source/content/images/2018/react-web-development-course.png","hash":"b74c7d50187e4d2d197c6e073fffa550faa56636","modified":1600946309219},{"_id":"source/content/images/pages/speaker-page-promo.jpg","hash":"47e729328c1914673b457ff0226a2f41b7a1c671","modified":1600946309254},{"_id":"source/content/images/defaults/default-social-photo.jpg","hash":"1c26aed0cfe34c78b6f07eb40cdac60d422c8686","modified":1600946309253},{"_id":"themes/teatime/source/css/images/30seconds.png","hash":"0a76546aaeee25c515f86c0152a4cf846e354206","modified":1600946309258},{"_id":"themes/teatime/source/css/images/KIProtect.png","hash":"969e5a749368f8055aac7dd58a978fbdd7182bb2","modified":1600946309258},{"_id":"themes/teatime/source/css/images/cognito.png","hash":"1e159133fe7b108e7e959a53ea3253b0ee1277ce","modified":1600946309259},{"_id":"themes/teatime/source/css/images/giftbit.png","hash":"1bfa0ca27eaaf9d365a6ca91db24607bcb1310ad","modified":1600946309259},{"_id":"themes/teatime/source/css/images/facebook.png","hash":"487f7240d4a79a344b1e586220ae16acac490fb4","modified":1600946309259},{"_id":"themes/teatime/source/css/images/heapspace.png","hash":"a3b8d5b7b0e58dd1c82e5c7605216046226ccbcd","modified":1600946309259},{"_id":"themes/teatime/source/css/images/miotiv.png","hash":"97515c82e99d9726077ec4b1d32a7c01271c749b","modified":1600946309259},{"_id":"themes/teatime/source/css/images/koncept.png","hash":"b2dc0018657fff0652150303c3a49a0d179c7b76","modified":1600946309259},{"_id":"themes/teatime/source/css/images/ospitek.png","hash":"af5a385718ebff31085e7a259227c26ab72c8caf","modified":1600946309259},{"_id":"themes/teatime/source/css/images/packt.png","hash":"fd2a6c43abb8c55191a92af26f9f793ada382e63","modified":1600946309260},{"_id":"themes/teatime/source/css/images/reach.png","hash":"2edd2db89a200f56e4ce09f1b959b38771113921","modified":1600946309260},{"_id":"themes/teatime/source/css/images/react.png","hash":"d0830a6143a5f80c5d782b2ddc7c18527133305f","modified":1600946309260},{"_id":"themes/teatime/source/css/images/spicefactory.png","hash":"0b62f4c46d1b834b3d163bf3d53be2d76ef6a13b","modified":1600946309260},{"_id":"themes/teatime/source/css/images/savaevents.png","hash":"73233f9a9e239f822a91c97ea0082c47103db83f","modified":1600946309260},{"_id":"themes/teatime/source/css/images/use-array.png","hash":"7252ae263bcd6857269dd86c4788f89c44cfd74a","modified":1600946309260},{"_id":"themes/teatime/source/css/images/use-connection.png","hash":"c8e6c75cd94b9911d96aa2fb530d74cfb4d9fbbc","modified":1600946309260},{"_id":"themes/teatime/source/css/images/use-localstorage-hook.png","hash":"aa1cdcb11acb2165f26c7f5bdc9108ec75fcba8a","modified":1600946309260},{"_id":"themes/teatime/source/css/images/use-object.png","hash":"56c8facf221bc98eff14f56265dc2e9c400fdc71","modified":1600946309261},{"_id":"themes/teatime/source/css/images/yahoo.png","hash":"02b1d5738eb5e86c7b79d2e9c43877ee79676e23","modified":1600946309261},{"_id":"themes/teatime/source/css/images/youtube.png","hash":"49ea2226ce61e81fee5069a702b2fa0b91ea96a6","modified":1600946309261},{"_id":"themes/teatime/source/css/images/z9security.png","hash":"25763011cbd156b96efc271530018504a7a529b6","modified":1600946309261},{"_id":"themes/teatime/source/css/images/zeit.svg","hash":"ed29300b676b7dd9375b46a91cac5d5a6a9816b7","modified":1600946309261},{"_id":"themes/teatime/source/css/images/zkteco.png","hash":"8117e0f5e3fc8cefae3f176f2ba935771e84c41b","modified":1600946309261},{"_id":"themes/teatime/source/css/images/.DS_Store","hash":"02c264bedba8c84ba4742a4a3cce45170414daab","modified":1601036595927},{"_id":"themes/teatime/source/css/images/amazon.png","hash":"d4a4897e9c5917bd355bf836e32760fab4bfc7d1","modified":1601036572988},{"_id":"source/content/images/2017/dont-dig-with-kids-toys.jpg","hash":"6fdd9be4f6910d9265ec4134cfb10e6e6016f59e","modified":1600946309214},{"_id":"source/content/images/2017/prairie-dogs-debugging-and-diggin.jpg","hash":"7b402a2209122428fc795ef0327691df2e340e35","modified":1600946309215},{"_id":"source/content/images/2017/uncharted-lands.jpg","hash":"1e0fea69d41630bc3e8f6115b330c343d858585e","modified":1600946309216},{"_id":"source/content/images/2019/mern-stack-development-course.png","hash":"5ebc3066feae89556bdcf903885abdf60394ca69","modified":1600946309248},{"_id":"source/content/images/2020/amsterdam-bikes.jpg","hash":"2e5841ceab91c3d953fcdc108ab984d1a3aea1e7","modified":1600946309249},{"_id":"source/content/images/2020/designing-react-components-booleans.jpg","hash":"b23a20b4bdfd8d17fd4a93f54131f514e7ad2cac","modified":1600946309250},{"_id":"source/content/images/2020/who-should-test-software.png","hash":"92e9e11c1a9b7c0d2c116b48b72309f6a4d364d1","modified":1600946309252},{"_id":"source/content/images/2018/tunnel-to-nowhere.jpg","hash":"4dac4405f85719e6850cc62d0d034b89336ea120","modified":1600946309219},{"_id":"themes/teatime/source/css/images/background.png","hash":"192b5d39c30ec729c2038acfd26a33ed8bd1d4a5","modified":1600946309259},{"_id":"source/content/images/2020/belgrade-map-no-trees.png","hash":"66e7f05f5eb1dcf61f7fbc9fbc89bfbc15d03ce3","modified":1600946309249},{"_id":"source/content/images/2020/carve-potgieterstraat.jpg","hash":"1daa60feff13ce27992d18466742adf89c90683a","modified":1600946309250},{"_id":"source/content/images/2018/workation/33_biking.jpg","hash":"b4dd92676d943cc9a1369308d22483c64c5d20be","modified":1600946309245},{"_id":"source/content/images/2018/workation/34_biking.jpg","hash":"cf4f71e7db276dc4ca38d91f8965f1e63f0c50c1","modified":1600946309246},{"_id":"source/content/images/defaults/favicon.ico","hash":"fb35537df185597f7b1d684ab844c57e2afd6823","modified":1600946309253},{"_id":"source/content/images/2018/workation/02_cabin_crew.jpg","hash":"c135877b08e1d95da2dce701d81d9f495d175674","modified":1600946309220},{"_id":"source/content/images/2018/workation/05_mas_grau.jpg","hash":"fe3aea7179c4c16de252f801047d2c07df5887db","modified":1600946309222},{"_id":"source/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg","hash":"4860a1783705031b4841e8abbea660896c47b9e8","modified":1600946309219},{"_id":"source/content/images/2018/workation/06_mas_grau.jpg","hash":"0c0183dc874874ff0b1bd2a8288185819780ccfd","modified":1600946309223},{"_id":"source/content/images/2018/workation/07_group_hike.jpg","hash":"e11ceba1447e8d4b466baa5b2ad5781cd5aed17f","modified":1600946309223},{"_id":"source/content/images/2018/workation/12_girona.jpg","hash":"1011faef060bac3b2dfb2d5d40e2527aaeeb8ffb","modified":1600946309227},{"_id":"source/content/images/2018/workation/18_sant_feliu_de_guixols.jpg","hash":"20e7d9ab3f5ad738856c79d5e1ce0a26667af676","modified":1600946309232},{"_id":"source/content/images/2018/workation/19_sant_feliu_de_guixols.jpg","hash":"307ac802000d7325913f65f6e4085ddeb5513ac1","modified":1600946309232},{"_id":"source/content/images/2018/workation/22_siurana.jpg","hash":"bdd8c229eecd30a42e207da9cb581fd7b0146117","modified":1600946309234},{"_id":"source/content/images/2018/workation/26_costa_brava.jpg","hash":"e4e6db72f45edc6b3f25209fe8d8816c6fb3d3b7","modified":1600946309238},{"_id":"source/content/images/2018/workation/27_barcelona.jpg","hash":"08ac4caf9d5849e335be6ebfd10d6f767d6dc565","modified":1600946309239},{"_id":"source/content/images/2018/workation/28_barcelona.jpg","hash":"6b89e420277f4d2c3bd2fb2a7a99d878f7c7708c","modified":1600946309240},{"_id":"source/content/images/2018/workation/30_barcelona.jpg","hash":"2a9063d2490ec14d9c0ecc3de4c54d847f9b78f8","modified":1600946309242},{"_id":"source/content/images/2018/workation/04_mas_grau.jpg","hash":"a897bd77b5a2592ccc3deae1bf6da6ca4ca633b0","modified":1600946309221},{"_id":"source/content/images/2018/workation/03_mas_grau.jpg","hash":"1fd8139cec913e386e1c430b2db00389da262356","modified":1600946309220},{"_id":"source/content/images/2018/workation/08_dali_museum.jpg","hash":"7451ae5c25a281f8fff26d629e0afaba6a61560a","modified":1600946309224},{"_id":"source/content/images/2018/workation/09_dali_museum.jpg","hash":"f29fe2756a646688e7855cd400ebe3c505a3cbf4","modified":1600946309225},{"_id":"source/content/images/2018/workation/10_figueres.jpg","hash":"06ae082392b1a6f6ecb65b6bc7beb22fb71477a2","modified":1600946309226},{"_id":"source/content/images/2018/workation/11_poolside_view.jpg","hash":"6543b1988bdcaddef8481211b81d6d5315213fbd","modified":1600946309227},{"_id":"source/content/images/2018/workation/13_girona.jpg","hash":"9329808e6b8bff3f21dda838f5dceb6d1ed03212","modified":1600946309228},{"_id":"source/content/images/2018/workation/14_girona.jpg","hash":"a0c2e5fa5749fb0e002b7058eba5851ee2b7f8fd","modified":1600946309229},{"_id":"source/content/images/2018/workation/15_girona.jpg","hash":"ca8528152d6277cf58a195f1d4fbee94e138cf56","modified":1600946309230},{"_id":"source/content/images/2018/workation/17_girona_got.jpg","hash":"80790c932a14e1409ee76ee03589421500378fa5","modified":1600946309231},{"_id":"source/content/images/2018/workation/16_girona_got.jpg","hash":"1fd3feb612a3de509bf7a90aef0ccd2a37e507be","modified":1600946309230},{"_id":"source/content/images/2018/workation/20_sant_feliu_de_guixols.jpg","hash":"f4a9b7609c454cf9f5efaf3261fd64b046eebc1c","modified":1600946309233},{"_id":"source/content/images/2018/workation/21_siurana.jpg","hash":"eee40d733cc9adb7c1746177120e67900530675a","modified":1600946309234},{"_id":"source/content/images/2018/workation/23_siurana.jpg","hash":"b7a44df059e80a826d2dcf90ac6bb19e943748b5","modified":1600946309235},{"_id":"source/content/images/2018/workation/24_costa_brava.jpg","hash":"9394988f462f35627c2727c884863adb8c5ac7e6","modified":1600946309236},{"_id":"source/content/images/2018/workation/25_costa_brava.jpg","hash":"7d130648a8a4fc8c0e86844c48b07336e3f94ce0","modified":1600946309237},{"_id":"source/content/images/2018/workation/29_barcelona.jpg","hash":"911a7137bb796ae6c74372fac3ad9f0395c7cabb","modified":1600946309241},{"_id":"source/content/images/2018/workation/31_biking.jpg","hash":"a1c263d03a5a028fdb27a209e3098d26659eca74","modified":1600946309243},{"_id":"source/content/images/2018/workation/35_museo_picasso.jpg","hash":"4f177abdbfaaa8673389b28cf9877b810ab9aa9b","modified":1600946309247},{"_id":"source/content/images/2018/workation/32_biking.jpg","hash":"fa320246654f7bc9f612211b8992d5f2cbc0be85","modified":1600946309245},{"_id":"source/.DS_Store","hash":"c0c8170a9f2d2fd4f26674539cf124076e508c34","modified":1601713219017},{"_id":"source/_posts/hello-amsterdam.md","hash":"7bdd6e8016fb71438bebd54d20c1e6aeec175ba8","modified":1628957266599},{"_id":"source/content/.DS_Store","hash":"9979f0a0f0a04abd63b848ae02d89f9178846201","modified":1604146050854},{"_id":"source/_posts/red-flags-on-your-resume.md","hash":"983b35ea778b0d00e58c1941d694db4b27cff2f7","modified":1602056705101},{"_id":"themes/teatime/layout/substack.ejs","hash":"45e785532f090367fcb146be3d5967a092fc3f72","modified":1601213597318},{"_id":"source/content/images/.DS_Store","hash":"6499ab18de0bec5c7fb643907004ad2f4a368d8b","modified":1603622992836},{"_id":"source/content/images/2020/.DS_Store","hash":"4ae01aee4b15d7f9e5ad057eb7a60d5076969e29","modified":1601808122487},{"_id":"source/content/images/2020/resume-red-flags.jpg","hash":"2c592b3f231fe59a107aad8921e57fcc6009854f","modified":1601206714830},{"_id":"source/content/images/2020/resume-refactor.png","hash":"3dcdc676b0e60cab747e80a2b7ec1831231f7d92","modified":1601226936557},{"_id":"source/content/images/2020/skills-section-horror.png","hash":"0691ccb9fd4ebe070e463c60609fad704c76f0c1","modified":1601228730012},{"_id":"source/content/images/2020/hemingwayapp-example.png","hash":"d84936d3cf63b1c3955f70055f71524a74d62c04","modified":1601227185674},{"_id":"source/_posts/why-teams-exist.md","hash":"40f57bf4c5c3eec07007efe153ec26bb0747b8e8","modified":1672444185012},{"_id":"source/content/images/2020/amsterdam-canal.jpg","hash":"c3938a4767db7ec0e0541ea9b02c839024eb90b0","modified":1601713403111},{"_id":"source/content/images/2020/sunny-osterpark.jpg","hash":"14b5c3a084bc74867cff60423b4d4768fc5d9024","modified":1601716059662},{"_id":"source/content/images/2017/.DS_Store","hash":"b2b82fceb923eb0c47c4095e5781d366e0d4fed1","modified":1603735329973},{"_id":"source/content/images/2017/crawl-graph.png","hash":"b21f336a8cdf8af6e26df18ea4564c3b8538753e","modified":1603622951345}],"Category":[],"Data":[],"Page":[{"title":"Page Not Found :(","layout":"404","_content":"","source":"404/index.md","raw":"---\ntitle: Page Not Found :(\nlayout: 404\n---\n","date":"2020-09-24T11:18:29.211Z","updated":"2020-09-24T11:18:29.211Z","path":"404/index.html","comments":1,"_id":"ckfi82tqo0000rkrizquscd58","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","intro":"I am software engineer who is passionate about his craft. I work a lot with JavaScript and the surrounding ecosystem.","seo_description":"A software engineer and speaker who is passionate about his craft. Working with React, GraphQL and chatbots.","date":"2017-08-06T00:00:00.000Z","_content":"\n## Moved\n\nThe about page has [been moved here.](/)\n\n### Getting in Touch\n\nYou can always <a href=\"mailto:filipdanic7@gmail.com\">email me</a> or reach out <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">via Twitter,</a> if you want to learn more. I’m also actively looking for <a href=\"/speaking\">new speaking opportunities,</a> or going out for a beer if you’re in Belgrade. 🍻\n\nYou can also catch me on <a href=\"https://www.twitch.tv/filipdanic\" target=\"_blank\">on Twitch,</a> where I occasionally live stream. Past recording are posted <a href=\"https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w\" target=\"_blank\">on YouTube.</a>\n","source":"about/index.md","raw":"---\ntitle: About\nintro: I am software engineer who is passionate about his craft. I work a lot with JavaScript and the surrounding ecosystem.\nseo_description: A software engineer and speaker who is passionate about his craft. Working with React, GraphQL and chatbots.\ndate: 2017-08-06\n---\n\n## Moved\n\nThe about page has [been moved here.](/)\n\n### Getting in Touch\n\nYou can always <a href=\"mailto:filipdanic7@gmail.com\">email me</a> or reach out <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">via Twitter,</a> if you want to learn more. I’m also actively looking for <a href=\"/speaking\">new speaking opportunities,</a> or going out for a beer if you’re in Belgrade. 🍻\n\nYou can also catch me on <a href=\"https://www.twitch.tv/filipdanic\" target=\"_blank\">on Twitch,</a> where I occasionally live stream. Past recording are posted <a href=\"https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w\" target=\"_blank\">on YouTube.</a>\n","updated":"2020-09-24T11:18:29.213Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckfi82tqs0002rkrimt4nz401","content":"<h2 id=\"Moved\"><a href=\"#Moved\" class=\"headerlink\" title=\"Moved\"></a>Moved</h2><p>The about page has <a href=\"/\">been moved here.</a></p>\n<h3 id=\"Getting-in-Touch\"><a href=\"#Getting-in-Touch\" class=\"headerlink\" title=\"Getting in Touch\"></a>Getting in Touch</h3><p>You can always <a href=\"mailto:filipdanic7@gmail.com\" target=\"_blank\" rel=\"external\">email me</a> or reach out <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">via Twitter,</a> if you want to learn more. I’m also actively looking for <a href=\"/speaking\">new speaking opportunities,</a> or going out for a beer if you’re in Belgrade. 🍻</p>\n<p>You can also catch me on <a href=\"https://www.twitch.tv/filipdanic\" target=\"_blank\">on Twitch,</a> where I occasionally live stream. Past recording are posted <a href=\"https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w\" target=\"_blank\">on YouTube.</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Moved\"><a href=\"#Moved\" class=\"headerlink\" title=\"Moved\"></a>Moved</h2><p>The about page has <a href=\"/\">been moved here.</a></p>\n<h3 id=\"Getting-in-Touch\"><a href=\"#Getting-in-Touch\" class=\"headerlink\" title=\"Getting in Touch\"></a>Getting in Touch</h3><p>You can always <a href=\"mailto:filipdanic7@gmail.com\" target=\"_blank\" rel=\"external\">email me</a> or reach out <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">via Twitter,</a> if you want to learn more. I’m also actively looking for <a href=\"/speaking\">new speaking opportunities,</a> or going out for a beer if you’re in Belgrade. 🍻</p>\n<p>You can also catch me on <a href=\"https://www.twitch.tv/filipdanic\" target=\"_blank\">on Twitch,</a> where I occasionally live stream. Past recording are posted <a href=\"https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w\" target=\"_blank\">on YouTube.</a></p>\n"},{"title":"Speaking","intro":"I consider myself an experienced and enthusiastic speaker. I’ve been fortunate enough to speak at events and meetups of various sizes. I do it because I like meeting new people and sharing my passion with others.","seo_description":"Filip is enthusiastic, experienced tech speaker with several conferences and meetups under his belt. Get in touch!","promo_photo":"/content/images/pages/speaker-page-promo.jpg","date":"2017-08-06T00:00:00.000Z","_content":"\nThe information on this page is for anyone who might want to invite me to their event – be it a conference or local meetup group. Use this page to learn more about me and feel free to get in touch via <a href=\"mailto:filipdanic7@gmail.com\">email</a> or <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">Twitter.</a>\n\n## Past Talks\n\n<div> <a href=\"https://heapcon.io/speakers/filip-danic/its-time-to-reinvent-the-web-without-the-internet/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\" title=\"Heapcon 2019\"> Heapcon 2019 </a> <a href=\"https://www.instagram.com/p/ByH8bfjBpmr/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> INAT Summit 2019 </a> <a href=\"https://belgrade.voxxeddays.com/speakers/filip-danic\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2017 </a> <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Super Admins </a> <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Practical UX </a> <a href=\"https://devdays.lt/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> DevDays Vilnius 2017 </a> <a href=\"http://www.umrezavanje.rs/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Umrežavanje </a> <a href=\"https://belgrade.voxxeddays.com/16/talk/235/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2016 </a> </div>\n\n## Meetups\n\nI’ve also had the pleasure of speaking at various local meetups. These include events organized by <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\">Super Admins</a>, <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\">Practical UX</a>, and student conferences such as <a href=\"https://www.facebook.com/umrezavanje/\" target=\"_blank\">Umrežavanje.</a>\n\n## What You Should Know\n\n1. I usually have a talk ready and rehearsed. But, I do always tailor it to the event.\n2. My company is interested in covering travel and logging expenses, especially if this is a possible _“sponsorship oppertunity.”_\n3. I am fine with giving my talk for free. Especially for local meetup groups.\n\n## I Expect That…\n\n1. Your conference has a **code of conduct.**\n2. **You advocate for diversity.** Both in your choice of speakers and ways of attracting attendees.\n3. Let me know of all technical and logistical details a few weeks **in advance.**\n\n## Let’s Have a Great Time\n\nI don’t really care about “speaker packages”, expensive hotels, and fancy diners. More than anything I want to have a great time with the organizers and attendees. Both at and away from the conference.\n\nI want to explore your city. I want to get a feel of the local culture. I want to know _what makes this place – this community – tick._\n","source":"speaking/index.md","raw":"---\ntitle: Speaking\nintro: I consider myself an experienced and enthusiastic speaker. I’ve been fortunate enough to speak at events and meetups of various sizes. I do it because I like meeting new people and sharing my passion with others.\nseo_description: Filip is enthusiastic, experienced tech speaker with several conferences and meetups under his belt. Get in touch!\npromo_photo: /content/images/pages/speaker-page-promo.jpg\ndate: 2017-08-06\n---\n\nThe information on this page is for anyone who might want to invite me to their event – be it a conference or local meetup group. Use this page to learn more about me and feel free to get in touch via <a href=\"mailto:filipdanic7@gmail.com\">email</a> or <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">Twitter.</a>\n\n## Past Talks\n\n<div> <a href=\"https://heapcon.io/speakers/filip-danic/its-time-to-reinvent-the-web-without-the-internet/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\" title=\"Heapcon 2019\"> Heapcon 2019 </a> <a href=\"https://www.instagram.com/p/ByH8bfjBpmr/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> INAT Summit 2019 </a> <a href=\"https://belgrade.voxxeddays.com/speakers/filip-danic\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2017 </a> <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Super Admins </a> <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Practical UX </a> <a href=\"https://devdays.lt/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> DevDays Vilnius 2017 </a> <a href=\"http://www.umrezavanje.rs/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Umrežavanje </a> <a href=\"https://belgrade.voxxeddays.com/16/talk/235/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2016 </a> </div>\n\n## Meetups\n\nI’ve also had the pleasure of speaking at various local meetups. These include events organized by <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\">Super Admins</a>, <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\">Practical UX</a>, and student conferences such as <a href=\"https://www.facebook.com/umrezavanje/\" target=\"_blank\">Umrežavanje.</a>\n\n## What You Should Know\n\n1. I usually have a talk ready and rehearsed. But, I do always tailor it to the event.\n2. My company is interested in covering travel and logging expenses, especially if this is a possible _“sponsorship oppertunity.”_\n3. I am fine with giving my talk for free. Especially for local meetup groups.\n\n## I Expect That…\n\n1. Your conference has a **code of conduct.**\n2. **You advocate for diversity.** Both in your choice of speakers and ways of attracting attendees.\n3. Let me know of all technical and logistical details a few weeks **in advance.**\n\n## Let’s Have a Great Time\n\nI don’t really care about “speaker packages”, expensive hotels, and fancy diners. More than anything I want to have a great time with the organizers and attendees. Both at and away from the conference.\n\nI want to explore your city. I want to get a feel of the local culture. I want to know _what makes this place – this community – tick._\n","updated":"2020-09-24T11:18:29.255Z","path":"speaking/index.html","comments":1,"layout":"page","_id":"ckfi82trc000brkriahtr979h","content":"<p>The information on this page is for anyone who might want to invite me to their event – be it a conference or local meetup group. Use this page to learn more about me and feel free to get in touch via <a href=\"mailto:filipdanic7@gmail.com\" target=\"_blank\" rel=\"external\">email</a> or <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">Twitter.</a></p>\n<h2 id=\"Past-Talks\"><a href=\"#Past-Talks\" class=\"headerlink\" title=\"Past Talks\"></a>Past Talks</h2><div> <a href=\"https://heapcon.io/speakers/filip-danic/its-time-to-reinvent-the-web-without-the-internet/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\" title=\"Heapcon 2019\"> Heapcon 2019 </a> <a href=\"https://www.instagram.com/p/ByH8bfjBpmr/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> INAT Summit 2019 </a> <a href=\"https://belgrade.voxxeddays.com/speakers/filip-danic\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2017 </a> <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Super Admins </a> <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Practical UX </a> <a href=\"https://devdays.lt/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> DevDays Vilnius 2017 </a> <a href=\"http://www.umrezavanje.rs/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Umrežavanje </a> <a href=\"https://belgrade.voxxeddays.com/16/talk/235/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2016 </a> </div>\n\n<h2 id=\"Meetups\"><a href=\"#Meetups\" class=\"headerlink\" title=\"Meetups\"></a>Meetups</h2><p>I’ve also had the pleasure of speaking at various local meetups. These include events organized by <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\">Super Admins</a>, <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\">Practical UX</a>, and student conferences such as <a href=\"https://www.facebook.com/umrezavanje/\" target=\"_blank\">Umrežavanje.</a></p>\n<h2 id=\"What-You-Should-Know\"><a href=\"#What-You-Should-Know\" class=\"headerlink\" title=\"What You Should Know\"></a>What You Should Know</h2><ol>\n<li>I usually have a talk ready and rehearsed. But, I do always tailor it to the event.</li>\n<li>My company is interested in covering travel and logging expenses, especially if this is a possible <em>“sponsorship oppertunity.”</em></li>\n<li>I am fine with giving my talk for free. Especially for local meetup groups.</li>\n</ol>\n<h2 id=\"I-Expect-That…\"><a href=\"#I-Expect-That…\" class=\"headerlink\" title=\"I Expect That…\"></a>I Expect That…</h2><ol>\n<li>Your conference has a <strong>code of conduct.</strong></li>\n<li><strong>You advocate for diversity.</strong> Both in your choice of speakers and ways of attracting attendees.</li>\n<li>Let me know of all technical and logistical details a few weeks <strong>in advance.</strong></li>\n</ol>\n<h2 id=\"Let’s-Have-a-Great-Time\"><a href=\"#Let’s-Have-a-Great-Time\" class=\"headerlink\" title=\"Let’s Have a Great Time\"></a>Let’s Have a Great Time</h2><p>I don’t really care about “speaker packages”, expensive hotels, and fancy diners. More than anything I want to have a great time with the organizers and attendees. Both at and away from the conference.</p>\n<p>I want to explore your city. I want to get a feel of the local culture. I want to know <em>what makes this place – this community – tick.</em></p>\n","site":{"data":{}},"excerpt":"","more":"<p>The information on this page is for anyone who might want to invite me to their event – be it a conference or local meetup group. Use this page to learn more about me and feel free to get in touch via <a href=\"mailto:filipdanic7@gmail.com\" target=\"_blank\" rel=\"external\">email</a> or <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\">Twitter.</a></p>\n<h2 id=\"Past-Talks\"><a href=\"#Past-Talks\" class=\"headerlink\" title=\"Past Talks\"></a>Past Talks</h2><div> <a href=\"https://heapcon.io/speakers/filip-danic/its-time-to-reinvent-the-web-without-the-internet/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\" title=\"Heapcon 2019\"> Heapcon 2019 </a> <a href=\"https://www.instagram.com/p/ByH8bfjBpmr/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> INAT Summit 2019 </a> <a href=\"https://belgrade.voxxeddays.com/speakers/filip-danic\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2017 </a> <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Super Admins </a> <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Practical UX </a> <a href=\"https://devdays.lt/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> DevDays Vilnius 2017 </a> <a href=\"http://www.umrezavanje.rs/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Umrežavanje </a> <a href=\"https://belgrade.voxxeddays.com/16/talk/235/\" target=\"_blank\" class=\"link-tag\" rel=\"noopener noreferrer\"> Voxxed Days Belgrade 2016 </a> </div>\n\n<h2 id=\"Meetups\"><a href=\"#Meetups\" class=\"headerlink\" title=\"Meetups\"></a>Meetups</h2><p>I’ve also had the pleasure of speaking at various local meetups. These include events organized by <a href=\"https://www.meetup.com/SuperAdmins/\" target=\"_blank\">Super Admins</a>, <a href=\"https://www.meetup.com/Practical-UX/\" target=\"_blank\">Practical UX</a>, and student conferences such as <a href=\"https://www.facebook.com/umrezavanje/\" target=\"_blank\">Umrežavanje.</a></p>\n<h2 id=\"What-You-Should-Know\"><a href=\"#What-You-Should-Know\" class=\"headerlink\" title=\"What You Should Know\"></a>What You Should Know</h2><ol>\n<li>I usually have a talk ready and rehearsed. But, I do always tailor it to the event.</li>\n<li>My company is interested in covering travel and logging expenses, especially if this is a possible <em>“sponsorship oppertunity.”</em></li>\n<li>I am fine with giving my talk for free. Especially for local meetup groups.</li>\n</ol>\n<h2 id=\"I-Expect-That…\"><a href=\"#I-Expect-That…\" class=\"headerlink\" title=\"I Expect That…\"></a>I Expect That…</h2><ol>\n<li>Your conference has a <strong>code of conduct.</strong></li>\n<li><strong>You advocate for diversity.</strong> Both in your choice of speakers and ways of attracting attendees.</li>\n<li>Let me know of all technical and logistical details a few weeks <strong>in advance.</strong></li>\n</ol>\n<h2 id=\"Let’s-Have-a-Great-Time\"><a href=\"#Let’s-Have-a-Great-Time\" class=\"headerlink\" title=\"Let’s Have a Great Time\"></a>Let’s Have a Great Time</h2><p>I don’t really care about “speaker packages”, expensive hotels, and fancy diners. More than anything I want to have a great time with the organizers and attendees. Both at and away from the conference.</p>\n<p>I want to explore your city. I want to get a feel of the local culture. I want to know <em>what makes this place – this community – tick.</em></p>\n"},{"title":"Open Source Software","intro":"The existence of open source software is one of the most beautiful things about this industry and our craft.","seo_description":"Some thoughts on my commitment to open source software and how we can all chip in.","date":"2018-03-28T00:00:00.000Z","_content":"\n## Moved\n\nThe about page has [been moved here.](/)\n","source":"open-source-software/index.md","raw":"---\ntitle: Open Source Software\nintro: The existence of open source software is one of the most beautiful things about this industry and our craft.\nseo_description: Some thoughts on my commitment to open source software and how we can all chip in.\ndate: 2018-03-28\n---\n\n## Moved\n\nThe about page has [been moved here.](/)\n","updated":"2020-09-24T11:18:29.254Z","path":"open-source-software/index.html","comments":1,"layout":"page","_id":"ckfi82trd000drkri0d6e6c7y","content":"<h2 id=\"Moved\"><a href=\"#Moved\" class=\"headerlink\" title=\"Moved\"></a>Moved</h2><p>The about page has <a href=\"/\">been moved here.</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Moved\"><a href=\"#Moved\" class=\"headerlink\" title=\"Moved\"></a>Moved</h2><p>The about page has <a href=\"/\">been moved here.</a></p>\n"}],"Post":[{"title":"Revisited: Avoiding Booleans When Designing React Components","seo_description":"I’ll clear out 3 misconceptions and provide another big benefit of sticking to the advice outlined in the original article.","promo_photo":"/content/images/2020/designing-react-components-booleans.jpg","date":"2020-01-18T00:00:00.000Z","_content":"\nLast year I wrote a post titled <a href=\"https://spicefactory.co/blog/2019/03/26/how-to-avoid-the-boolean-trap-when-designing-react-components/\" title=\"How to Avoid the Boolean Trap When Designing React Components\" target=\"_blank\">“How to Avoid the Boolean Trap When Designing React Components”</a> for the SpiceFactory blog. I recommend giving that a skim before continuing because this article will revisit some of the points I made back then.\n\nThe post got a lot of traction on the main React subreddit and was even featured on Tyler McGinnis’ newsletter. It was the <a href=\"https://mobile.twitter.com/DanicFilip/status/1210545475662819328/\" title=\"Related Twitter Thread\" target=\"_blank\">5th most popular article of 2019 on his newsletter</a> – which I’m proud of! And since enough eyeballs saw the post, I’ve come across some questions and criticism.\n\nI’ve been meaning to answer some comments, but I figured it’s more productive to compile everything in a followup which I finally got around to writing.\n\nSo here we go, in this post, **I’ll clear out 3 misconceptions and provide another benefit** of sticking to the advice outlined in the article.\n\n## Misconception #1: This Won’t Scale!\n\nSome people pointed out that if you have a `PrimaryButton` that can be `small`, `normal` or `large` this means you will end up with components such as `SmallPrimaryButton`, `NormalPrimaryButton` and `LargePrimaryButton`. And that this can expand to the point of absurdity.\n\nI agree, that is indeed absurd and it _“doesn’t scale.”_\n\nBut, that’s not what I argued for in the article. The article argued for the **removal of booleans through the use of higher encapsulations and enums.**\n\nHigher encapsulation – _via wrapper components_ – is one of the ways that we can achieve that. We don’t have to use it for every single combination.\n\nWe as developers can judge when it is appropriate to go with encapsulation or exposing the enum. It all depends on context!\n\nIn the example above, the `PrimaryButton` wrapper exists because it will be used often and because it is the most important distinction of the button. As for the size attributes, you would use the enum pattern to set it:\n\n```javascript\n<PrimaryButton size={ButtonSizes.SMALL} />\n<PrimaryButton size={ButtonSizes.NORMAL} />\n<PrimaryButton size={ButtonSizes.LARGE} />\n```\n\nAnd honestly, the value of `ButtonSizes.NORMAL` will likely be the default anyway.\n\nNow, there’s nothing wrong with this either:\n\n```javascript\n<Button\n  type={ButtonType.PRIMARY}\n  size={ButtonSizes.NORMAL}\n/>\n```\n\nBut I argue that having the `PrimaryButton` abstraction is optimal as it communicates the intent of the component clearly and fast. Yes, _I could skim through a list of props_ to figure it out, but having `PrimaryButton` is a **faster approach.**\n\n_It also leaves us with more options when it comes to searching the codebase and refactoring. (More on that later.)_\n\n## Misconception #2: You’d Never Make the Original Mistake\n\nSeveral commentators said that the opening example:\n\n```javascript\n<Button primary secondary>\n  Primary or Secondary?\n</Button>\n```\n\n…is something that would never happen. Implying that someone, most likely the developer, would catch it.\n\nThat’s likely the case. Though this was just that an opening example to a much broader set of concepts. It didn’t feel right that some people would dismiss the entire article over that. Even so, I don’t agree with this specific criticism.\n\n**Why would we create APIs that allow for such absurd scenarios** and hope that a human would catch it?\n\nIf the mistake seen in the opening example makes it to the codebase then who knows how long it could stay there. If the original developer fails to catch this, then the only real way to catch this is through code review. (Maybe through some snapshot or e2e tests, but I think it is unlikely given the available tools.)\n\nAnd even so:\n- There are a lot of solo developers out there who don’t have this safety net.\n- Many companies don’t practice code review as part of their process.\n- We know that some code reviewers just skim through things.\n\nIf you’re working in a large team with a tight development process and culture that commits to quality, then you’re likely fine. (_Though in such a culture, I’m assuming a senior engineer wouldn’t allow such a bad API to exist in the first place._)\n\nMy point is that **if it could happen, it probably will.** So, why risk it, especially when there are better patterns available?\n\nThe opening example is a bit easier to spot because the booleans imply the opposite thing. What if it wasn’t so clear? The chances of this slipping through suddenly increase quite a bit.\n\nIt’s also important to keep in mind that good component APIs become even more important if you’re creating libraries that will be used across teams. Good component design should be intuitive.\n\n## Misconception #3: Performance Impact\n\nSeveral comments online asked whether creating these wrapper components could somehow cause performance issues.\n\nI did a simple benchmark that shows 10,000 components (regular in test 1, wrapped in test 2) on the screen without <a href=\"https://web.dev/virtualize-long-lists-react-window/\" target=\"_blank\" title=\"Virtualize large lists with react-window\">list virtualization.</a>\n\nIn these tests, I didn’t notice any difference in terms of average fps, memory consumed, or render time. I used Chrome’s CPU throttling to simulate a lower CPU-power device but both tests performed similar.\n\nI know this benchmark isn’t definitive proof, but it’s also a pretty solid indicator that there are no real performance downsides.\n\nBrowsers are good at optimizing code at runtime, and the pattern seen in this example is rather straightforward from an optimization standpoint.\n\n## Extra Benefit: Quicker and More Reliable Refactoring\n\nLet’s say you introduce a new property that is mandatory whenever a `DangerButton` is used but is otherwise optional for other button types. This might even be a good moment to completely reimplement the `DangerButton`.\n\nSince you’ve encapsulated it already, it will be an easy task for you. You can work directly on the implementation of `DangerButton` or quickly find all uses of it to add the required prop.\n\nIf you, however, followed the `<Button danger>` approach, you will have a much harder time, or at least waste of lot it.\n","source":"_posts/boolean_trap_when_desgining_react_components_revisited.md","raw":"---\ntitle: \"Revisited: Avoiding Booleans When Designing React Components\"\nseo_description: I’ll clear out 3 misconceptions and provide another big benefit of sticking to the advice outlined in the original article.\npromo_photo: /content/images/2020/designing-react-components-booleans.jpg\ndate: 2020-01-18\ntags:\n---\n\nLast year I wrote a post titled <a href=\"https://spicefactory.co/blog/2019/03/26/how-to-avoid-the-boolean-trap-when-designing-react-components/\" title=\"How to Avoid the Boolean Trap When Designing React Components\" target=\"_blank\">“How to Avoid the Boolean Trap When Designing React Components”</a> for the SpiceFactory blog. I recommend giving that a skim before continuing because this article will revisit some of the points I made back then.\n\nThe post got a lot of traction on the main React subreddit and was even featured on Tyler McGinnis’ newsletter. It was the <a href=\"https://mobile.twitter.com/DanicFilip/status/1210545475662819328/\" title=\"Related Twitter Thread\" target=\"_blank\">5th most popular article of 2019 on his newsletter</a> – which I’m proud of! And since enough eyeballs saw the post, I’ve come across some questions and criticism.\n\nI’ve been meaning to answer some comments, but I figured it’s more productive to compile everything in a followup which I finally got around to writing.\n\nSo here we go, in this post, **I’ll clear out 3 misconceptions and provide another benefit** of sticking to the advice outlined in the article.\n\n## Misconception #1: This Won’t Scale!\n\nSome people pointed out that if you have a `PrimaryButton` that can be `small`, `normal` or `large` this means you will end up with components such as `SmallPrimaryButton`, `NormalPrimaryButton` and `LargePrimaryButton`. And that this can expand to the point of absurdity.\n\nI agree, that is indeed absurd and it _“doesn’t scale.”_\n\nBut, that’s not what I argued for in the article. The article argued for the **removal of booleans through the use of higher encapsulations and enums.**\n\nHigher encapsulation – _via wrapper components_ – is one of the ways that we can achieve that. We don’t have to use it for every single combination.\n\nWe as developers can judge when it is appropriate to go with encapsulation or exposing the enum. It all depends on context!\n\nIn the example above, the `PrimaryButton` wrapper exists because it will be used often and because it is the most important distinction of the button. As for the size attributes, you would use the enum pattern to set it:\n\n```javascript\n<PrimaryButton size={ButtonSizes.SMALL} />\n<PrimaryButton size={ButtonSizes.NORMAL} />\n<PrimaryButton size={ButtonSizes.LARGE} />\n```\n\nAnd honestly, the value of `ButtonSizes.NORMAL` will likely be the default anyway.\n\nNow, there’s nothing wrong with this either:\n\n```javascript\n<Button\n  type={ButtonType.PRIMARY}\n  size={ButtonSizes.NORMAL}\n/>\n```\n\nBut I argue that having the `PrimaryButton` abstraction is optimal as it communicates the intent of the component clearly and fast. Yes, _I could skim through a list of props_ to figure it out, but having `PrimaryButton` is a **faster approach.**\n\n_It also leaves us with more options when it comes to searching the codebase and refactoring. (More on that later.)_\n\n## Misconception #2: You’d Never Make the Original Mistake\n\nSeveral commentators said that the opening example:\n\n```javascript\n<Button primary secondary>\n  Primary or Secondary?\n</Button>\n```\n\n…is something that would never happen. Implying that someone, most likely the developer, would catch it.\n\nThat’s likely the case. Though this was just that an opening example to a much broader set of concepts. It didn’t feel right that some people would dismiss the entire article over that. Even so, I don’t agree with this specific criticism.\n\n**Why would we create APIs that allow for such absurd scenarios** and hope that a human would catch it?\n\nIf the mistake seen in the opening example makes it to the codebase then who knows how long it could stay there. If the original developer fails to catch this, then the only real way to catch this is through code review. (Maybe through some snapshot or e2e tests, but I think it is unlikely given the available tools.)\n\nAnd even so:\n- There are a lot of solo developers out there who don’t have this safety net.\n- Many companies don’t practice code review as part of their process.\n- We know that some code reviewers just skim through things.\n\nIf you’re working in a large team with a tight development process and culture that commits to quality, then you’re likely fine. (_Though in such a culture, I’m assuming a senior engineer wouldn’t allow such a bad API to exist in the first place._)\n\nMy point is that **if it could happen, it probably will.** So, why risk it, especially when there are better patterns available?\n\nThe opening example is a bit easier to spot because the booleans imply the opposite thing. What if it wasn’t so clear? The chances of this slipping through suddenly increase quite a bit.\n\nIt’s also important to keep in mind that good component APIs become even more important if you’re creating libraries that will be used across teams. Good component design should be intuitive.\n\n## Misconception #3: Performance Impact\n\nSeveral comments online asked whether creating these wrapper components could somehow cause performance issues.\n\nI did a simple benchmark that shows 10,000 components (regular in test 1, wrapped in test 2) on the screen without <a href=\"https://web.dev/virtualize-long-lists-react-window/\" target=\"_blank\" title=\"Virtualize large lists with react-window\">list virtualization.</a>\n\nIn these tests, I didn’t notice any difference in terms of average fps, memory consumed, or render time. I used Chrome’s CPU throttling to simulate a lower CPU-power device but both tests performed similar.\n\nI know this benchmark isn’t definitive proof, but it’s also a pretty solid indicator that there are no real performance downsides.\n\nBrowsers are good at optimizing code at runtime, and the pattern seen in this example is rather straightforward from an optimization standpoint.\n\n## Extra Benefit: Quicker and More Reliable Refactoring\n\nLet’s say you introduce a new property that is mandatory whenever a `DangerButton` is used but is otherwise optional for other button types. This might even be a good moment to completely reimplement the `DangerButton`.\n\nSince you’ve encapsulated it already, it will be an easy task for you. You can work directly on the implementation of `DangerButton` or quickly find all uses of it to add the required prop.\n\nIf you, however, followed the `<Button danger>` approach, you will have a much harder time, or at least waste of lot it.\n","slug":"boolean_trap_when_desgining_react_components_revisited","published":1,"updated":"2020-09-24T11:18:29.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqp0001rkrimk3uv9i6","content":"<p>Last year I wrote a post titled <a href=\"https://spicefactory.co/blog/2019/03/26/how-to-avoid-the-boolean-trap-when-designing-react-components/\" title=\"How to Avoid the Boolean Trap When Designing React Components\" target=\"_blank\">“How to Avoid the Boolean Trap When Designing React Components”</a> for the SpiceFactory blog. I recommend giving that a skim before continuing because this article will revisit some of the points I made back then.</p>\n<p>The post got a lot of traction on the main React subreddit and was even featured on Tyler McGinnis’ newsletter. It was the <a href=\"https://mobile.twitter.com/DanicFilip/status/1210545475662819328/\" title=\"Related Twitter Thread\" target=\"_blank\">5th most popular article of 2019 on his newsletter</a> – which I’m proud of! And since enough eyeballs saw the post, I’ve come across some questions and criticism.</p>\n<p>I’ve been meaning to answer some comments, but I figured it’s more productive to compile everything in a followup which I finally got around to writing.</p>\n<p>So here we go, in this post, <strong>I’ll clear out 3 misconceptions and provide another benefit</strong> of sticking to the advice outlined in the article.</p>\n<h2 id=\"Misconception-1-This-Won’t-Scale\"><a href=\"#Misconception-1-This-Won’t-Scale\" class=\"headerlink\" title=\"Misconception #1: This Won’t Scale!\"></a>Misconception #1: This Won’t Scale!</h2><p>Some people pointed out that if you have a <code>PrimaryButton</code> that can be <code>small</code>, <code>normal</code> or <code>large</code> this means you will end up with components such as <code>SmallPrimaryButton</code>, <code>NormalPrimaryButton</code> and <code>LargePrimaryButton</code>. And that this can expand to the point of absurdity.</p>\n<p>I agree, that is indeed absurd and it <em>“doesn’t scale.”</em></p>\n<p>But, that’s not what I argued for in the article. The article argued for the <strong>removal of booleans through the use of higher encapsulations and enums.</strong></p>\n<p>Higher encapsulation – <em>via wrapper components</em> – is one of the ways that we can achieve that. We don’t have to use it for every single combination.</p>\n<p>We as developers can judge when it is appropriate to go with encapsulation or exposing the enum. It all depends on context!</p>\n<p>In the example above, the <code>PrimaryButton</code> wrapper exists because it will be used often and because it is the most important distinction of the button. As for the size attributes, you would use the enum pattern to set it:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;PrimaryButton size=&#123;ButtonSizes.SMALL&#125; /&gt;</div><div class=\"line\">&lt;PrimaryButton size=&#123;ButtonSizes.NORMAL&#125; /&gt;</div><div class=\"line\">&lt;PrimaryButton size=&#123;ButtonSizes.LARGE&#125; /&gt;</div></pre></td></tr></table></figure>\n<p>And honestly, the value of <code>ButtonSizes.NORMAL</code> will likely be the default anyway.</p>\n<p>Now, there’s nothing wrong with this either:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;Button</div><div class=\"line\">  type=&#123;ButtonType.PRIMARY&#125;</div><div class=\"line\">  size=&#123;ButtonSizes.NORMAL&#125;</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<p>But I argue that having the <code>PrimaryButton</code> abstraction is optimal as it communicates the intent of the component clearly and fast. Yes, <em>I could skim through a list of props</em> to figure it out, but having <code>PrimaryButton</code> is a <strong>faster approach.</strong></p>\n<p><em>It also leaves us with more options when it comes to searching the codebase and refactoring. (More on that later.)</em></p>\n<h2 id=\"Misconception-2-You’d-Never-Make-the-Original-Mistake\"><a href=\"#Misconception-2-You’d-Never-Make-the-Original-Mistake\" class=\"headerlink\" title=\"Misconception #2: You’d Never Make the Original Mistake\"></a>Misconception #2: You’d Never Make the Original Mistake</h2><p>Several commentators said that the opening example:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;Button primary secondary&gt;</div><div class=\"line\">  Primary or Secondary?</div><div class=\"line\">&lt;/Button&gt;</div></pre></td></tr></table></figure>\n<p>…is something that would never happen. Implying that someone, most likely the developer, would catch it.</p>\n<p>That’s likely the case. Though this was just that an opening example to a much broader set of concepts. It didn’t feel right that some people would dismiss the entire article over that. Even so, I don’t agree with this specific criticism.</p>\n<p><strong>Why would we create APIs that allow for such absurd scenarios</strong> and hope that a human would catch it?</p>\n<p>If the mistake seen in the opening example makes it to the codebase then who knows how long it could stay there. If the original developer fails to catch this, then the only real way to catch this is through code review. (Maybe through some snapshot or e2e tests, but I think it is unlikely given the available tools.)</p>\n<p>And even so:</p>\n<ul>\n<li>There are a lot of solo developers out there who don’t have this safety net.</li>\n<li>Many companies don’t practice code review as part of their process.</li>\n<li>We know that some code reviewers just skim through things.</li>\n</ul>\n<p>If you’re working in a large team with a tight development process and culture that commits to quality, then you’re likely fine. (<em>Though in such a culture, I’m assuming a senior engineer wouldn’t allow such a bad API to exist in the first place.</em>)</p>\n<p>My point is that <strong>if it could happen, it probably will.</strong> So, why risk it, especially when there are better patterns available?</p>\n<p>The opening example is a bit easier to spot because the booleans imply the opposite thing. What if it wasn’t so clear? The chances of this slipping through suddenly increase quite a bit.</p>\n<p>It’s also important to keep in mind that good component APIs become even more important if you’re creating libraries that will be used across teams. Good component design should be intuitive.</p>\n<h2 id=\"Misconception-3-Performance-Impact\"><a href=\"#Misconception-3-Performance-Impact\" class=\"headerlink\" title=\"Misconception #3: Performance Impact\"></a>Misconception #3: Performance Impact</h2><p>Several comments online asked whether creating these wrapper components could somehow cause performance issues.</p>\n<p>I did a simple benchmark that shows 10,000 components (regular in test 1, wrapped in test 2) on the screen without <a href=\"https://web.dev/virtualize-long-lists-react-window/\" target=\"_blank\" title=\"Virtualize large lists with react-window\">list virtualization.</a></p>\n<p>In these tests, I didn’t notice any difference in terms of average fps, memory consumed, or render time. I used Chrome’s CPU throttling to simulate a lower CPU-power device but both tests performed similar.</p>\n<p>I know this benchmark isn’t definitive proof, but it’s also a pretty solid indicator that there are no real performance downsides.</p>\n<p>Browsers are good at optimizing code at runtime, and the pattern seen in this example is rather straightforward from an optimization standpoint.</p>\n<h2 id=\"Extra-Benefit-Quicker-and-More-Reliable-Refactoring\"><a href=\"#Extra-Benefit-Quicker-and-More-Reliable-Refactoring\" class=\"headerlink\" title=\"Extra Benefit: Quicker and More Reliable Refactoring\"></a>Extra Benefit: Quicker and More Reliable Refactoring</h2><p>Let’s say you introduce a new property that is mandatory whenever a <code>DangerButton</code> is used but is otherwise optional for other button types. This might even be a good moment to completely reimplement the <code>DangerButton</code>.</p>\n<p>Since you’ve encapsulated it already, it will be an easy task for you. You can work directly on the implementation of <code>DangerButton</code> or quickly find all uses of it to add the required prop.</p>\n<p>If you, however, followed the <code>&lt;Button danger&gt;</code> approach, you will have a much harder time, or at least waste of lot it.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Last year I wrote a post titled <a href=\"https://spicefactory.co/blog/2019/03/26/how-to-avoid-the-boolean-trap-when-designing-react-components/\" title=\"How to Avoid the Boolean Trap When Designing React Components\" target=\"_blank\">“How to Avoid the Boolean Trap When Designing React Components”</a> for the SpiceFactory blog. I recommend giving that a skim before continuing because this article will revisit some of the points I made back then.</p>\n<p>The post got a lot of traction on the main React subreddit and was even featured on Tyler McGinnis’ newsletter. It was the <a href=\"https://mobile.twitter.com/DanicFilip/status/1210545475662819328/\" title=\"Related Twitter Thread\" target=\"_blank\">5th most popular article of 2019 on his newsletter</a> – which I’m proud of! And since enough eyeballs saw the post, I’ve come across some questions and criticism.</p>\n<p>I’ve been meaning to answer some comments, but I figured it’s more productive to compile everything in a followup which I finally got around to writing.</p>\n<p>So here we go, in this post, <strong>I’ll clear out 3 misconceptions and provide another benefit</strong> of sticking to the advice outlined in the article.</p>\n<h2 id=\"Misconception-1-This-Won’t-Scale\"><a href=\"#Misconception-1-This-Won’t-Scale\" class=\"headerlink\" title=\"Misconception #1: This Won’t Scale!\"></a>Misconception #1: This Won’t Scale!</h2><p>Some people pointed out that if you have a <code>PrimaryButton</code> that can be <code>small</code>, <code>normal</code> or <code>large</code> this means you will end up with components such as <code>SmallPrimaryButton</code>, <code>NormalPrimaryButton</code> and <code>LargePrimaryButton</code>. And that this can expand to the point of absurdity.</p>\n<p>I agree, that is indeed absurd and it <em>“doesn’t scale.”</em></p>\n<p>But, that’s not what I argued for in the article. The article argued for the <strong>removal of booleans through the use of higher encapsulations and enums.</strong></p>\n<p>Higher encapsulation – <em>via wrapper components</em> – is one of the ways that we can achieve that. We don’t have to use it for every single combination.</p>\n<p>We as developers can judge when it is appropriate to go with encapsulation or exposing the enum. It all depends on context!</p>\n<p>In the example above, the <code>PrimaryButton</code> wrapper exists because it will be used often and because it is the most important distinction of the button. As for the size attributes, you would use the enum pattern to set it:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;PrimaryButton size=&#123;ButtonSizes.SMALL&#125; /&gt;</div><div class=\"line\">&lt;PrimaryButton size=&#123;ButtonSizes.NORMAL&#125; /&gt;</div><div class=\"line\">&lt;PrimaryButton size=&#123;ButtonSizes.LARGE&#125; /&gt;</div></pre></td></tr></table></figure>\n<p>And honestly, the value of <code>ButtonSizes.NORMAL</code> will likely be the default anyway.</p>\n<p>Now, there’s nothing wrong with this either:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;Button</div><div class=\"line\">  type=&#123;ButtonType.PRIMARY&#125;</div><div class=\"line\">  size=&#123;ButtonSizes.NORMAL&#125;</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<p>But I argue that having the <code>PrimaryButton</code> abstraction is optimal as it communicates the intent of the component clearly and fast. Yes, <em>I could skim through a list of props</em> to figure it out, but having <code>PrimaryButton</code> is a <strong>faster approach.</strong></p>\n<p><em>It also leaves us with more options when it comes to searching the codebase and refactoring. (More on that later.)</em></p>\n<h2 id=\"Misconception-2-You’d-Never-Make-the-Original-Mistake\"><a href=\"#Misconception-2-You’d-Never-Make-the-Original-Mistake\" class=\"headerlink\" title=\"Misconception #2: You’d Never Make the Original Mistake\"></a>Misconception #2: You’d Never Make the Original Mistake</h2><p>Several commentators said that the opening example:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;Button primary secondary&gt;</div><div class=\"line\">  Primary or Secondary?</div><div class=\"line\">&lt;/Button&gt;</div></pre></td></tr></table></figure>\n<p>…is something that would never happen. Implying that someone, most likely the developer, would catch it.</p>\n<p>That’s likely the case. Though this was just that an opening example to a much broader set of concepts. It didn’t feel right that some people would dismiss the entire article over that. Even so, I don’t agree with this specific criticism.</p>\n<p><strong>Why would we create APIs that allow for such absurd scenarios</strong> and hope that a human would catch it?</p>\n<p>If the mistake seen in the opening example makes it to the codebase then who knows how long it could stay there. If the original developer fails to catch this, then the only real way to catch this is through code review. (Maybe through some snapshot or e2e tests, but I think it is unlikely given the available tools.)</p>\n<p>And even so:</p>\n<ul>\n<li>There are a lot of solo developers out there who don’t have this safety net.</li>\n<li>Many companies don’t practice code review as part of their process.</li>\n<li>We know that some code reviewers just skim through things.</li>\n</ul>\n<p>If you’re working in a large team with a tight development process and culture that commits to quality, then you’re likely fine. (<em>Though in such a culture, I’m assuming a senior engineer wouldn’t allow such a bad API to exist in the first place.</em>)</p>\n<p>My point is that <strong>if it could happen, it probably will.</strong> So, why risk it, especially when there are better patterns available?</p>\n<p>The opening example is a bit easier to spot because the booleans imply the opposite thing. What if it wasn’t so clear? The chances of this slipping through suddenly increase quite a bit.</p>\n<p>It’s also important to keep in mind that good component APIs become even more important if you’re creating libraries that will be used across teams. Good component design should be intuitive.</p>\n<h2 id=\"Misconception-3-Performance-Impact\"><a href=\"#Misconception-3-Performance-Impact\" class=\"headerlink\" title=\"Misconception #3: Performance Impact\"></a>Misconception #3: Performance Impact</h2><p>Several comments online asked whether creating these wrapper components could somehow cause performance issues.</p>\n<p>I did a simple benchmark that shows 10,000 components (regular in test 1, wrapped in test 2) on the screen without <a href=\"https://web.dev/virtualize-long-lists-react-window/\" target=\"_blank\" title=\"Virtualize large lists with react-window\">list virtualization.</a></p>\n<p>In these tests, I didn’t notice any difference in terms of average fps, memory consumed, or render time. I used Chrome’s CPU throttling to simulate a lower CPU-power device but both tests performed similar.</p>\n<p>I know this benchmark isn’t definitive proof, but it’s also a pretty solid indicator that there are no real performance downsides.</p>\n<p>Browsers are good at optimizing code at runtime, and the pattern seen in this example is rather straightforward from an optimization standpoint.</p>\n<h2 id=\"Extra-Benefit-Quicker-and-More-Reliable-Refactoring\"><a href=\"#Extra-Benefit-Quicker-and-More-Reliable-Refactoring\" class=\"headerlink\" title=\"Extra Benefit: Quicker and More Reliable Refactoring\"></a>Extra Benefit: Quicker and More Reliable Refactoring</h2><p>Let’s say you introduce a new property that is mandatory whenever a <code>DangerButton</code> is used but is otherwise optional for other button types. This might even be a good moment to completely reimplement the <code>DangerButton</code>.</p>\n<p>Since you’ve encapsulated it already, it will be an easy task for you. You can work directly on the implementation of <code>DangerButton</code> or quickly find all uses of it to add the required prop.</p>\n<p>If you, however, followed the <code>&lt;Button danger&gt;</code> approach, you will have a much harder time, or at least waste of lot it.</p>\n"},{"title":"Hands-on Web Development With React (Video Course)","seo_description":"Hands-on web development with React is a video course by Filip Danić. Aimed at newcomers who want to learn React.js","promo_photo":"/content/images/2018/react-web-development-course.png","date":"2018-09-28T00:00:00.000Z","_content":"\nAfter nearly 200 hours of work, my first video course is available! _**[Hands-on Web Development with React](https://www.packtpub.com/web-development/hands-web-development-react-video)**_ is available via Packt Publishing and you can actually jump into the course for free [via Mapt.](https://www.packtpub.com/mapt/video/web_development/9781789343915) (Packt’s on-demand course platform.)\n\n## The Elevator Pitch\n\nYou’ll learn how to build a ReactJS web application / SPA from scratch. We’re going to build a job board app where:\n- Visitors can see job postings and search through them via a global search bar.\n- Registered users can add/edit postings (if they’re on a `paid plan`) and view stats on their existing/old ones.\n- Admin users can edit postings and view global analytics in the form of a nice chart.\n\nAlong the way, you’ll also learn about `css-in-js`, mocking, functional programming, and pick up some general software engineering wisdom.\n\nThe course is structured into 7 sections that span across ~4.5 hours. Each with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read [the full list.](#The-Long-List)\n\n_Note: The course is made with React 16 in mind, but works with `15.x.x`. The guide will still be relevant once React 17.0.0 is released._\n\n**Style & Approach:**\n\n- The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.\n- Code files are included with the course.\n  - There is also a [git repository]( https://github.com/PacktPublishing/Hands-on-Web-Development-with-React) where each commit is tagged with the video it related to.\n- Each video follows a similar pattern:\n  - **Step 1:** What’s the problem? How are we planning to solve it?\n  - **Step 2:** What technical concepts do we need?\n  - **Step 3:** Let’s code it out and discus along the way!\n- The sound is recorded with a solid condenser microphone and pop-filter.\n  - An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent. :)\n- There’s a quiz within and at the end of some of the videos, to test if you’ve been paying attention.\n\nNote: if you’ve seen my [YouTube or Twitch videos](https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w) then you should know that the approach in this course is different. The videos are between 4 to 10 minutes long and highly focused. Unlike the streams which last for hours and are fairly _“free form.”_\n\nMy advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.\n\n## The Long List\n\n**You will:**\n- Learn how to bootstrap a React application with Create React App.\n- Create React components and manage application state.\n  - Forms and event handling.\n  - Lists and dynamic item rendering.\n  - Loading indicators and placeholders.\n  - Other common UI components.\n- Understand the why and how behind core React concepts and common patterns.\n  - Lifecycle methods.\n  - React PropTypes.\n  - State lifting and prop drilling.\n  - Callback-controlled data flow.\n  - Functional (Stateless) components.\n- Learn patterns for building reusable ReactJS components.\n- Learn how to communicate with a real server, as well as local mocks.\n- Use CSS-in-JS with `styled-components`.\n- Build a fully-functional, feature-rich SPA with:\n  - Dynamic routing via `react-router-dom`,\n  - support for multiple roles, and\n  - granular access control via feature/permission flags.\n- Learn core functional programming concepts and how they apply to working with React.\n  - Map, filter, reduce!\n  - Pure functions.\n  - Immutability.\n  - Higher order functions and higher order components.\n- Practice Unit and Snapshot Testing with Jest, a JavaScript test runner.\n- Figure out how to configure your build and deploy it to production.\n- Learn about the basics of React’s internals:\n  - The virtual DOM.\n  - The reconciliation algorithm and diffing process.\n\n## What I Left Out\n\nThere are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:\n\n- The React Context API – it’s not something you need at a junior/intermediate level. When you need it, you’ll be able to read up on it and learn it by yourself.\n- Render Props – it’s considered an “advanced pattern”, but this is mainly to it being a new, shiny tool in a React developer’s arsenal. When you need them, you can learn them on your own. They’re not that important at this stage.\n- Redux – it’s common for instructors to bundle Redux into a React course. The two technologies are used widely. However, I feel that Redux is it’s own topic and I am against learning it before you have a good grasp of React.\n - Once you understand the pains of state management, you’re ready to start exploring Redux on your own. There’s also a ton of free resources that would explain it better than I would. [Including one by Dan Abramov, the creator of Redux.](https://egghead.io/courses/getting-started-with-redux)\n","source":"_posts/hands-on-web-development-with-react-course.md","raw":"---\ntitle: Hands-on Web Development with React (Video Course)\nseo_description: Hands-on web development with React is a video course by Filip Danić. Aimed at newcomers who want to learn React.js\npromo_photo: /content/images/2018/react-web-development-course.png\ndate: 2018-09-28\ntags:\n---\n\nAfter nearly 200 hours of work, my first video course is available! _**[Hands-on Web Development with React](https://www.packtpub.com/web-development/hands-web-development-react-video)**_ is available via Packt Publishing and you can actually jump into the course for free [via Mapt.](https://www.packtpub.com/mapt/video/web_development/9781789343915) (Packt’s on-demand course platform.)\n\n## The Elevator Pitch\n\nYou’ll learn how to build a ReactJS web application / SPA from scratch. We’re going to build a job board app where:\n- Visitors can see job postings and search through them via a global search bar.\n- Registered users can add/edit postings (if they’re on a `paid plan`) and view stats on their existing/old ones.\n- Admin users can edit postings and view global analytics in the form of a nice chart.\n\nAlong the way, you’ll also learn about `css-in-js`, mocking, functional programming, and pick up some general software engineering wisdom.\n\nThe course is structured into 7 sections that span across ~4.5 hours. Each with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read [the full list.](#The-Long-List)\n\n_Note: The course is made with React 16 in mind, but works with `15.x.x`. The guide will still be relevant once React 17.0.0 is released._\n\n**Style & Approach:**\n\n- The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.\n- Code files are included with the course.\n  - There is also a [git repository]( https://github.com/PacktPublishing/Hands-on-Web-Development-with-React) where each commit is tagged with the video it related to.\n- Each video follows a similar pattern:\n  - **Step 1:** What’s the problem? How are we planning to solve it?\n  - **Step 2:** What technical concepts do we need?\n  - **Step 3:** Let’s code it out and discus along the way!\n- The sound is recorded with a solid condenser microphone and pop-filter.\n  - An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent. :)\n- There’s a quiz within and at the end of some of the videos, to test if you’ve been paying attention.\n\nNote: if you’ve seen my [YouTube or Twitch videos](https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w) then you should know that the approach in this course is different. The videos are between 4 to 10 minutes long and highly focused. Unlike the streams which last for hours and are fairly _“free form.”_\n\nMy advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.\n\n## The Long List\n\n**You will:**\n- Learn how to bootstrap a React application with Create React App.\n- Create React components and manage application state.\n  - Forms and event handling.\n  - Lists and dynamic item rendering.\n  - Loading indicators and placeholders.\n  - Other common UI components.\n- Understand the why and how behind core React concepts and common patterns.\n  - Lifecycle methods.\n  - React PropTypes.\n  - State lifting and prop drilling.\n  - Callback-controlled data flow.\n  - Functional (Stateless) components.\n- Learn patterns for building reusable ReactJS components.\n- Learn how to communicate with a real server, as well as local mocks.\n- Use CSS-in-JS with `styled-components`.\n- Build a fully-functional, feature-rich SPA with:\n  - Dynamic routing via `react-router-dom`,\n  - support for multiple roles, and\n  - granular access control via feature/permission flags.\n- Learn core functional programming concepts and how they apply to working with React.\n  - Map, filter, reduce!\n  - Pure functions.\n  - Immutability.\n  - Higher order functions and higher order components.\n- Practice Unit and Snapshot Testing with Jest, a JavaScript test runner.\n- Figure out how to configure your build and deploy it to production.\n- Learn about the basics of React’s internals:\n  - The virtual DOM.\n  - The reconciliation algorithm and diffing process.\n\n## What I Left Out\n\nThere are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:\n\n- The React Context API – it’s not something you need at a junior/intermediate level. When you need it, you’ll be able to read up on it and learn it by yourself.\n- Render Props – it’s considered an “advanced pattern”, but this is mainly to it being a new, shiny tool in a React developer’s arsenal. When you need them, you can learn them on your own. They’re not that important at this stage.\n- Redux – it’s common for instructors to bundle Redux into a React course. The two technologies are used widely. However, I feel that Redux is it’s own topic and I am against learning it before you have a good grasp of React.\n - Once you understand the pains of state management, you’re ready to start exploring Redux on your own. There’s also a ton of free resources that would explain it better than I would. [Including one by Dan Abramov, the creator of Redux.](https://egghead.io/courses/getting-started-with-redux)\n","slug":"hands-on-web-development-with-react-course","published":1,"updated":"2020-09-24T11:18:29.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqt0003rkric3wcjc3j","content":"<p>After nearly 200 hours of work, my first video course is available! <em><strong><a href=\"https://www.packtpub.com/web-development/hands-web-development-react-video\" target=\"_blank\" rel=\"external\">Hands-on Web Development with React</a></strong></em> is available via Packt Publishing and you can actually jump into the course for free <a href=\"https://www.packtpub.com/mapt/video/web_development/9781789343915\" target=\"_blank\" rel=\"external\">via Mapt.</a> (Packt’s on-demand course platform.)</p>\n<h2 id=\"The-Elevator-Pitch\"><a href=\"#The-Elevator-Pitch\" class=\"headerlink\" title=\"The Elevator Pitch\"></a>The Elevator Pitch</h2><p>You’ll learn how to build a ReactJS web application / SPA from scratch. We’re going to build a job board app where:</p>\n<ul>\n<li>Visitors can see job postings and search through them via a global search bar.</li>\n<li>Registered users can add/edit postings (if they’re on a <code>paid plan</code>) and view stats on their existing/old ones.</li>\n<li>Admin users can edit postings and view global analytics in the form of a nice chart.</li>\n</ul>\n<p>Along the way, you’ll also learn about <code>css-in-js</code>, mocking, functional programming, and pick up some general software engineering wisdom.</p>\n<p>The course is structured into 7 sections that span across ~4.5 hours. Each with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read <a href=\"#The-Long-List\">the full list.</a></p>\n<p><em>Note: The course is made with React 16 in mind, but works with <code>15.x.x</code>. The guide will still be relevant once React 17.0.0 is released.</em></p>\n<p><strong>Style &amp; Approach:</strong></p>\n<ul>\n<li>The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.</li>\n<li>Code files are included with the course.<ul>\n<li>There is also a <a href=\"https://github.com/PacktPublishing/Hands-on-Web-Development-with-React\" target=\"_blank\" rel=\"external\">git repository</a> where each commit is tagged with the video it related to.</li>\n</ul>\n</li>\n<li>Each video follows a similar pattern:<ul>\n<li><strong>Step 1:</strong> What’s the problem? How are we planning to solve it?</li>\n<li><strong>Step 2:</strong> What technical concepts do we need?</li>\n<li><strong>Step 3:</strong> Let’s code it out and discus along the way!</li>\n</ul>\n</li>\n<li>The sound is recorded with a solid condenser microphone and pop-filter.<ul>\n<li>An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent. :)</li>\n</ul>\n</li>\n<li>There’s a quiz within and at the end of some of the videos, to test if you’ve been paying attention.</li>\n</ul>\n<p>Note: if you’ve seen my <a href=\"https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w\" target=\"_blank\" rel=\"external\">YouTube or Twitch videos</a> then you should know that the approach in this course is different. The videos are between 4 to 10 minutes long and highly focused. Unlike the streams which last for hours and are fairly <em>“free form.”</em></p>\n<p>My advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.</p>\n<h2 id=\"The-Long-List\"><a href=\"#The-Long-List\" class=\"headerlink\" title=\"The Long List\"></a>The Long List</h2><p><strong>You will:</strong></p>\n<ul>\n<li>Learn how to bootstrap a React application with Create React App.</li>\n<li>Create React components and manage application state.<ul>\n<li>Forms and event handling.</li>\n<li>Lists and dynamic item rendering.</li>\n<li>Loading indicators and placeholders.</li>\n<li>Other common UI components.</li>\n</ul>\n</li>\n<li>Understand the why and how behind core React concepts and common patterns.<ul>\n<li>Lifecycle methods.</li>\n<li>React PropTypes.</li>\n<li>State lifting and prop drilling.</li>\n<li>Callback-controlled data flow.</li>\n<li>Functional (Stateless) components.</li>\n</ul>\n</li>\n<li>Learn patterns for building reusable ReactJS components.</li>\n<li>Learn how to communicate with a real server, as well as local mocks.</li>\n<li>Use CSS-in-JS with <code>styled-components</code>.</li>\n<li>Build a fully-functional, feature-rich SPA with:<ul>\n<li>Dynamic routing via <code>react-router-dom</code>,</li>\n<li>support for multiple roles, and</li>\n<li>granular access control via feature/permission flags.</li>\n</ul>\n</li>\n<li>Learn core functional programming concepts and how they apply to working with React.<ul>\n<li>Map, filter, reduce!</li>\n<li>Pure functions.</li>\n<li>Immutability.</li>\n<li>Higher order functions and higher order components.</li>\n</ul>\n</li>\n<li>Practice Unit and Snapshot Testing with Jest, a JavaScript test runner.</li>\n<li>Figure out how to configure your build and deploy it to production.</li>\n<li>Learn about the basics of React’s internals:<ul>\n<li>The virtual DOM.</li>\n<li>The reconciliation algorithm and diffing process.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"What-I-Left-Out\"><a href=\"#What-I-Left-Out\" class=\"headerlink\" title=\"What I Left Out\"></a>What I Left Out</h2><p>There are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:</p>\n<ul>\n<li>The React Context API – it’s not something you need at a junior/intermediate level. When you need it, you’ll be able to read up on it and learn it by yourself.</li>\n<li>Render Props – it’s considered an “advanced pattern”, but this is mainly to it being a new, shiny tool in a React developer’s arsenal. When you need them, you can learn them on your own. They’re not that important at this stage.</li>\n<li>Redux – it’s common for instructors to bundle Redux into a React course. The two technologies are used widely. However, I feel that Redux is it’s own topic and I am against learning it before you have a good grasp of React.<ul>\n<li>Once you understand the pains of state management, you’re ready to start exploring Redux on your own. There’s also a ton of free resources that would explain it better than I would. <a href=\"https://egghead.io/courses/getting-started-with-redux\" target=\"_blank\" rel=\"external\">Including one by Dan Abramov, the creator of Redux.</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>After nearly 200 hours of work, my first video course is available! <em><strong><a href=\"https://www.packtpub.com/web-development/hands-web-development-react-video\" target=\"_blank\" rel=\"external\">Hands-on Web Development with React</a></strong></em> is available via Packt Publishing and you can actually jump into the course for free <a href=\"https://www.packtpub.com/mapt/video/web_development/9781789343915\" target=\"_blank\" rel=\"external\">via Mapt.</a> (Packt’s on-demand course platform.)</p>\n<h2 id=\"The-Elevator-Pitch\"><a href=\"#The-Elevator-Pitch\" class=\"headerlink\" title=\"The Elevator Pitch\"></a>The Elevator Pitch</h2><p>You’ll learn how to build a ReactJS web application / SPA from scratch. We’re going to build a job board app where:</p>\n<ul>\n<li>Visitors can see job postings and search through them via a global search bar.</li>\n<li>Registered users can add/edit postings (if they’re on a <code>paid plan</code>) and view stats on their existing/old ones.</li>\n<li>Admin users can edit postings and view global analytics in the form of a nice chart.</li>\n</ul>\n<p>Along the way, you’ll also learn about <code>css-in-js</code>, mocking, functional programming, and pick up some general software engineering wisdom.</p>\n<p>The course is structured into 7 sections that span across ~4.5 hours. Each with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read <a href=\"#The-Long-List\">the full list.</a></p>\n<p><em>Note: The course is made with React 16 in mind, but works with <code>15.x.x</code>. The guide will still be relevant once React 17.0.0 is released.</em></p>\n<p><strong>Style &amp; Approach:</strong></p>\n<ul>\n<li>The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.</li>\n<li>Code files are included with the course.<ul>\n<li>There is also a <a href=\"https://github.com/PacktPublishing/Hands-on-Web-Development-with-React\" target=\"_blank\" rel=\"external\">git repository</a> where each commit is tagged with the video it related to.</li>\n</ul>\n</li>\n<li>Each video follows a similar pattern:<ul>\n<li><strong>Step 1:</strong> What’s the problem? How are we planning to solve it?</li>\n<li><strong>Step 2:</strong> What technical concepts do we need?</li>\n<li><strong>Step 3:</strong> Let’s code it out and discus along the way!</li>\n</ul>\n</li>\n<li>The sound is recorded with a solid condenser microphone and pop-filter.<ul>\n<li>An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent. :)</li>\n</ul>\n</li>\n<li>There’s a quiz within and at the end of some of the videos, to test if you’ve been paying attention.</li>\n</ul>\n<p>Note: if you’ve seen my <a href=\"https://www.youtube.com/channel/UClctBvKpOUts0_B_kvooo_w\" target=\"_blank\" rel=\"external\">YouTube or Twitch videos</a> then you should know that the approach in this course is different. The videos are between 4 to 10 minutes long and highly focused. Unlike the streams which last for hours and are fairly <em>“free form.”</em></p>\n<p>My advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.</p>\n<h2 id=\"The-Long-List\"><a href=\"#The-Long-List\" class=\"headerlink\" title=\"The Long List\"></a>The Long List</h2><p><strong>You will:</strong></p>\n<ul>\n<li>Learn how to bootstrap a React application with Create React App.</li>\n<li>Create React components and manage application state.<ul>\n<li>Forms and event handling.</li>\n<li>Lists and dynamic item rendering.</li>\n<li>Loading indicators and placeholders.</li>\n<li>Other common UI components.</li>\n</ul>\n</li>\n<li>Understand the why and how behind core React concepts and common patterns.<ul>\n<li>Lifecycle methods.</li>\n<li>React PropTypes.</li>\n<li>State lifting and prop drilling.</li>\n<li>Callback-controlled data flow.</li>\n<li>Functional (Stateless) components.</li>\n</ul>\n</li>\n<li>Learn patterns for building reusable ReactJS components.</li>\n<li>Learn how to communicate with a real server, as well as local mocks.</li>\n<li>Use CSS-in-JS with <code>styled-components</code>.</li>\n<li>Build a fully-functional, feature-rich SPA with:<ul>\n<li>Dynamic routing via <code>react-router-dom</code>,</li>\n<li>support for multiple roles, and</li>\n<li>granular access control via feature/permission flags.</li>\n</ul>\n</li>\n<li>Learn core functional programming concepts and how they apply to working with React.<ul>\n<li>Map, filter, reduce!</li>\n<li>Pure functions.</li>\n<li>Immutability.</li>\n<li>Higher order functions and higher order components.</li>\n</ul>\n</li>\n<li>Practice Unit and Snapshot Testing with Jest, a JavaScript test runner.</li>\n<li>Figure out how to configure your build and deploy it to production.</li>\n<li>Learn about the basics of React’s internals:<ul>\n<li>The virtual DOM.</li>\n<li>The reconciliation algorithm and diffing process.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"What-I-Left-Out\"><a href=\"#What-I-Left-Out\" class=\"headerlink\" title=\"What I Left Out\"></a>What I Left Out</h2><p>There are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:</p>\n<ul>\n<li>The React Context API – it’s not something you need at a junior/intermediate level. When you need it, you’ll be able to read up on it and learn it by yourself.</li>\n<li>Render Props – it’s considered an “advanced pattern”, but this is mainly to it being a new, shiny tool in a React developer’s arsenal. When you need them, you can learn them on your own. They’re not that important at this stage.</li>\n<li>Redux – it’s common for instructors to bundle Redux into a React course. The two technologies are used widely. However, I feel that Redux is it’s own topic and I am against learning it before you have a good grasp of React.<ul>\n<li>Once you understand the pains of state management, you’re ready to start exploring Redux on your own. There’s also a ton of free resources that would explain it better than I would. <a href=\"https://egghead.io/courses/getting-started-with-redux\" target=\"_blank\" rel=\"external\">Including one by Dan Abramov, the creator of Redux.</a></li>\n</ul>\n</li>\n</ul>\n"},{"title":"Flow’s Interface Type, Services, and Mocks","seo_description":"How to use Flow’s Interface Type to create Interfaces for Classes, Services and Mocks.","promo_photo":"/content/images/2018/flow-interface-type.jpg","date":"2018-09-13T00:00:00.000Z","_content":"\nThe `interface` is a well-known concept in the OOP world. If you’ve done a bit of Java in school, you know what it is. In the JavaScript world, we’re in desperate need of some of these basic concepts. But, there’s not enough solutions out there that get the job done well ***and*** have a low barrier to entry.\n\nFor example, I’ve worked with the [Google Closure Compiler](https://github.com/google/closure-compiler/) and [TypeScript.](https://www.typescriptlang.org/) For an existing project, both are a massive investment that’s hard to integrate. Yes, they provide *many other benefits* that potentially justify the cost – *but that’s not our topic right now!*\n\nFor now, we just want an `interface`. And maybe some opt-in type safety? [JSDoc annotations](http://usejsdoc.org/) can do a lot of good for a small cost. But, the tooling provided by Facebook’s Flow is even better – at arguably the same price of JSDoc, if you’re already using Babel!\n\n[Flow](https://flow.org/en/) has a much lower barrier to entry. It took me 5 minute to install and setup everything [following their guide.](https://flow.org/en/docs/install/) And now I’m ready to use `@flow` where I need it – adding it gradually to the codebase!\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/flow-interface-type.jpg\" alt=\"Ceramic tea cups\" /><figcaption>The cup interface, implemented in various ways. Photo by rawpixel via Unsplash.</figcaption></figure>\n\n## Interface Types and Usage in Flow\n\nAn `interface` is a group of related methods with empty bodies that define their arguments and return type. Consider the Vehicle interface.\n\n```javascript\n/* @flow */\ninterface Vehicle {\n  currentSpeed: number;\n  speedUp(amount: number): void;\n  slowDown(amount: number): void;\n  getCurrentSpeed(): number;\n}\n```\n\n```javascript\n/* @flow */\ninterface Aircraft {\n  currentAltitude: number;\n  increaseAltitude(amount: number): void;\n  decreaseAltitude(amount: number): void;\n  getCurrentAltitude(): number;\n}\n```\n\nAnd then have your classes _implement_ them.\n\n```javascript\n/* @flow */\nclass RobotCar implements Vehicle {\n  currentSpeed = 0;\n  speedUp(amount: number) {...};\n  slowDown(amount: number) {...};\n  getCurrentSpeed(amount: number) {...};\n}\n```\n\n```javascript\n/* @flow */\n// implement multiple interfaces!\nclass RobotCopter implements Vehicle, Aircraft {\n  currentSpeed = 0;\n  currentAltitude = 0;\n  speedUp(amount: number) {...};\n  slowDown(amount: number) {...};\n  getCurrentSpeed(amount: number) {...};\n  increaseAltitude(amount: number) {...};\n  decreaseAltitude(amount: number) {...};\n  getCurrentAltitude() {...};\n}\n```\n\nFairly straightforward, don’t you think?\n\n### Generics\n\nAlthough I’ve yet to use generics for something non-trivial, I am comfortable in knowing that Flow supports them. In the context of interfaces, it’s as simple as:\n\n```javascript\n/* @flow */\ninterface MyInterface<A, B, C> {\n  property: A;\n  method(val: B): C;\n}\n```\n\n## Interfaces, Services and Mocks\n\nLet’s say you’re building an app that integrates with many different third-party vendors. For example, financial institution such as banks.\n\nYou expect you might have different variants of some `FinancialService`. They’re all meant to have the same methods, but their implementation varies and they communicate with different vendors.\n\nHaving a `FinancialService` interface and having your `UnityBankService` and `CapitalTwoService` classes implement them, would allow you to have a consistent API.\n\nNow, if you decided to call a method such as `_.getAccountBalance(accountId)`, you won’t really have to care about the underlying class.\n\n> **You’re programming to an interface.**\n\nWhen it comes to _mocking data_, interfaces also make life easier. Let’s say none of the classes above are implemented – but we need mocks for our demo. Or maybe their dependency on third-party vendors makes it hard to have automated unit tests.\n\nWell, let’s just make a `MockFinanceService` that implements `FinancialService`. Then, we can use `.env` configs to specify what we want to be used:\n\n```javascript\nconst service: FinanceService =\n  config.useMocks || config.isTestEnv ?\n  MockFinanceService :\n  getImplementationClass();\n```\n\nIt’s refreshing to see that programming in JavaScript is becoming much better (and more mature!)\n","source":"_posts/flow-interface-type-services-and-mocks.md","raw":"---\ntitle: Flow’s Interface Type, Services, and Mocks\nseo_description: How to use Flow’s Interface Type to create Interfaces for Classes, Services and Mocks.\npromo_photo: /content/images/2018/flow-interface-type.jpg\ndate: 2018-09-13\ntags:\n\n---\n\nThe `interface` is a well-known concept in the OOP world. If you’ve done a bit of Java in school, you know what it is. In the JavaScript world, we’re in desperate need of some of these basic concepts. But, there’s not enough solutions out there that get the job done well ***and*** have a low barrier to entry.\n\nFor example, I’ve worked with the [Google Closure Compiler](https://github.com/google/closure-compiler/) and [TypeScript.](https://www.typescriptlang.org/) For an existing project, both are a massive investment that’s hard to integrate. Yes, they provide *many other benefits* that potentially justify the cost – *but that’s not our topic right now!*\n\nFor now, we just want an `interface`. And maybe some opt-in type safety? [JSDoc annotations](http://usejsdoc.org/) can do a lot of good for a small cost. But, the tooling provided by Facebook’s Flow is even better – at arguably the same price of JSDoc, if you’re already using Babel!\n\n[Flow](https://flow.org/en/) has a much lower barrier to entry. It took me 5 minute to install and setup everything [following their guide.](https://flow.org/en/docs/install/) And now I’m ready to use `@flow` where I need it – adding it gradually to the codebase!\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/flow-interface-type.jpg\" alt=\"Ceramic tea cups\" /><figcaption>The cup interface, implemented in various ways. Photo by rawpixel via Unsplash.</figcaption></figure>\n\n## Interface Types and Usage in Flow\n\nAn `interface` is a group of related methods with empty bodies that define their arguments and return type. Consider the Vehicle interface.\n\n```javascript\n/* @flow */\ninterface Vehicle {\n  currentSpeed: number;\n  speedUp(amount: number): void;\n  slowDown(amount: number): void;\n  getCurrentSpeed(): number;\n}\n```\n\n```javascript\n/* @flow */\ninterface Aircraft {\n  currentAltitude: number;\n  increaseAltitude(amount: number): void;\n  decreaseAltitude(amount: number): void;\n  getCurrentAltitude(): number;\n}\n```\n\nAnd then have your classes _implement_ them.\n\n```javascript\n/* @flow */\nclass RobotCar implements Vehicle {\n  currentSpeed = 0;\n  speedUp(amount: number) {...};\n  slowDown(amount: number) {...};\n  getCurrentSpeed(amount: number) {...};\n}\n```\n\n```javascript\n/* @flow */\n// implement multiple interfaces!\nclass RobotCopter implements Vehicle, Aircraft {\n  currentSpeed = 0;\n  currentAltitude = 0;\n  speedUp(amount: number) {...};\n  slowDown(amount: number) {...};\n  getCurrentSpeed(amount: number) {...};\n  increaseAltitude(amount: number) {...};\n  decreaseAltitude(amount: number) {...};\n  getCurrentAltitude() {...};\n}\n```\n\nFairly straightforward, don’t you think?\n\n### Generics\n\nAlthough I’ve yet to use generics for something non-trivial, I am comfortable in knowing that Flow supports them. In the context of interfaces, it’s as simple as:\n\n```javascript\n/* @flow */\ninterface MyInterface<A, B, C> {\n  property: A;\n  method(val: B): C;\n}\n```\n\n## Interfaces, Services and Mocks\n\nLet’s say you’re building an app that integrates with many different third-party vendors. For example, financial institution such as banks.\n\nYou expect you might have different variants of some `FinancialService`. They’re all meant to have the same methods, but their implementation varies and they communicate with different vendors.\n\nHaving a `FinancialService` interface and having your `UnityBankService` and `CapitalTwoService` classes implement them, would allow you to have a consistent API.\n\nNow, if you decided to call a method such as `_.getAccountBalance(accountId)`, you won’t really have to care about the underlying class.\n\n> **You’re programming to an interface.**\n\nWhen it comes to _mocking data_, interfaces also make life easier. Let’s say none of the classes above are implemented – but we need mocks for our demo. Or maybe their dependency on third-party vendors makes it hard to have automated unit tests.\n\nWell, let’s just make a `MockFinanceService` that implements `FinancialService`. Then, we can use `.env` configs to specify what we want to be used:\n\n```javascript\nconst service: FinanceService =\n  config.useMocks || config.isTestEnv ?\n  MockFinanceService :\n  getImplementationClass();\n```\n\nIt’s refreshing to see that programming in JavaScript is becoming much better (and more mature!)\n","slug":"flow-interface-type-services-and-mocks","published":1,"updated":"2020-09-24T11:18:29.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqv0004rkri4rofomgo","content":"<p>The <code>interface</code> is a well-known concept in the OOP world. If you’ve done a bit of Java in school, you know what it is. In the JavaScript world, we’re in desperate need of some of these basic concepts. But, there’s not enough solutions out there that get the job done well <strong><em>and</em></strong> have a low barrier to entry.</p>\n<p>For example, I’ve worked with the <a href=\"https://github.com/google/closure-compiler/\" target=\"_blank\" rel=\"external\">Google Closure Compiler</a> and <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"external\">TypeScript.</a> For an existing project, both are a massive investment that’s hard to integrate. Yes, they provide <em>many other benefits</em> that potentially justify the cost – <em>but that’s not our topic right now!</em></p>\n<p>For now, we just want an <code>interface</code>. And maybe some opt-in type safety? <a href=\"http://usejsdoc.org/\" target=\"_blank\" rel=\"external\">JSDoc annotations</a> can do a lot of good for a small cost. But, the tooling provided by Facebook’s Flow is even better – at arguably the same price of JSDoc, if you’re already using Babel!</p>\n<p><a href=\"https://flow.org/en/\" target=\"_blank\" rel=\"external\">Flow</a> has a much lower barrier to entry. It took me 5 minute to install and setup everything <a href=\"https://flow.org/en/docs/install/\" target=\"_blank\" rel=\"external\">following their guide.</a> And now I’m ready to use <code>@flow</code> where I need it – adding it gradually to the codebase!</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/flow-interface-type.jpg\" alt=\"Ceramic tea cups\"><figcaption>The cup interface, implemented in various ways. Photo by rawpixel via Unsplash.</figcaption></figure>\n\n<h2 id=\"Interface-Types-and-Usage-in-Flow\"><a href=\"#Interface-Types-and-Usage-in-Flow\" class=\"headerlink\" title=\"Interface Types and Usage in Flow\"></a>Interface Types and Usage in Flow</h2><p>An <code>interface</code> is a group of related methods with empty bodies that define their arguments and return type. Consider the Vehicle interface.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\">interface Vehicle &#123;</div><div class=\"line\">  <span class=\"attr\">currentSpeed</span>: number;</div><div class=\"line\">  speedUp(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  slowDown(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  getCurrentSpeed(): number;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\">interface Aircraft &#123;</div><div class=\"line\">  <span class=\"attr\">currentAltitude</span>: number;</div><div class=\"line\">  increaseAltitude(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  decreaseAltitude(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  getCurrentAltitude(): number;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>And then have your classes <em>implement</em> them.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RobotCar</span> <span class=\"title\">implements</span> <span class=\"title\">Vehicle</span> </span>&#123;</div><div class=\"line\">  currentSpeed = <span class=\"number\">0</span>;</div><div class=\"line\">  speedUp(amount: number) &#123;...&#125;;</div><div class=\"line\">  slowDown(amount: number) &#123;...&#125;;</div><div class=\"line\">  getCurrentSpeed(amount: number) &#123;...&#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\"><span class=\"comment\">// implement multiple interfaces!</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RobotCopter</span> <span class=\"title\">implements</span> <span class=\"title\">Vehicle</span>, <span class=\"title\">Aircraft</span> </span>&#123;</div><div class=\"line\">  currentSpeed = <span class=\"number\">0</span>;</div><div class=\"line\">  currentAltitude = <span class=\"number\">0</span>;</div><div class=\"line\">  speedUp(amount: number) &#123;...&#125;;</div><div class=\"line\">  slowDown(amount: number) &#123;...&#125;;</div><div class=\"line\">  getCurrentSpeed(amount: number) &#123;...&#125;;</div><div class=\"line\">  increaseAltitude(amount: number) &#123;...&#125;;</div><div class=\"line\">  decreaseAltitude(amount: number) &#123;...&#125;;</div><div class=\"line\">  getCurrentAltitude() &#123;...&#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Fairly straightforward, don’t you think?</p>\n<h3 id=\"Generics\"><a href=\"#Generics\" class=\"headerlink\" title=\"Generics\"></a>Generics</h3><p>Although I’ve yet to use generics for something non-trivial, I am comfortable in knowing that Flow supports them. In the context of interfaces, it’s as simple as:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\">interface MyInterface&lt;A, B, C&gt; &#123;</div><div class=\"line\">  <span class=\"attr\">property</span>: A;</div><div class=\"line\">  method(val: B): C;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Interfaces-Services-and-Mocks\"><a href=\"#Interfaces-Services-and-Mocks\" class=\"headerlink\" title=\"Interfaces, Services and Mocks\"></a>Interfaces, Services and Mocks</h2><p>Let’s say you’re building an app that integrates with many different third-party vendors. For example, financial institution such as banks.</p>\n<p>You expect you might have different variants of some <code>FinancialService</code>. They’re all meant to have the same methods, but their implementation varies and they communicate with different vendors.</p>\n<p>Having a <code>FinancialService</code> interface and having your <code>UnityBankService</code> and <code>CapitalTwoService</code> classes implement them, would allow you to have a consistent API.</p>\n<p>Now, if you decided to call a method such as <code>_.getAccountBalance(accountId)</code>, you won’t really have to care about the underlying class.</p>\n<blockquote>\n<p><strong>You’re programming to an interface.</strong></p>\n</blockquote>\n<p>When it comes to <em>mocking data</em>, interfaces also make life easier. Let’s say none of the classes above are implemented – but we need mocks for our demo. Or maybe their dependency on third-party vendors makes it hard to have automated unit tests.</p>\n<p>Well, let’s just make a <code>MockFinanceService</code> that implements <code>FinancialService</code>. Then, we can use <code>.env</code> configs to specify what we want to be used:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> service: FinanceService =</div><div class=\"line\">  config.useMocks || config.isTestEnv ?</div><div class=\"line\">  MockFinanceService :</div><div class=\"line\">  getImplementationClass();</div></pre></td></tr></table></figure>\n<p>It’s refreshing to see that programming in JavaScript is becoming much better (and more mature!)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>The <code>interface</code> is a well-known concept in the OOP world. If you’ve done a bit of Java in school, you know what it is. In the JavaScript world, we’re in desperate need of some of these basic concepts. But, there’s not enough solutions out there that get the job done well <strong><em>and</em></strong> have a low barrier to entry.</p>\n<p>For example, I’ve worked with the <a href=\"https://github.com/google/closure-compiler/\" target=\"_blank\" rel=\"external\">Google Closure Compiler</a> and <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"external\">TypeScript.</a> For an existing project, both are a massive investment that’s hard to integrate. Yes, they provide <em>many other benefits</em> that potentially justify the cost – <em>but that’s not our topic right now!</em></p>\n<p>For now, we just want an <code>interface</code>. And maybe some opt-in type safety? <a href=\"http://usejsdoc.org/\" target=\"_blank\" rel=\"external\">JSDoc annotations</a> can do a lot of good for a small cost. But, the tooling provided by Facebook’s Flow is even better – at arguably the same price of JSDoc, if you’re already using Babel!</p>\n<p><a href=\"https://flow.org/en/\" target=\"_blank\" rel=\"external\">Flow</a> has a much lower barrier to entry. It took me 5 minute to install and setup everything <a href=\"https://flow.org/en/docs/install/\" target=\"_blank\" rel=\"external\">following their guide.</a> And now I’m ready to use <code>@flow</code> where I need it – adding it gradually to the codebase!</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/flow-interface-type.jpg\" alt=\"Ceramic tea cups\"><figcaption>The cup interface, implemented in various ways. Photo by rawpixel via Unsplash.</figcaption></figure>\n\n<h2 id=\"Interface-Types-and-Usage-in-Flow\"><a href=\"#Interface-Types-and-Usage-in-Flow\" class=\"headerlink\" title=\"Interface Types and Usage in Flow\"></a>Interface Types and Usage in Flow</h2><p>An <code>interface</code> is a group of related methods with empty bodies that define their arguments and return type. Consider the Vehicle interface.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\">interface Vehicle &#123;</div><div class=\"line\">  <span class=\"attr\">currentSpeed</span>: number;</div><div class=\"line\">  speedUp(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  slowDown(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  getCurrentSpeed(): number;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\">interface Aircraft &#123;</div><div class=\"line\">  <span class=\"attr\">currentAltitude</span>: number;</div><div class=\"line\">  increaseAltitude(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  decreaseAltitude(amount: number): <span class=\"keyword\">void</span>;</div><div class=\"line\">  getCurrentAltitude(): number;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>And then have your classes <em>implement</em> them.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RobotCar</span> <span class=\"title\">implements</span> <span class=\"title\">Vehicle</span> </span>&#123;</div><div class=\"line\">  currentSpeed = <span class=\"number\">0</span>;</div><div class=\"line\">  speedUp(amount: number) &#123;...&#125;;</div><div class=\"line\">  slowDown(amount: number) &#123;...&#125;;</div><div class=\"line\">  getCurrentSpeed(amount: number) &#123;...&#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\"><span class=\"comment\">// implement multiple interfaces!</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RobotCopter</span> <span class=\"title\">implements</span> <span class=\"title\">Vehicle</span>, <span class=\"title\">Aircraft</span> </span>&#123;</div><div class=\"line\">  currentSpeed = <span class=\"number\">0</span>;</div><div class=\"line\">  currentAltitude = <span class=\"number\">0</span>;</div><div class=\"line\">  speedUp(amount: number) &#123;...&#125;;</div><div class=\"line\">  slowDown(amount: number) &#123;...&#125;;</div><div class=\"line\">  getCurrentSpeed(amount: number) &#123;...&#125;;</div><div class=\"line\">  increaseAltitude(amount: number) &#123;...&#125;;</div><div class=\"line\">  decreaseAltitude(amount: number) &#123;...&#125;;</div><div class=\"line\">  getCurrentAltitude() &#123;...&#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Fairly straightforward, don’t you think?</p>\n<h3 id=\"Generics\"><a href=\"#Generics\" class=\"headerlink\" title=\"Generics\"></a>Generics</h3><p>Although I’ve yet to use generics for something non-trivial, I am comfortable in knowing that Flow supports them. In the context of interfaces, it’s as simple as:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @flow */</span></div><div class=\"line\">interface MyInterface&lt;A, B, C&gt; &#123;</div><div class=\"line\">  <span class=\"attr\">property</span>: A;</div><div class=\"line\">  method(val: B): C;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Interfaces-Services-and-Mocks\"><a href=\"#Interfaces-Services-and-Mocks\" class=\"headerlink\" title=\"Interfaces, Services and Mocks\"></a>Interfaces, Services and Mocks</h2><p>Let’s say you’re building an app that integrates with many different third-party vendors. For example, financial institution such as banks.</p>\n<p>You expect you might have different variants of some <code>FinancialService</code>. They’re all meant to have the same methods, but their implementation varies and they communicate with different vendors.</p>\n<p>Having a <code>FinancialService</code> interface and having your <code>UnityBankService</code> and <code>CapitalTwoService</code> classes implement them, would allow you to have a consistent API.</p>\n<p>Now, if you decided to call a method such as <code>_.getAccountBalance(accountId)</code>, you won’t really have to care about the underlying class.</p>\n<blockquote>\n<p><strong>You’re programming to an interface.</strong></p>\n</blockquote>\n<p>When it comes to <em>mocking data</em>, interfaces also make life easier. Let’s say none of the classes above are implemented – but we need mocks for our demo. Or maybe their dependency on third-party vendors makes it hard to have automated unit tests.</p>\n<p>Well, let’s just make a <code>MockFinanceService</code> that implements <code>FinancialService</code>. Then, we can use <code>.env</code> configs to specify what we want to be used:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> service: FinanceService =</div><div class=\"line\">  config.useMocks || config.isTestEnv ?</div><div class=\"line\">  MockFinanceService :</div><div class=\"line\">  getImplementationClass();</div></pre></td></tr></table></figure>\n<p>It’s refreshing to see that programming in JavaScript is becoming much better (and more mature!)</p>\n"},{"title":"Hands-on MERN Stack Web Development (Video Course)","seo_description":null,"promo_photo":"/content/images/2019/mern-stack-development-course.png","date":"2019-04-01T00:00:00.000Z","_content":"\nAfter several months of work, I’m happy to announce that my second course, _**[Hands-on MERN Stack Web Development ](https://www.packtpub.com/web-development/hands-mern-stack-web-development-video)**_ is available on Packt. You can purchase the course and own it for life, or select a Mapt subscription to get access to all of Packt’s courses on-demand. (There’s a free 10-day trial. 😉)\n\n## MERN Stack Course Overview\n\nDuring the course you’ll build a full MERN Stack web application, front to back, from scratch. It’s an e-commerce shop that includes:\n- Category-based product filtering.\n- A shopping cart that is remembered across sessions and synced across tabs.\n- “Passwordless” login and account creation. (Also known as the “magic link” pattern.)\n- An admin-only area for user and product management.\n\nThe course runs at about 4 and half hours and is structured into 7 sections. The videos are anywhere from 4 to 12 minutes long.\n\nI cover each part of the MERN stack individually at first, and then combine everything for a true “full-stack experience.” Each section sets of with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read [the full list of topics we cover.](#The-Long-List)\n\nIf you’re only interested in React – and want to dive in deep – my [React course is a better resource.](/2018/hands-on-web-development-with-react-course)\n\n## Teaching Style\n\nThis is my second video course and I’ve learn a lot from the feedback on my React web development course.\n\nThe basic idea stayed the same though:\n- The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.\n- Code files are included with the course.\n  - There is also a [git repository](https://github.com/PacktPublishing/Hands-on-MERN-Stack-Web-Development) where each commit is tagged with the video it related to.\n- Each video follows a similar pattern:\n  - **Step 1:** Overview of the problem and formalization of the task.\n  - **Step 2:** What are the technical challenges? Do we need to introduce a new concept?\n  - **Step 3:** Code it out and discus the solution.\n- Depending on where you buy the course, there will be a quiz at the end of some of the videos, to test if you’ve been paying attention.\n\nMy advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.\n\n### Sound Quality\n\nI’m not a native English speaker, but I’ve been told my accent is solid. I know that bad sound quality and/or a difficult accent can put people off. Here’s what you should know:\n- The sound is recorded with a solid condenser microphone and pop-filter over it.\n- My editor from Packt has worked on removing background noise and normalizing the audion volume.\n- An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent.\n\n## The Long List\n\n**When it comes to Node and Express, you’ll learn:**\n- How to setup a Node/Express project from scratch. (With Babel as your code transpiler and `nodemon` for hot file reloding.)\n- All you need to know about Express middleware and write a couple of your own.\n- How to use [Jest](https://jestjs.io/) and function mocking to test middleware and other callback-based modules.\n- How to handle `GET`, `POST`, `UPDATE`, and `DELETE` requests.\n- How to parse HTTP headers and body.\n- How to create [RESTful APIs](https://en.wikipedia.org/wiki/Representational_state_transfer) and provide a full CRUD (Create, Read, Update, Delete) interface.\n- How to implement passwordless authentication with [JSON Web Tokens.](https://jwt.io/)\n- How to connect to MongoDB and manage schemas with `mongoose`.\n\n**When it comes to MongoDB, you’ll learn:**\n- How to run MongoDB from your local machine, inside a Docker container, and/or connect to one in the cloud.\n- The differences between SQL and noSQL databases and what makes MongoDB unique.\n- How to create collections and manage documents.\n- How to manage references between documents and across collections.\n- How to filter and aggregate data based on multiple criteria.\n\n**And as for React, you’ll learn how to:**\n- Bootstrap a new project with [Create React App.](https://github.com/facebook/create-react-app)\n- Create React components and manage application state. Among other things this includes:\n  - Input fields, forms and event handling.\n  - Lists and dynamic item rendering.\n  - Loading indicators and error states.\n  - Other common UI components.\n- Use lifecycle methods, render props, and Synthetic Events.\n- Create Functional (Stateless) Components.\n- Implement a callback-controlled data flow and when (and how) to perform state lifting.\n- Understand the the virtual DOM, the reconciliation algorithm and diffing process.\n- Implement simple typesafety with React PropTypes.\n- Build a fully-functional, feature-rich SPA with:\n  - Dynamic routing via [React Router,](https://reacttraining.com/react-router/)\n  - support for multiple roles, and\n  - granular access control via feature/permission flags.\n- Setup Unit and Snapshot Testing with Jest.\n\n**You can also expect to:**\n- Gain insight into the economics of full-stack development and gain valuable industry insight.\n- Learn about refactoring and improving the quality of your code.\n- Gain experience with CSS Modules and working with the Flexbox model.\n- Learn how to build reusable software – especially when it comes to reusable React components.\n\nSo, go ahead and **[check it out!](https://www.packtpub.com/web-development/hands-mern-stack-web-development-video)**\n\n## What I Left Out\n\nThere are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:\n\n- **The React Context API** – it’s not something you need at the current level. When you need it, you’ll be able to read up on it and learn it by yourself.\n- **React Hooks** – at the time of recording, they were still in early beta. I’m planning on recording a free supplement on the topic. Stay tuned!\n- **MERN.io Boilerplate** – this is a popular starter kit that does get mentioned in the course. If decided not to use it because I see value in learning by start from scratch. Once you complete the course you’ll be able to figure out how to use the boilerplate on your own.\n- **Redux** – it’s a powerful library for state management. But since there is already an amazing [free course by Dan Abramov, the creator of Redux](https://egghead.io/courses/getting-started-with-redux) I think my time was better used to focus on other things.\n","source":"_posts/hands-on-mern-stack-web-development-course.md","raw":"---\ntitle: Hands-on MERN Stack Web Development (Video Course)\nseo_description:\npromo_photo: /content/images/2019/mern-stack-development-course.png\ndate: 2019-04-01\ntags:\n---\n\nAfter several months of work, I’m happy to announce that my second course, _**[Hands-on MERN Stack Web Development ](https://www.packtpub.com/web-development/hands-mern-stack-web-development-video)**_ is available on Packt. You can purchase the course and own it for life, or select a Mapt subscription to get access to all of Packt’s courses on-demand. (There’s a free 10-day trial. 😉)\n\n## MERN Stack Course Overview\n\nDuring the course you’ll build a full MERN Stack web application, front to back, from scratch. It’s an e-commerce shop that includes:\n- Category-based product filtering.\n- A shopping cart that is remembered across sessions and synced across tabs.\n- “Passwordless” login and account creation. (Also known as the “magic link” pattern.)\n- An admin-only area for user and product management.\n\nThe course runs at about 4 and half hours and is structured into 7 sections. The videos are anywhere from 4 to 12 minutes long.\n\nI cover each part of the MERN stack individually at first, and then combine everything for a true “full-stack experience.” Each section sets of with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read [the full list of topics we cover.](#The-Long-List)\n\nIf you’re only interested in React – and want to dive in deep – my [React course is a better resource.](/2018/hands-on-web-development-with-react-course)\n\n## Teaching Style\n\nThis is my second video course and I’ve learn a lot from the feedback on my React web development course.\n\nThe basic idea stayed the same though:\n- The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.\n- Code files are included with the course.\n  - There is also a [git repository](https://github.com/PacktPublishing/Hands-on-MERN-Stack-Web-Development) where each commit is tagged with the video it related to.\n- Each video follows a similar pattern:\n  - **Step 1:** Overview of the problem and formalization of the task.\n  - **Step 2:** What are the technical challenges? Do we need to introduce a new concept?\n  - **Step 3:** Code it out and discus the solution.\n- Depending on where you buy the course, there will be a quiz at the end of some of the videos, to test if you’ve been paying attention.\n\nMy advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.\n\n### Sound Quality\n\nI’m not a native English speaker, but I’ve been told my accent is solid. I know that bad sound quality and/or a difficult accent can put people off. Here’s what you should know:\n- The sound is recorded with a solid condenser microphone and pop-filter over it.\n- My editor from Packt has worked on removing background noise and normalizing the audion volume.\n- An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent.\n\n## The Long List\n\n**When it comes to Node and Express, you’ll learn:**\n- How to setup a Node/Express project from scratch. (With Babel as your code transpiler and `nodemon` for hot file reloding.)\n- All you need to know about Express middleware and write a couple of your own.\n- How to use [Jest](https://jestjs.io/) and function mocking to test middleware and other callback-based modules.\n- How to handle `GET`, `POST`, `UPDATE`, and `DELETE` requests.\n- How to parse HTTP headers and body.\n- How to create [RESTful APIs](https://en.wikipedia.org/wiki/Representational_state_transfer) and provide a full CRUD (Create, Read, Update, Delete) interface.\n- How to implement passwordless authentication with [JSON Web Tokens.](https://jwt.io/)\n- How to connect to MongoDB and manage schemas with `mongoose`.\n\n**When it comes to MongoDB, you’ll learn:**\n- How to run MongoDB from your local machine, inside a Docker container, and/or connect to one in the cloud.\n- The differences between SQL and noSQL databases and what makes MongoDB unique.\n- How to create collections and manage documents.\n- How to manage references between documents and across collections.\n- How to filter and aggregate data based on multiple criteria.\n\n**And as for React, you’ll learn how to:**\n- Bootstrap a new project with [Create React App.](https://github.com/facebook/create-react-app)\n- Create React components and manage application state. Among other things this includes:\n  - Input fields, forms and event handling.\n  - Lists and dynamic item rendering.\n  - Loading indicators and error states.\n  - Other common UI components.\n- Use lifecycle methods, render props, and Synthetic Events.\n- Create Functional (Stateless) Components.\n- Implement a callback-controlled data flow and when (and how) to perform state lifting.\n- Understand the the virtual DOM, the reconciliation algorithm and diffing process.\n- Implement simple typesafety with React PropTypes.\n- Build a fully-functional, feature-rich SPA with:\n  - Dynamic routing via [React Router,](https://reacttraining.com/react-router/)\n  - support for multiple roles, and\n  - granular access control via feature/permission flags.\n- Setup Unit and Snapshot Testing with Jest.\n\n**You can also expect to:**\n- Gain insight into the economics of full-stack development and gain valuable industry insight.\n- Learn about refactoring and improving the quality of your code.\n- Gain experience with CSS Modules and working with the Flexbox model.\n- Learn how to build reusable software – especially when it comes to reusable React components.\n\nSo, go ahead and **[check it out!](https://www.packtpub.com/web-development/hands-mern-stack-web-development-video)**\n\n## What I Left Out\n\nThere are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:\n\n- **The React Context API** – it’s not something you need at the current level. When you need it, you’ll be able to read up on it and learn it by yourself.\n- **React Hooks** – at the time of recording, they were still in early beta. I’m planning on recording a free supplement on the topic. Stay tuned!\n- **MERN.io Boilerplate** – this is a popular starter kit that does get mentioned in the course. If decided not to use it because I see value in learning by start from scratch. Once you complete the course you’ll be able to figure out how to use the boilerplate on your own.\n- **Redux** – it’s a powerful library for state management. But since there is already an amazing [free course by Dan Abramov, the creator of Redux](https://egghead.io/courses/getting-started-with-redux) I think my time was better used to focus on other things.\n","slug":"hands-on-mern-stack-web-development-course","published":1,"updated":"2020-09-24T11:18:29.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqw0005rkricibz7ixc","content":"<p>After several months of work, I’m happy to announce that my second course, <em><strong><a href=\"https://www.packtpub.com/web-development/hands-mern-stack-web-development-video\" target=\"_blank\" rel=\"external\">Hands-on MERN Stack Web Development </a></strong></em> is available on Packt. You can purchase the course and own it for life, or select a Mapt subscription to get access to all of Packt’s courses on-demand. (There’s a free 10-day trial. 😉)</p>\n<h2 id=\"MERN-Stack-Course-Overview\"><a href=\"#MERN-Stack-Course-Overview\" class=\"headerlink\" title=\"MERN Stack Course Overview\"></a>MERN Stack Course Overview</h2><p>During the course you’ll build a full MERN Stack web application, front to back, from scratch. It’s an e-commerce shop that includes:</p>\n<ul>\n<li>Category-based product filtering.</li>\n<li>A shopping cart that is remembered across sessions and synced across tabs.</li>\n<li>“Passwordless” login and account creation. (Also known as the “magic link” pattern.)</li>\n<li>An admin-only area for user and product management.</li>\n</ul>\n<p>The course runs at about 4 and half hours and is structured into 7 sections. The videos are anywhere from 4 to 12 minutes long.</p>\n<p>I cover each part of the MERN stack individually at first, and then combine everything for a true “full-stack experience.” Each section sets of with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read <a href=\"#The-Long-List\">the full list of topics we cover.</a></p>\n<p>If you’re only interested in React – and want to dive in deep – my <a href=\"/2018/hands-on-web-development-with-react-course\">React course is a better resource.</a></p>\n<h2 id=\"Teaching-Style\"><a href=\"#Teaching-Style\" class=\"headerlink\" title=\"Teaching Style\"></a>Teaching Style</h2><p>This is my second video course and I’ve learn a lot from the feedback on my React web development course.</p>\n<p>The basic idea stayed the same though:</p>\n<ul>\n<li>The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.</li>\n<li>Code files are included with the course.<ul>\n<li>There is also a <a href=\"https://github.com/PacktPublishing/Hands-on-MERN-Stack-Web-Development\" target=\"_blank\" rel=\"external\">git repository</a> where each commit is tagged with the video it related to.</li>\n</ul>\n</li>\n<li>Each video follows a similar pattern:<ul>\n<li><strong>Step 1:</strong> Overview of the problem and formalization of the task.</li>\n<li><strong>Step 2:</strong> What are the technical challenges? Do we need to introduce a new concept?</li>\n<li><strong>Step 3:</strong> Code it out and discus the solution.</li>\n</ul>\n</li>\n<li>Depending on where you buy the course, there will be a quiz at the end of some of the videos, to test if you’ve been paying attention.</li>\n</ul>\n<p>My advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.</p>\n<h3 id=\"Sound-Quality\"><a href=\"#Sound-Quality\" class=\"headerlink\" title=\"Sound Quality\"></a>Sound Quality</h3><p>I’m not a native English speaker, but I’ve been told my accent is solid. I know that bad sound quality and/or a difficult accent can put people off. Here’s what you should know:</p>\n<ul>\n<li>The sound is recorded with a solid condenser microphone and pop-filter over it.</li>\n<li>My editor from Packt has worked on removing background noise and normalizing the audion volume.</li>\n<li>An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent.</li>\n</ul>\n<h2 id=\"The-Long-List\"><a href=\"#The-Long-List\" class=\"headerlink\" title=\"The Long List\"></a>The Long List</h2><p><strong>When it comes to Node and Express, you’ll learn:</strong></p>\n<ul>\n<li>How to setup a Node/Express project from scratch. (With Babel as your code transpiler and <code>nodemon</code> for hot file reloding.)</li>\n<li>All you need to know about Express middleware and write a couple of your own.</li>\n<li>How to use <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"external\">Jest</a> and function mocking to test middleware and other callback-based modules.</li>\n<li>How to handle <code>GET</code>, <code>POST</code>, <code>UPDATE</code>, and <code>DELETE</code> requests.</li>\n<li>How to parse HTTP headers and body.</li>\n<li>How to create <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\" target=\"_blank\" rel=\"external\">RESTful APIs</a> and provide a full CRUD (Create, Read, Update, Delete) interface.</li>\n<li>How to implement passwordless authentication with <a href=\"https://jwt.io/\" target=\"_blank\" rel=\"external\">JSON Web Tokens.</a></li>\n<li>How to connect to MongoDB and manage schemas with <code>mongoose</code>.</li>\n</ul>\n<p><strong>When it comes to MongoDB, you’ll learn:</strong></p>\n<ul>\n<li>How to run MongoDB from your local machine, inside a Docker container, and/or connect to one in the cloud.</li>\n<li>The differences between SQL and noSQL databases and what makes MongoDB unique.</li>\n<li>How to create collections and manage documents.</li>\n<li>How to manage references between documents and across collections.</li>\n<li>How to filter and aggregate data based on multiple criteria.</li>\n</ul>\n<p><strong>And as for React, you’ll learn how to:</strong></p>\n<ul>\n<li>Bootstrap a new project with <a href=\"https://github.com/facebook/create-react-app\" target=\"_blank\" rel=\"external\">Create React App.</a></li>\n<li>Create React components and manage application state. Among other things this includes:<ul>\n<li>Input fields, forms and event handling.</li>\n<li>Lists and dynamic item rendering.</li>\n<li>Loading indicators and error states.</li>\n<li>Other common UI components.</li>\n</ul>\n</li>\n<li>Use lifecycle methods, render props, and Synthetic Events.</li>\n<li>Create Functional (Stateless) Components.</li>\n<li>Implement a callback-controlled data flow and when (and how) to perform state lifting.</li>\n<li>Understand the the virtual DOM, the reconciliation algorithm and diffing process.</li>\n<li>Implement simple typesafety with React PropTypes.</li>\n<li>Build a fully-functional, feature-rich SPA with:<ul>\n<li>Dynamic routing via <a href=\"https://reacttraining.com/react-router/\" target=\"_blank\" rel=\"external\">React Router,</a></li>\n<li>support for multiple roles, and</li>\n<li>granular access control via feature/permission flags.</li>\n</ul>\n</li>\n<li>Setup Unit and Snapshot Testing with Jest.</li>\n</ul>\n<p><strong>You can also expect to:</strong></p>\n<ul>\n<li>Gain insight into the economics of full-stack development and gain valuable industry insight.</li>\n<li>Learn about refactoring and improving the quality of your code.</li>\n<li>Gain experience with CSS Modules and working with the Flexbox model.</li>\n<li>Learn how to build reusable software – especially when it comes to reusable React components.</li>\n</ul>\n<p>So, go ahead and <strong><a href=\"https://www.packtpub.com/web-development/hands-mern-stack-web-development-video\" target=\"_blank\" rel=\"external\">check it out!</a></strong></p>\n<h2 id=\"What-I-Left-Out\"><a href=\"#What-I-Left-Out\" class=\"headerlink\" title=\"What I Left Out\"></a>What I Left Out</h2><p>There are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:</p>\n<ul>\n<li><strong>The React Context API</strong> – it’s not something you need at the current level. When you need it, you’ll be able to read up on it and learn it by yourself.</li>\n<li><strong>React Hooks</strong> – at the time of recording, they were still in early beta. I’m planning on recording a free supplement on the topic. Stay tuned!</li>\n<li><strong>MERN.io Boilerplate</strong> – this is a popular starter kit that does get mentioned in the course. If decided not to use it because I see value in learning by start from scratch. Once you complete the course you’ll be able to figure out how to use the boilerplate on your own.</li>\n<li><strong>Redux</strong> – it’s a powerful library for state management. But since there is already an amazing <a href=\"https://egghead.io/courses/getting-started-with-redux\" target=\"_blank\" rel=\"external\">free course by Dan Abramov, the creator of Redux</a> I think my time was better used to focus on other things.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>After several months of work, I’m happy to announce that my second course, <em><strong><a href=\"https://www.packtpub.com/web-development/hands-mern-stack-web-development-video\" target=\"_blank\" rel=\"external\">Hands-on MERN Stack Web Development </a></strong></em> is available on Packt. You can purchase the course and own it for life, or select a Mapt subscription to get access to all of Packt’s courses on-demand. (There’s a free 10-day trial. 😉)</p>\n<h2 id=\"MERN-Stack-Course-Overview\"><a href=\"#MERN-Stack-Course-Overview\" class=\"headerlink\" title=\"MERN Stack Course Overview\"></a>MERN Stack Course Overview</h2><p>During the course you’ll build a full MERN Stack web application, front to back, from scratch. It’s an e-commerce shop that includes:</p>\n<ul>\n<li>Category-based product filtering.</li>\n<li>A shopping cart that is remembered across sessions and synced across tabs.</li>\n<li>“Passwordless” login and account creation. (Also known as the “magic link” pattern.)</li>\n<li>An admin-only area for user and product management.</li>\n</ul>\n<p>The course runs at about 4 and half hours and is structured into 7 sections. The videos are anywhere from 4 to 12 minutes long.</p>\n<p>I cover each part of the MERN stack individually at first, and then combine everything for a true “full-stack experience.” Each section sets of with a particular set of goals and challenges that we’ll overcome. You can skip ahead and read <a href=\"#The-Long-List\">the full list of topics we cover.</a></p>\n<p>If you’re only interested in React – and want to dive in deep – my <a href=\"/2018/hands-on-web-development-with-react-course\">React course is a better resource.</a></p>\n<h2 id=\"Teaching-Style\"><a href=\"#Teaching-Style\" class=\"headerlink\" title=\"Teaching Style\"></a>Teaching Style</h2><p>This is my second video course and I’ve learn a lot from the feedback on my React web development course.</p>\n<p>The basic idea stayed the same though:</p>\n<ul>\n<li>The videos are mostly a mix of talking and live coding, accompanied by slides when discussing theoretical concepts.</li>\n<li>Code files are included with the course.<ul>\n<li>There is also a <a href=\"https://github.com/PacktPublishing/Hands-on-MERN-Stack-Web-Development\" target=\"_blank\" rel=\"external\">git repository</a> where each commit is tagged with the video it related to.</li>\n</ul>\n</li>\n<li>Each video follows a similar pattern:<ul>\n<li><strong>Step 1:</strong> Overview of the problem and formalization of the task.</li>\n<li><strong>Step 2:</strong> What are the technical challenges? Do we need to introduce a new concept?</li>\n<li><strong>Step 3:</strong> Code it out and discus the solution.</li>\n</ul>\n</li>\n<li>Depending on where you buy the course, there will be a quiz at the end of some of the videos, to test if you’ve been paying attention.</li>\n</ul>\n<p>My advice for consuming the content of the course is to watch it in chunks between 2 to 6 minutes and then pause and try writing some code yourself.</p>\n<h3 id=\"Sound-Quality\"><a href=\"#Sound-Quality\" class=\"headerlink\" title=\"Sound Quality\"></a>Sound Quality</h3><p>I’m not a native English speaker, but I’ve been told my accent is solid. I know that bad sound quality and/or a difficult accent can put people off. Here’s what you should know:</p>\n<ul>\n<li>The sound is recorded with a solid condenser microphone and pop-filter over it.</li>\n<li>My editor from Packt has worked on removing background noise and normalizing the audion volume.</li>\n<li>An introductory video at the bottom of the course landing page will give you a good idea of the sound quality and my accent.</li>\n</ul>\n<h2 id=\"The-Long-List\"><a href=\"#The-Long-List\" class=\"headerlink\" title=\"The Long List\"></a>The Long List</h2><p><strong>When it comes to Node and Express, you’ll learn:</strong></p>\n<ul>\n<li>How to setup a Node/Express project from scratch. (With Babel as your code transpiler and <code>nodemon</code> for hot file reloding.)</li>\n<li>All you need to know about Express middleware and write a couple of your own.</li>\n<li>How to use <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"external\">Jest</a> and function mocking to test middleware and other callback-based modules.</li>\n<li>How to handle <code>GET</code>, <code>POST</code>, <code>UPDATE</code>, and <code>DELETE</code> requests.</li>\n<li>How to parse HTTP headers and body.</li>\n<li>How to create <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\" target=\"_blank\" rel=\"external\">RESTful APIs</a> and provide a full CRUD (Create, Read, Update, Delete) interface.</li>\n<li>How to implement passwordless authentication with <a href=\"https://jwt.io/\" target=\"_blank\" rel=\"external\">JSON Web Tokens.</a></li>\n<li>How to connect to MongoDB and manage schemas with <code>mongoose</code>.</li>\n</ul>\n<p><strong>When it comes to MongoDB, you’ll learn:</strong></p>\n<ul>\n<li>How to run MongoDB from your local machine, inside a Docker container, and/or connect to one in the cloud.</li>\n<li>The differences between SQL and noSQL databases and what makes MongoDB unique.</li>\n<li>How to create collections and manage documents.</li>\n<li>How to manage references between documents and across collections.</li>\n<li>How to filter and aggregate data based on multiple criteria.</li>\n</ul>\n<p><strong>And as for React, you’ll learn how to:</strong></p>\n<ul>\n<li>Bootstrap a new project with <a href=\"https://github.com/facebook/create-react-app\" target=\"_blank\" rel=\"external\">Create React App.</a></li>\n<li>Create React components and manage application state. Among other things this includes:<ul>\n<li>Input fields, forms and event handling.</li>\n<li>Lists and dynamic item rendering.</li>\n<li>Loading indicators and error states.</li>\n<li>Other common UI components.</li>\n</ul>\n</li>\n<li>Use lifecycle methods, render props, and Synthetic Events.</li>\n<li>Create Functional (Stateless) Components.</li>\n<li>Implement a callback-controlled data flow and when (and how) to perform state lifting.</li>\n<li>Understand the the virtual DOM, the reconciliation algorithm and diffing process.</li>\n<li>Implement simple typesafety with React PropTypes.</li>\n<li>Build a fully-functional, feature-rich SPA with:<ul>\n<li>Dynamic routing via <a href=\"https://reacttraining.com/react-router/\" target=\"_blank\" rel=\"external\">React Router,</a></li>\n<li>support for multiple roles, and</li>\n<li>granular access control via feature/permission flags.</li>\n</ul>\n</li>\n<li>Setup Unit and Snapshot Testing with Jest.</li>\n</ul>\n<p><strong>You can also expect to:</strong></p>\n<ul>\n<li>Gain insight into the economics of full-stack development and gain valuable industry insight.</li>\n<li>Learn about refactoring and improving the quality of your code.</li>\n<li>Gain experience with CSS Modules and working with the Flexbox model.</li>\n<li>Learn how to build reusable software – especially when it comes to reusable React components.</li>\n</ul>\n<p>So, go ahead and <strong><a href=\"https://www.packtpub.com/web-development/hands-mern-stack-web-development-video\" target=\"_blank\" rel=\"external\">check it out!</a></strong></p>\n<h2 id=\"What-I-Left-Out\"><a href=\"#What-I-Left-Out\" class=\"headerlink\" title=\"What I Left Out\"></a>What I Left Out</h2><p>There are also some things that I’ve left out and that you might have expected would be in the course. I think it’s fair to mention those:</p>\n<ul>\n<li><strong>The React Context API</strong> – it’s not something you need at the current level. When you need it, you’ll be able to read up on it and learn it by yourself.</li>\n<li><strong>React Hooks</strong> – at the time of recording, they were still in early beta. I’m planning on recording a free supplement on the topic. Stay tuned!</li>\n<li><strong>MERN.io Boilerplate</strong> – this is a popular starter kit that does get mentioned in the course. If decided not to use it because I see value in learning by start from scratch. Once you complete the course you’ll be able to figure out how to use the boilerplate on your own.</li>\n<li><strong>Redux</strong> – it’s a powerful library for state management. But since there is already an amazing <a href=\"https://egghead.io/courses/getting-started-with-redux\" target=\"_blank\" rel=\"external\">free course by Dan Abramov, the creator of Redux</a> I think my time was better used to focus on other things.</li>\n</ul>\n"},{"title":"How to Use Option (Alt) + Arrows to Navigate Between Words in iTerm2","seo_description":"A quick guide on how to use Alt + left arrow and Alt + right arrow to move between words with iTerm2. Or rather backward-word and forward-word.","promo_photo":"/content/images/2018/iterm2_option_keyescape_chars.png","date":"2018-08-30T00:00:00.000Z","_content":"\nI’ll be honest, I’m not much of a terminal power user. I use iTerm2 as my terminal emulator and there are some things I like to customize. And it bugs me how cumbersome it is to enable the ability to switch between words with <kbd>⌥</kbd> + <kbd>←</kbd> and <kbd>⌥</kbd> + <kbd>→</kbd>.\n\nApparently, this is actually called _backward-word_ and _forward-word._ You can see your current setup with:\n\n```bash\nbindkey -L | grep backward-word\n```\n\nAnd:\n\n```bash\nbindkey -L | grep forward-word\n```\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/keybinds_backward_word_forward_word.png\" alt=\"Sample output of running the previous command.\" /><figcaption>Sample output.</figcaption></figure>\n\nYou might even like the defaults. (I doubt it.) Now, you can manually set the binding keys via the terminal of course, but I don’t really get how it’s used and I hate typing out character codes by hand. 🙂\n\nSo instead, I’m going to document this method that uses the iTerm2 preferences menu – for future reference to myself and to others who might have the same problem. (Please note that this is specific to this emulator.)\n\n## How to Configure backward-word and forward-word in iTerm2\n\nFirst, in iTerm2, go to **Preferences > Profile > Keys**.\n\nHere you need to set your left <kbd>⌥</kbd> key to act as an _escape character._ Or _Esc+_ as it is written. (See screenshot.)\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_option_keyescape_chars.png\" alt=\"Left Option Key Settings\" /><figcaption>Left Option Key Settings</figcaption></figure>\n\nThen, in your **Key Mappings** on the same screen, we need to redefine the shortcuts for our desired combination.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2-key-mappings.png\" alt=\"Screenshot of Key Mappings Section\" /><figcaption>Screenshot of Key Mappings Section</figcaption></figure>\n\nFind the current shortcut for <kbd>⌥</kbd> + <kbd>←</kbd> (or create a new one), with the following settings:\n\n- _Action:_ **Send Escape Sequence**\n- _Esc +:_ <kbd>b</kbd>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_backward_word.png\" alt=\"Configure backward-word\" /><figcaption>Configure backward-word</figcaption></figure>\n\nFind or create a shortcut for <kbd>⌥</kbd> + <kbd>→</kbd> as well with:\n\n- _Action:_ **Send Escape Sequence**\n- _Esc +:_ <kbd>f</kbd>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_forward_word.png\" alt=\"Configure backward-word\" /><figcaption>Configure forward-word</figcaption></figure>\n\nAnd that’s it, happy hacking! 🎉 If you end up having a lot of these presets, it would be a good idea to export and save them somewhere for future use.\n","source":"_posts/how_to_use_alt_arrows_to_navigate_between_words_in_iterm2.md","raw":"---\ntitle: How to Use Option (Alt) + Arrows To Navigate Between Words in iTerm2\nseo_description: A quick guide on how to use Alt + left arrow and Alt + right arrow to move between words with iTerm2. Or rather backward-word and forward-word.\npromo_photo: /content/images/2018/iterm2_option_keyescape_chars.png\ndate: 2018-08-30\ntags:\n---\n\nI’ll be honest, I’m not much of a terminal power user. I use iTerm2 as my terminal emulator and there are some things I like to customize. And it bugs me how cumbersome it is to enable the ability to switch between words with <kbd>⌥</kbd> + <kbd>←</kbd> and <kbd>⌥</kbd> + <kbd>→</kbd>.\n\nApparently, this is actually called _backward-word_ and _forward-word._ You can see your current setup with:\n\n```bash\nbindkey -L | grep backward-word\n```\n\nAnd:\n\n```bash\nbindkey -L | grep forward-word\n```\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/keybinds_backward_word_forward_word.png\" alt=\"Sample output of running the previous command.\" /><figcaption>Sample output.</figcaption></figure>\n\nYou might even like the defaults. (I doubt it.) Now, you can manually set the binding keys via the terminal of course, but I don’t really get how it’s used and I hate typing out character codes by hand. 🙂\n\nSo instead, I’m going to document this method that uses the iTerm2 preferences menu – for future reference to myself and to others who might have the same problem. (Please note that this is specific to this emulator.)\n\n## How to Configure backward-word and forward-word in iTerm2\n\nFirst, in iTerm2, go to **Preferences > Profile > Keys**.\n\nHere you need to set your left <kbd>⌥</kbd> key to act as an _escape character._ Or _Esc+_ as it is written. (See screenshot.)\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_option_keyescape_chars.png\" alt=\"Left Option Key Settings\" /><figcaption>Left Option Key Settings</figcaption></figure>\n\nThen, in your **Key Mappings** on the same screen, we need to redefine the shortcuts for our desired combination.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2-key-mappings.png\" alt=\"Screenshot of Key Mappings Section\" /><figcaption>Screenshot of Key Mappings Section</figcaption></figure>\n\nFind the current shortcut for <kbd>⌥</kbd> + <kbd>←</kbd> (or create a new one), with the following settings:\n\n- _Action:_ **Send Escape Sequence**\n- _Esc +:_ <kbd>b</kbd>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_backward_word.png\" alt=\"Configure backward-word\" /><figcaption>Configure backward-word</figcaption></figure>\n\nFind or create a shortcut for <kbd>⌥</kbd> + <kbd>→</kbd> as well with:\n\n- _Action:_ **Send Escape Sequence**\n- _Esc +:_ <kbd>f</kbd>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_forward_word.png\" alt=\"Configure backward-word\" /><figcaption>Configure forward-word</figcaption></figure>\n\nAnd that’s it, happy hacking! 🎉 If you end up having a lot of these presets, it would be a good idea to export and save them somewhere for future use.\n","slug":"how_to_use_alt_arrows_to_navigate_between_words_in_iterm2","published":1,"updated":"2021-08-14T16:05:47.492Z","_id":"ckfi82tqx0006rkriap2kvlj5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I’ll be honest, I’m not much of a terminal power user. I use iTerm2 as my terminal emulator and there are some things I like to customize. And it bugs me how cumbersome it is to enable the ability to switch between words with <kbd>⌥</kbd> + <kbd>←</kbd> and <kbd>⌥</kbd> + <kbd>→</kbd>.</p>\n<p>Apparently, this is actually called <em>backward-word</em> and <em>forward-word.</em> You can see your current setup with:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">bindkey</span> -L | grep backward-word</div></pre></td></tr></table></figure>\n<p>And:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">bindkey</span> -L | grep forward-word</div></pre></td></tr></table></figure>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/keybinds_backward_word_forward_word.png\" alt=\"Sample output of running the previous command.\"><figcaption>Sample output.</figcaption></figure>\n\n<p>You might even like the defaults. (I doubt it.) Now, you can manually set the binding keys via the terminal of course, but I don’t really get how it’s used and I hate typing out character codes by hand. 🙂</p>\n<p>So instead, I’m going to document this method that uses the iTerm2 preferences menu – for future reference to myself and to others who might have the same problem. (Please note that this is specific to this emulator.)</p>\n<h2 id=\"How-to-Configure-backward-word-and-forward-word-in-iTerm2\"><a href=\"#How-to-Configure-backward-word-and-forward-word-in-iTerm2\" class=\"headerlink\" title=\"How to Configure backward-word and forward-word in iTerm2\"></a>How to Configure backward-word and forward-word in iTerm2</h2><p>First, in iTerm2, go to <strong>Preferences &gt; Profile &gt; Keys</strong>.</p>\n<p>Here you need to set your left <kbd>⌥</kbd> key to act as an <em>escape character.</em> Or <em>Esc+</em> as it is written. (See screenshot.)</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_option_keyescape_chars.png\" alt=\"Left Option Key Settings\"><figcaption>Left Option Key Settings</figcaption></figure>\n\n<p>Then, in your <strong>Key Mappings</strong> on the same screen, we need to redefine the shortcuts for our desired combination.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2-key-mappings.png\" alt=\"Screenshot of Key Mappings Section\"><figcaption>Screenshot of Key Mappings Section</figcaption></figure>\n\n<p>Find the current shortcut for <kbd>⌥</kbd> + <kbd>←</kbd> (or create a new one), with the following settings:</p>\n<ul>\n<li><em>Action:</em> <strong>Send Escape Sequence</strong></li>\n<li><em>Esc +:</em> <kbd>b</kbd></li>\n</ul>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_backward_word.png\" alt=\"Configure backward-word\"><figcaption>Configure backward-word</figcaption></figure>\n\n<p>Find or create a shortcut for <kbd>⌥</kbd> + <kbd>→</kbd> as well with:</p>\n<ul>\n<li><em>Action:</em> <strong>Send Escape Sequence</strong></li>\n<li><em>Esc +:</em> <kbd>f</kbd></li>\n</ul>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_forward_word.png\" alt=\"Configure backward-word\"><figcaption>Configure forward-word</figcaption></figure>\n\n<p>And that’s it, happy hacking! 🎉 If you end up having a lot of these presets, it would be a good idea to export and save them somewhere for future use.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>I’ll be honest, I’m not much of a terminal power user. I use iTerm2 as my terminal emulator and there are some things I like to customize. And it bugs me how cumbersome it is to enable the ability to switch between words with <kbd>⌥</kbd> + <kbd>←</kbd> and <kbd>⌥</kbd> + <kbd>→</kbd>.</p>\n<p>Apparently, this is actually called <em>backward-word</em> and <em>forward-word.</em> You can see your current setup with:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">bindkey</span> -L | grep backward-word</div></pre></td></tr></table></figure>\n<p>And:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">bindkey</span> -L | grep forward-word</div></pre></td></tr></table></figure>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/keybinds_backward_word_forward_word.png\" alt=\"Sample output of running the previous command.\"><figcaption>Sample output.</figcaption></figure>\n\n<p>You might even like the defaults. (I doubt it.) Now, you can manually set the binding keys via the terminal of course, but I don’t really get how it’s used and I hate typing out character codes by hand. 🙂</p>\n<p>So instead, I’m going to document this method that uses the iTerm2 preferences menu – for future reference to myself and to others who might have the same problem. (Please note that this is specific to this emulator.)</p>\n<h2 id=\"How-to-Configure-backward-word-and-forward-word-in-iTerm2\"><a href=\"#How-to-Configure-backward-word-and-forward-word-in-iTerm2\" class=\"headerlink\" title=\"How to Configure backward-word and forward-word in iTerm2\"></a>How to Configure backward-word and forward-word in iTerm2</h2><p>First, in iTerm2, go to <strong>Preferences &gt; Profile &gt; Keys</strong>.</p>\n<p>Here you need to set your left <kbd>⌥</kbd> key to act as an <em>escape character.</em> Or <em>Esc+</em> as it is written. (See screenshot.)</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_option_keyescape_chars.png\" alt=\"Left Option Key Settings\"><figcaption>Left Option Key Settings</figcaption></figure>\n\n<p>Then, in your <strong>Key Mappings</strong> on the same screen, we need to redefine the shortcuts for our desired combination.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2-key-mappings.png\" alt=\"Screenshot of Key Mappings Section\"><figcaption>Screenshot of Key Mappings Section</figcaption></figure>\n\n<p>Find the current shortcut for <kbd>⌥</kbd> + <kbd>←</kbd> (or create a new one), with the following settings:</p>\n<ul>\n<li><em>Action:</em> <strong>Send Escape Sequence</strong></li>\n<li><em>Esc +:</em> <kbd>b</kbd></li>\n</ul>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_backward_word.png\" alt=\"Configure backward-word\"><figcaption>Configure backward-word</figcaption></figure>\n\n<p>Find or create a shortcut for <kbd>⌥</kbd> + <kbd>→</kbd> as well with:</p>\n<ul>\n<li><em>Action:</em> <strong>Send Escape Sequence</strong></li>\n<li><em>Esc +:</em> <kbd>f</kbd></li>\n</ul>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/iterm2_forward_word.png\" alt=\"Configure backward-word\"><figcaption>Configure forward-word</figcaption></figure>\n\n<p>And that’s it, happy hacking! 🎉 If you end up having a lot of these presets, it would be a good idea to export and save them somewhere for future use.</p>\n"},{"title":"Less Cars, More Trees (Rant)","seo_description":"How cities need to change and what they should avoid.","promo_photo":"/content/images/2020/amsterdam-bikes.jpg","date":"2020-07-31T00:00:00.000Z","_content":"\nDuring the COVID-19 pandemic, [road traffic has significantly](https://www.theguardian.com/world/ng-interactive/2020/apr/27/the-traffic-data-that-shows-the-road-into-and-out-of-covid-19-lockdown) decreased across the globe. For a city that wants to decrease the number of cars on the roads, this was a perfect moment to act. Responsible governments introduced more bike lanes and improved public transport to make social distancing measures possible.\n\nThe really good ones also went ahead and introduced traffic calming measures in the city center, near schools and quiet neighborhoods. Maybe they even planted a few trees or created some [street playgrounds](https://www.youtube.com/watch?v=ybFG-GyS_38) with all that extra space.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/carve-potgieterstraat.jpg\" alt=\"An urban street playground\" /><figcaption>A street in playground in Potgieterstraat street, Amsterdam. <a href=\"http://landezine.com/index.php/2012/06/potgieterstraat-by-carve-landscape-architecture/\" title=\"Source on Landezine.com\">Source.</a></figcaption></figure>\n\nThese cities will also [do studies](https://arxiv.org/abs/2005.01610) to see the problems posed by the inevitable rush of people that will switch to single-occupancy vehicles once everything reopens. These cities likely already offer alternative means of transport and they will take further steps to improve them and discourage the use of cars.\n\n## How Not to Do It\n\nBut not Belgrade, Serbia. Despite constant petitions and protests, local authorities can still do as they please.\n\nDuring the pandemic, they decided to renovate wide 4-lane motorways in the city center. To do so, they didn’t mind disabling trams and disrupting buses. To nobody’s surprise, the city council doesn’t see anything wrong with damaging the capacities of public transport during a global pandemic.\n\nAs a cherry on top, the authorities are also supporting a private investor’s plan [to cut down 30 acres (~121,406 square meters) of trees.](http://beobuild.rs/ko%C5%A1utnjak-na-udaru-investitora-p2943.html)\n\nThe real kicker is that experts warn that the traffic capabilities of the area can’t support the new residential area that’s going to be built there. This means officials will at some point have to cut down more trees to make room for all the new 4-lane motorways and roundabouts.\n\nUnfortunately, this isn’t anything new for Belgrade, which recently became [one of the most polluted cities in the world.](https://www.reuters.com/article/us-serbia-pollution-air/belgrade-joins-worlds-most-polluted-cities-as-farmers-torch-fields-idUSKBN1X3293) Selling public land to private investors for cheap and creating new residential areas without any planning or review is part of the course.\n\nThe city is constantly cutting down trees, expanding roads, and degrading the quality of public transport.\n\nJust recently I went on a 2.3km walk through the city center during which I did not pass by any trees! (On my side of the road at least.) Here’s a map of that trip:\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/belgrade-map-no-trees.png\" alt=\"Belgrade Map, 2.3km without trees\" /><figcaption>A reminder that this is is the city center.</figcaption></figure>\n\nCities that want to house happy citizens who enjoy a good quality of life will invest in more walkable neighborhoods, trees, bike lanes, and public transport. For the time being, Belgrade is not such a city and it’s questionable how this can be changed as [young people leave the country.](https://www.bloomberg.com/news/articles/2019-02-26/serbia-tackles-plummeting-population-that-s-plaguing-the-balkans)\n","source":"_posts/less-cars-more-trees.md","raw":"---\ntitle: Less Cars, More Trees (Rant)\nseo_description: How cities need to change and what they should avoid.\npromo_photo: /content/images/2020/amsterdam-bikes.jpg\ndate: 2020-07-31\ntags:\n---\n\nDuring the COVID-19 pandemic, [road traffic has significantly](https://www.theguardian.com/world/ng-interactive/2020/apr/27/the-traffic-data-that-shows-the-road-into-and-out-of-covid-19-lockdown) decreased across the globe. For a city that wants to decrease the number of cars on the roads, this was a perfect moment to act. Responsible governments introduced more bike lanes and improved public transport to make social distancing measures possible.\n\nThe really good ones also went ahead and introduced traffic calming measures in the city center, near schools and quiet neighborhoods. Maybe they even planted a few trees or created some [street playgrounds](https://www.youtube.com/watch?v=ybFG-GyS_38) with all that extra space.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/carve-potgieterstraat.jpg\" alt=\"An urban street playground\" /><figcaption>A street in playground in Potgieterstraat street, Amsterdam. <a href=\"http://landezine.com/index.php/2012/06/potgieterstraat-by-carve-landscape-architecture/\" title=\"Source on Landezine.com\">Source.</a></figcaption></figure>\n\nThese cities will also [do studies](https://arxiv.org/abs/2005.01610) to see the problems posed by the inevitable rush of people that will switch to single-occupancy vehicles once everything reopens. These cities likely already offer alternative means of transport and they will take further steps to improve them and discourage the use of cars.\n\n## How Not to Do It\n\nBut not Belgrade, Serbia. Despite constant petitions and protests, local authorities can still do as they please.\n\nDuring the pandemic, they decided to renovate wide 4-lane motorways in the city center. To do so, they didn’t mind disabling trams and disrupting buses. To nobody’s surprise, the city council doesn’t see anything wrong with damaging the capacities of public transport during a global pandemic.\n\nAs a cherry on top, the authorities are also supporting a private investor’s plan [to cut down 30 acres (~121,406 square meters) of trees.](http://beobuild.rs/ko%C5%A1utnjak-na-udaru-investitora-p2943.html)\n\nThe real kicker is that experts warn that the traffic capabilities of the area can’t support the new residential area that’s going to be built there. This means officials will at some point have to cut down more trees to make room for all the new 4-lane motorways and roundabouts.\n\nUnfortunately, this isn’t anything new for Belgrade, which recently became [one of the most polluted cities in the world.](https://www.reuters.com/article/us-serbia-pollution-air/belgrade-joins-worlds-most-polluted-cities-as-farmers-torch-fields-idUSKBN1X3293) Selling public land to private investors for cheap and creating new residential areas without any planning or review is part of the course.\n\nThe city is constantly cutting down trees, expanding roads, and degrading the quality of public transport.\n\nJust recently I went on a 2.3km walk through the city center during which I did not pass by any trees! (On my side of the road at least.) Here’s a map of that trip:\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/belgrade-map-no-trees.png\" alt=\"Belgrade Map, 2.3km without trees\" /><figcaption>A reminder that this is is the city center.</figcaption></figure>\n\nCities that want to house happy citizens who enjoy a good quality of life will invest in more walkable neighborhoods, trees, bike lanes, and public transport. For the time being, Belgrade is not such a city and it’s questionable how this can be changed as [young people leave the country.](https://www.bloomberg.com/news/articles/2019-02-26/serbia-tackles-plummeting-population-that-s-plaguing-the-balkans)\n","slug":"less-cars-more-trees","published":1,"updated":"2020-09-24T11:18:29.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqx0007rkrixy4upe7n","content":"<p>During the COVID-19 pandemic, <a href=\"https://www.theguardian.com/world/ng-interactive/2020/apr/27/the-traffic-data-that-shows-the-road-into-and-out-of-covid-19-lockdown\" target=\"_blank\" rel=\"external\">road traffic has significantly</a> decreased across the globe. For a city that wants to decrease the number of cars on the roads, this was a perfect moment to act. Responsible governments introduced more bike lanes and improved public transport to make social distancing measures possible.</p>\n<p>The really good ones also went ahead and introduced traffic calming measures in the city center, near schools and quiet neighborhoods. Maybe they even planted a few trees or created some <a href=\"https://www.youtube.com/watch?v=ybFG-GyS_38\" target=\"_blank\" rel=\"external\">street playgrounds</a> with all that extra space.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/carve-potgieterstraat.jpg\" alt=\"An urban street playground\"><figcaption>A street in playground in Potgieterstraat street, Amsterdam. <a href=\"http://landezine.com/index.php/2012/06/potgieterstraat-by-carve-landscape-architecture/\" title=\"Source on Landezine.com\" target=\"_blank\" rel=\"external\">Source.</a></figcaption></figure>\n\n<p>These cities will also <a href=\"https://arxiv.org/abs/2005.01610\" target=\"_blank\" rel=\"external\">do studies</a> to see the problems posed by the inevitable rush of people that will switch to single-occupancy vehicles once everything reopens. These cities likely already offer alternative means of transport and they will take further steps to improve them and discourage the use of cars.</p>\n<h2 id=\"How-Not-to-Do-It\"><a href=\"#How-Not-to-Do-It\" class=\"headerlink\" title=\"How Not to Do It\"></a>How Not to Do It</h2><p>But not Belgrade, Serbia. Despite constant petitions and protests, local authorities can still do as they please.</p>\n<p>During the pandemic, they decided to renovate wide 4-lane motorways in the city center. To do so, they didn’t mind disabling trams and disrupting buses. To nobody’s surprise, the city council doesn’t see anything wrong with damaging the capacities of public transport during a global pandemic.</p>\n<p>As a cherry on top, the authorities are also supporting a private investor’s plan <a href=\"http://beobuild.rs/ko%C5%A1utnjak-na-udaru-investitora-p2943.html\" target=\"_blank\" rel=\"external\">to cut down 30 acres (~121,406 square meters) of trees.</a></p>\n<p>The real kicker is that experts warn that the traffic capabilities of the area can’t support the new residential area that’s going to be built there. This means officials will at some point have to cut down more trees to make room for all the new 4-lane motorways and roundabouts.</p>\n<p>Unfortunately, this isn’t anything new for Belgrade, which recently became <a href=\"https://www.reuters.com/article/us-serbia-pollution-air/belgrade-joins-worlds-most-polluted-cities-as-farmers-torch-fields-idUSKBN1X3293\" target=\"_blank\" rel=\"external\">one of the most polluted cities in the world.</a> Selling public land to private investors for cheap and creating new residential areas without any planning or review is part of the course.</p>\n<p>The city is constantly cutting down trees, expanding roads, and degrading the quality of public transport.</p>\n<p>Just recently I went on a 2.3km walk through the city center during which I did not pass by any trees! (On my side of the road at least.) Here’s a map of that trip:</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/belgrade-map-no-trees.png\" alt=\"Belgrade Map, 2.3km without trees\"><figcaption>A reminder that this is is the city center.</figcaption></figure>\n\n<p>Cities that want to house happy citizens who enjoy a good quality of life will invest in more walkable neighborhoods, trees, bike lanes, and public transport. For the time being, Belgrade is not such a city and it’s questionable how this can be changed as <a href=\"https://www.bloomberg.com/news/articles/2019-02-26/serbia-tackles-plummeting-population-that-s-plaguing-the-balkans\" target=\"_blank\" rel=\"external\">young people leave the country.</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>During the COVID-19 pandemic, <a href=\"https://www.theguardian.com/world/ng-interactive/2020/apr/27/the-traffic-data-that-shows-the-road-into-and-out-of-covid-19-lockdown\" target=\"_blank\" rel=\"external\">road traffic has significantly</a> decreased across the globe. For a city that wants to decrease the number of cars on the roads, this was a perfect moment to act. Responsible governments introduced more bike lanes and improved public transport to make social distancing measures possible.</p>\n<p>The really good ones also went ahead and introduced traffic calming measures in the city center, near schools and quiet neighborhoods. Maybe they even planted a few trees or created some <a href=\"https://www.youtube.com/watch?v=ybFG-GyS_38\" target=\"_blank\" rel=\"external\">street playgrounds</a> with all that extra space.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/carve-potgieterstraat.jpg\" alt=\"An urban street playground\"><figcaption>A street in playground in Potgieterstraat street, Amsterdam. <a href=\"http://landezine.com/index.php/2012/06/potgieterstraat-by-carve-landscape-architecture/\" title=\"Source on Landezine.com\" target=\"_blank\" rel=\"external\">Source.</a></figcaption></figure>\n\n<p>These cities will also <a href=\"https://arxiv.org/abs/2005.01610\" target=\"_blank\" rel=\"external\">do studies</a> to see the problems posed by the inevitable rush of people that will switch to single-occupancy vehicles once everything reopens. These cities likely already offer alternative means of transport and they will take further steps to improve them and discourage the use of cars.</p>\n<h2 id=\"How-Not-to-Do-It\"><a href=\"#How-Not-to-Do-It\" class=\"headerlink\" title=\"How Not to Do It\"></a>How Not to Do It</h2><p>But not Belgrade, Serbia. Despite constant petitions and protests, local authorities can still do as they please.</p>\n<p>During the pandemic, they decided to renovate wide 4-lane motorways in the city center. To do so, they didn’t mind disabling trams and disrupting buses. To nobody’s surprise, the city council doesn’t see anything wrong with damaging the capacities of public transport during a global pandemic.</p>\n<p>As a cherry on top, the authorities are also supporting a private investor’s plan <a href=\"http://beobuild.rs/ko%C5%A1utnjak-na-udaru-investitora-p2943.html\" target=\"_blank\" rel=\"external\">to cut down 30 acres (~121,406 square meters) of trees.</a></p>\n<p>The real kicker is that experts warn that the traffic capabilities of the area can’t support the new residential area that’s going to be built there. This means officials will at some point have to cut down more trees to make room for all the new 4-lane motorways and roundabouts.</p>\n<p>Unfortunately, this isn’t anything new for Belgrade, which recently became <a href=\"https://www.reuters.com/article/us-serbia-pollution-air/belgrade-joins-worlds-most-polluted-cities-as-farmers-torch-fields-idUSKBN1X3293\" target=\"_blank\" rel=\"external\">one of the most polluted cities in the world.</a> Selling public land to private investors for cheap and creating new residential areas without any planning or review is part of the course.</p>\n<p>The city is constantly cutting down trees, expanding roads, and degrading the quality of public transport.</p>\n<p>Just recently I went on a 2.3km walk through the city center during which I did not pass by any trees! (On my side of the road at least.) Here’s a map of that trip:</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/belgrade-map-no-trees.png\" alt=\"Belgrade Map, 2.3km without trees\"><figcaption>A reminder that this is is the city center.</figcaption></figure>\n\n<p>Cities that want to house happy citizens who enjoy a good quality of life will invest in more walkable neighborhoods, trees, bike lanes, and public transport. For the time being, Belgrade is not such a city and it’s questionable how this can be changed as <a href=\"https://www.bloomberg.com/news/articles/2019-02-26/serbia-tackles-plummeting-population-that-s-plaguing-the-balkans\" target=\"_blank\" rel=\"external\">young people leave the country.</a></p>\n"},{"title":"Key Takeaways From Joel’s Spolsky’s WeAreDevelopers 2018 Closing Keynote","seo_description":"Did you know Jon Skeet is allowed to divide by zero? It’s true.","promo_photo":"/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg","date":"2018-05-25T00:00:00.000Z","updated":"2018-11-13T00:00:00.000Z","_content":"During this year’s [We Are Developers](https://www.wearedevelopers.com/) conference, I had a chance to attend two of Joel’s sessions. The first was a fireside chat and the second a massive closing keynote about the past, present, and future of the community.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg\" alt=\"Fireside chat with Joel Spolsky\" /><figcaption>Fireside chat with Joel Spolsky.</figcaption></figure>\n\nThe sessions ended up being a source of entertainment more than anything else, but I’d like to reflect on three interesting things: something funny, something practical, and something thought-provoking.\n\n## Fucking Timezones!\n\nI got Joel to answer two of my questions. One of which was _“What’s the best question you’ve ever seen on StackOverflow?”_ and the answer was quite fun. Joel chose this one:\n\n> Why is subtracting these two times (in 1927) giving a strange result? Subtracting `1927-12-31 23:54:07` and `1927-12-31 23:54:08` returns `353`, not `1` as we might expect.  \n>\n> _[Source](https://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result)_\n\nI highly recommend going through Jon Skeet’s answer. Especially if you’re interested in the two major fuckeries that developers hate the most: timezones and politics. `[citation needed?]`\n\n## The Joel Test 2.0?\n\nI’ve seen a lot of people wonder if _[the Joel Test](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)_ could use an update. I asked Joel and actually got to hear his thoughts on the matter. While he agrees that some points such as _“Do you use source control?”_ are perhaps obsolete, the test still serves its purpose. And what’s the purpose supposed to be again? To paraphrase Joel:\n\n> To distinguish between teams that are just hacking things up and teams that have implemented a working process.\n\n## The One-Year Challenge\n\n> Look around the room you’re in…\n\n_We Are Developers 2018_ (held in Vienna) felt like a relatively diverse conference. At least in terms of gender and age groups. They did their best to include more women via direct outreach, by inviting female speakers, and by using diversity tickets.\n\nBut the fact remains that this is an industry that’s dominated by one major group. I am reminded of that whenever I look at my own office space or attend a local conference here in Serbia.\n\nIt’s good to remind ourselves that our goal shouldn’t be to play with numbers. Our goal isn’t _optimizing for the size of group X_ in our organization. It’s not about _“look how diverse we are!”_\n\nIt’s about people.\n\n**Our goal is to make everyone welcome.** Not just to make them _feel_ welcome, but to actually _act on that promise._ We need to take responsibility for how we greet people into our field. And this is isn’t easy. Quite frankly, we suck at it. Even basic kindness is something we struggle with.\n\nStackOverflow is, admittedly, also pretty bad at it. Honestly, Joel didn’t offer any specific solution, but he did seem honest about trying to fix this. At the end of his talk, he issued a challenge. (And I will paraphrase once again!)\n\n> Think about this for one year. Really think about it. **Work on it.** And let’s meet here in one year and see what we’ve come up with. Let’s see what we can do to solve this.\n\nI think I’ll take Joel up on the challenge. How about you?\n\nLet me know what you think [via Twitter!](https://twitter.com/DanicFilip)\n\n### Update (2018/11/13)\n\n- StackOverflow now has a [Code of Conduct](https://stackoverflow.com/conduct) that clearly outlines what sort of behaviour is no longer welcome on the site.\n- They’re making it easier to [report violations of the CoC.](https://meta.stackexchange.com/questions/313754/updated-comment-flagging-supporting-the-new-code-of-conduct)\n- In a similar fashion such as GitHub, they added a [new contributor indicator](https://meta.stackexchange.com/questions/314287/come-take-a-look-at-our-new-contributor-indicator) that should promote a kind, open-minded treatment of people who just started using SO.\n","source":"_posts/joel-spolsky-we-are-developers-2018.md","raw":"---\ntitle: Key Takeaways from Joel’s Spolsky’s WeAreDevelopers 2018 Closing Keynote\nseo_description: Did you know Jon Skeet is allowed to divide by zero? It’s true.\npromo_photo: /content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg\ndate: 2018-05-25\nupdated: 2018-11-13\ntags:\n---\nDuring this year’s [We Are Developers](https://www.wearedevelopers.com/) conference, I had a chance to attend two of Joel’s sessions. The first was a fireside chat and the second a massive closing keynote about the past, present, and future of the community.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg\" alt=\"Fireside chat with Joel Spolsky\" /><figcaption>Fireside chat with Joel Spolsky.</figcaption></figure>\n\nThe sessions ended up being a source of entertainment more than anything else, but I’d like to reflect on three interesting things: something funny, something practical, and something thought-provoking.\n\n## Fucking Timezones!\n\nI got Joel to answer two of my questions. One of which was _“What’s the best question you’ve ever seen on StackOverflow?”_ and the answer was quite fun. Joel chose this one:\n\n> Why is subtracting these two times (in 1927) giving a strange result? Subtracting `1927-12-31 23:54:07` and `1927-12-31 23:54:08` returns `353`, not `1` as we might expect.  \n>\n> _[Source](https://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result)_\n\nI highly recommend going through Jon Skeet’s answer. Especially if you’re interested in the two major fuckeries that developers hate the most: timezones and politics. `[citation needed?]`\n\n## The Joel Test 2.0?\n\nI’ve seen a lot of people wonder if _[the Joel Test](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)_ could use an update. I asked Joel and actually got to hear his thoughts on the matter. While he agrees that some points such as _“Do you use source control?”_ are perhaps obsolete, the test still serves its purpose. And what’s the purpose supposed to be again? To paraphrase Joel:\n\n> To distinguish between teams that are just hacking things up and teams that have implemented a working process.\n\n## The One-Year Challenge\n\n> Look around the room you’re in…\n\n_We Are Developers 2018_ (held in Vienna) felt like a relatively diverse conference. At least in terms of gender and age groups. They did their best to include more women via direct outreach, by inviting female speakers, and by using diversity tickets.\n\nBut the fact remains that this is an industry that’s dominated by one major group. I am reminded of that whenever I look at my own office space or attend a local conference here in Serbia.\n\nIt’s good to remind ourselves that our goal shouldn’t be to play with numbers. Our goal isn’t _optimizing for the size of group X_ in our organization. It’s not about _“look how diverse we are!”_\n\nIt’s about people.\n\n**Our goal is to make everyone welcome.** Not just to make them _feel_ welcome, but to actually _act on that promise._ We need to take responsibility for how we greet people into our field. And this is isn’t easy. Quite frankly, we suck at it. Even basic kindness is something we struggle with.\n\nStackOverflow is, admittedly, also pretty bad at it. Honestly, Joel didn’t offer any specific solution, but he did seem honest about trying to fix this. At the end of his talk, he issued a challenge. (And I will paraphrase once again!)\n\n> Think about this for one year. Really think about it. **Work on it.** And let’s meet here in one year and see what we’ve come up with. Let’s see what we can do to solve this.\n\nI think I’ll take Joel up on the challenge. How about you?\n\nLet me know what you think [via Twitter!](https://twitter.com/DanicFilip)\n\n### Update (2018/11/13)\n\n- StackOverflow now has a [Code of Conduct](https://stackoverflow.com/conduct) that clearly outlines what sort of behaviour is no longer welcome on the site.\n- They’re making it easier to [report violations of the CoC.](https://meta.stackexchange.com/questions/313754/updated-comment-flagging-supporting-the-new-code-of-conduct)\n- In a similar fashion such as GitHub, they added a [new contributor indicator](https://meta.stackexchange.com/questions/314287/come-take-a-look-at-our-new-contributor-indicator) that should promote a kind, open-minded treatment of people who just started using SO.\n","slug":"joel-spolsky-we-are-developers-2018","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqy0008rkriyvrw83je","content":"<p>During this year’s <a href=\"https://www.wearedevelopers.com/\" target=\"_blank\" rel=\"external\">We Are Developers</a> conference, I had a chance to attend two of Joel’s sessions. The first was a fireside chat and the second a massive closing keynote about the past, present, and future of the community.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg\" alt=\"Fireside chat with Joel Spolsky\"><figcaption>Fireside chat with Joel Spolsky.</figcaption></figure>\n\n<p>The sessions ended up being a source of entertainment more than anything else, but I’d like to reflect on three interesting things: something funny, something practical, and something thought-provoking.</p>\n<h2 id=\"Fucking-Timezones\"><a href=\"#Fucking-Timezones\" class=\"headerlink\" title=\"Fucking Timezones!\"></a>Fucking Timezones!</h2><p>I got Joel to answer two of my questions. One of which was <em>“What’s the best question you’ve ever seen on StackOverflow?”</em> and the answer was quite fun. Joel chose this one:</p>\n<blockquote>\n<p>Why is subtracting these two times (in 1927) giving a strange result? Subtracting <code>1927-12-31 23:54:07</code> and <code>1927-12-31 23:54:08</code> returns <code>353</code>, not <code>1</code> as we might expect.  </p>\n<p><em><a href=\"https://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result\" target=\"_blank\" rel=\"external\">Source</a></em></p>\n</blockquote>\n<p>I highly recommend going through Jon Skeet’s answer. Especially if you’re interested in the two major fuckeries that developers hate the most: timezones and politics. <code>[citation needed?]</code></p>\n<h2 id=\"The-Joel-Test-2-0\"><a href=\"#The-Joel-Test-2-0\" class=\"headerlink\" title=\"The Joel Test 2.0?\"></a>The Joel Test 2.0?</h2><p>I’ve seen a lot of people wonder if <em><a href=\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\" target=\"_blank\" rel=\"external\">the Joel Test</a></em> could use an update. I asked Joel and actually got to hear his thoughts on the matter. While he agrees that some points such as <em>“Do you use source control?”</em> are perhaps obsolete, the test still serves its purpose. And what’s the purpose supposed to be again? To paraphrase Joel:</p>\n<blockquote>\n<p>To distinguish between teams that are just hacking things up and teams that have implemented a working process.</p>\n</blockquote>\n<h2 id=\"The-One-Year-Challenge\"><a href=\"#The-One-Year-Challenge\" class=\"headerlink\" title=\"The One-Year Challenge\"></a>The One-Year Challenge</h2><blockquote>\n<p>Look around the room you’re in…</p>\n</blockquote>\n<p><em>We Are Developers 2018</em> (held in Vienna) felt like a relatively diverse conference. At least in terms of gender and age groups. They did their best to include more women via direct outreach, by inviting female speakers, and by using diversity tickets.</p>\n<p>But the fact remains that this is an industry that’s dominated by one major group. I am reminded of that whenever I look at my own office space or attend a local conference here in Serbia.</p>\n<p>It’s good to remind ourselves that our goal shouldn’t be to play with numbers. Our goal isn’t <em>optimizing for the size of group X</em> in our organization. It’s not about <em>“look how diverse we are!”</em></p>\n<p>It’s about people.</p>\n<p><strong>Our goal is to make everyone welcome.</strong> Not just to make them <em>feel</em> welcome, but to actually <em>act on that promise.</em> We need to take responsibility for how we greet people into our field. And this is isn’t easy. Quite frankly, we suck at it. Even basic kindness is something we struggle with.</p>\n<p>StackOverflow is, admittedly, also pretty bad at it. Honestly, Joel didn’t offer any specific solution, but he did seem honest about trying to fix this. At the end of his talk, he issued a challenge. (And I will paraphrase once again!)</p>\n<blockquote>\n<p>Think about this for one year. Really think about it. <strong>Work on it.</strong> And let’s meet here in one year and see what we’ve come up with. Let’s see what we can do to solve this.</p>\n</blockquote>\n<p>I think I’ll take Joel up on the challenge. How about you?</p>\n<p>Let me know what you think <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\" rel=\"external\">via Twitter!</a></p>\n<h3 id=\"Update-2018-11-13\"><a href=\"#Update-2018-11-13\" class=\"headerlink\" title=\"Update (2018/11/13)\"></a>Update (2018/11/13)</h3><ul>\n<li>StackOverflow now has a <a href=\"https://stackoverflow.com/conduct\" target=\"_blank\" rel=\"external\">Code of Conduct</a> that clearly outlines what sort of behaviour is no longer welcome on the site.</li>\n<li>They’re making it easier to <a href=\"https://meta.stackexchange.com/questions/313754/updated-comment-flagging-supporting-the-new-code-of-conduct\" target=\"_blank\" rel=\"external\">report violations of the CoC.</a></li>\n<li>In a similar fashion such as GitHub, they added a <a href=\"https://meta.stackexchange.com/questions/314287/come-take-a-look-at-our-new-contributor-indicator\" target=\"_blank\" rel=\"external\">new contributor indicator</a> that should promote a kind, open-minded treatment of people who just started using SO.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>During this year’s <a href=\"https://www.wearedevelopers.com/\" target=\"_blank\" rel=\"external\">We Are Developers</a> conference, I had a chance to attend two of Joel’s sessions. The first was a fireside chat and the second a massive closing keynote about the past, present, and future of the community.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/joel-spolsky-firesidechat-wearedevelopers-2018.jpg\" alt=\"Fireside chat with Joel Spolsky\"><figcaption>Fireside chat with Joel Spolsky.</figcaption></figure>\n\n<p>The sessions ended up being a source of entertainment more than anything else, but I’d like to reflect on three interesting things: something funny, something practical, and something thought-provoking.</p>\n<h2 id=\"Fucking-Timezones\"><a href=\"#Fucking-Timezones\" class=\"headerlink\" title=\"Fucking Timezones!\"></a>Fucking Timezones!</h2><p>I got Joel to answer two of my questions. One of which was <em>“What’s the best question you’ve ever seen on StackOverflow?”</em> and the answer was quite fun. Joel chose this one:</p>\n<blockquote>\n<p>Why is subtracting these two times (in 1927) giving a strange result? Subtracting <code>1927-12-31 23:54:07</code> and <code>1927-12-31 23:54:08</code> returns <code>353</code>, not <code>1</code> as we might expect.  </p>\n<p><em><a href=\"https://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result\" target=\"_blank\" rel=\"external\">Source</a></em></p>\n</blockquote>\n<p>I highly recommend going through Jon Skeet’s answer. Especially if you’re interested in the two major fuckeries that developers hate the most: timezones and politics. <code>[citation needed?]</code></p>\n<h2 id=\"The-Joel-Test-2-0\"><a href=\"#The-Joel-Test-2-0\" class=\"headerlink\" title=\"The Joel Test 2.0?\"></a>The Joel Test 2.0?</h2><p>I’ve seen a lot of people wonder if <em><a href=\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\" target=\"_blank\" rel=\"external\">the Joel Test</a></em> could use an update. I asked Joel and actually got to hear his thoughts on the matter. While he agrees that some points such as <em>“Do you use source control?”</em> are perhaps obsolete, the test still serves its purpose. And what’s the purpose supposed to be again? To paraphrase Joel:</p>\n<blockquote>\n<p>To distinguish between teams that are just hacking things up and teams that have implemented a working process.</p>\n</blockquote>\n<h2 id=\"The-One-Year-Challenge\"><a href=\"#The-One-Year-Challenge\" class=\"headerlink\" title=\"The One-Year Challenge\"></a>The One-Year Challenge</h2><blockquote>\n<p>Look around the room you’re in…</p>\n</blockquote>\n<p><em>We Are Developers 2018</em> (held in Vienna) felt like a relatively diverse conference. At least in terms of gender and age groups. They did their best to include more women via direct outreach, by inviting female speakers, and by using diversity tickets.</p>\n<p>But the fact remains that this is an industry that’s dominated by one major group. I am reminded of that whenever I look at my own office space or attend a local conference here in Serbia.</p>\n<p>It’s good to remind ourselves that our goal shouldn’t be to play with numbers. Our goal isn’t <em>optimizing for the size of group X</em> in our organization. It’s not about <em>“look how diverse we are!”</em></p>\n<p>It’s about people.</p>\n<p><strong>Our goal is to make everyone welcome.</strong> Not just to make them <em>feel</em> welcome, but to actually <em>act on that promise.</em> We need to take responsibility for how we greet people into our field. And this is isn’t easy. Quite frankly, we suck at it. Even basic kindness is something we struggle with.</p>\n<p>StackOverflow is, admittedly, also pretty bad at it. Honestly, Joel didn’t offer any specific solution, but he did seem honest about trying to fix this. At the end of his talk, he issued a challenge. (And I will paraphrase once again!)</p>\n<blockquote>\n<p>Think about this for one year. Really think about it. <strong>Work on it.</strong> And let’s meet here in one year and see what we’ve come up with. Let’s see what we can do to solve this.</p>\n</blockquote>\n<p>I think I’ll take Joel up on the challenge. How about you?</p>\n<p>Let me know what you think <a href=\"https://twitter.com/DanicFilip\" target=\"_blank\" rel=\"external\">via Twitter!</a></p>\n<h3 id=\"Update-2018-11-13\"><a href=\"#Update-2018-11-13\" class=\"headerlink\" title=\"Update (2018/11/13)\"></a>Update (2018/11/13)</h3><ul>\n<li>StackOverflow now has a <a href=\"https://stackoverflow.com/conduct\" target=\"_blank\" rel=\"external\">Code of Conduct</a> that clearly outlines what sort of behaviour is no longer welcome on the site.</li>\n<li>They’re making it easier to <a href=\"https://meta.stackexchange.com/questions/313754/updated-comment-flagging-supporting-the-new-code-of-conduct\" target=\"_blank\" rel=\"external\">report violations of the CoC.</a></li>\n<li>In a similar fashion such as GitHub, they added a <a href=\"https://meta.stackexchange.com/questions/314287/come-take-a-look-at-our-new-contributor-indicator\" target=\"_blank\" rel=\"external\">new contributor indicator</a> that should promote a kind, open-minded treatment of people who just started using SO.</li>\n</ul>\n"},{"title":"Stop Confusing Output and Outcome","seo_description":"Are you building things that matter? Is there any outcome from your work, or are you just churning out code?","promo_photo":"/content/images/2018/customer-interview-session.jpg","date":"2018-07-16T00:00:00.000Z","updated":"2019-02-26T00:00:00.000Z","_content":"\nWhen you add a shiny new feature to a product you’re producing some sort of **“output.”** This is what your manager sees. They’re happy when that shiny new thing looks good, works, and is delivered on time.\n\nNot all outputs are equal. Some should never have been created in the first place. Outputs themselves are not important. What a team should be measuring is the **outcome** they produce. Simply put: _what benefit (value) does the feature bring to people?_\n\n## A Classic Case of Tunnel Vision\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/tunnel-to-nowhere.jpg\" alt=\"Dark, futuristic tunnel.\" /><figcaption>Photo by Prettysleepy2 via Pixelbay.</figcaption></figure>\n\nWe often fail in creating meaningful outputs that produce actual outcomes. You could blame our tunnel vision for that most of the time. We’re so busy focusing on the final output that we forget the bigger picture. Here’s an example of one such fruitless debate:\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>**Person A:** We need to make it possible for people do `action X` on screen Y. Let’s have a button that could open a modal so you can do that. </p>\n        <p>**Person B:** Sounds good! But is a button the proper thing for this? </p>\n        <p>**Person C:** Yeah, and a modal might be too heavy on screen Y. </p>\n        <p>**Person B:** Yeah, why is it on screen Y do begin with? Screen Z is a more natural place for this stuff. </p>\n        <p>**Person A:** It should be a button. And a modal isn’t too heavy. We could have it on screen Z as well I suppose. </p>\n        <p>**Person B:** I still don’t think it should be a button. How about… </p>\n    </blockquote>\n</div>\n\nAnd the argument about the desired output continues on.\n\nThe team is completely missing the mark. The discussion should’ve been centered around this part:\n\n > _“Make it possible for people to do `action X`.”_\n\nThat’s the desired outcome. That’s the benefit. You need to start from there! But nobody in the scenario focused on that.\n\n**Indeed, nobody even challenged the notion that there’s any benefit to making `action X` possible!**\n\nPerson A did not present a compelling case for why the feature is needed. Yet, the team is already locked in a argument over the implementation of the feature.\n\n## An Alternative Scenario\n\nWhat ~~they~~ you need to do is:\n\n1. Confirm that people need this outcome (benefit.)\n2. Investigate how it will help them.\n3. Weigh the _cost vs benefit_ of producing this output and assign a `priority` to it.\n\nIn the end what should happen is that the team scraps the whole thing if it’s not needed. Otherwise the task is pushed to the appropriate person for ideation and design.\n\nIf the outcome is truly desired by people using the product, then the product person (designer, manager, whatever) will use their expertise to advance things further. They will write a specification of the feature, create wireframes, and prepare the rest of **the inputs for the development stage.**\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>**Person A:** We need to make it possible for people to do `action X`.</p>\n        <p>**Person B:** Why is that? Did we do our research?</p>\n        <p>**Person A:** Yes! This is based on our last round of usability testing. 20% of people spend a lot of time navigating back-and-forth between screens Y and Z.</p>\n        <p>**Person B:** Ok, then this would be a good boost to the overall experience of our product? Hey `Person C` is this within the scope of what we can do this month?</p>\n        <p>**Person C:** Yes. I imagine the development team could implement something like that next week.</p>\n        <p>**Person A:** Great! I will work on further specification and design, and then pass it on.</p>\n    </blockquote>\n</div>\n\nOr perhaps it could go the other way:\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>**Person A:** We need to make it possible for people to do `action X`.</p>\n        <p>**Person B:** Why is that? Did we do our research?</p>\n        <p>**Person A:** Not really. But I’ve used the app yesterday and noticed this will likely bug people.</p>\n        <p>**Person C:** Development of this feature will take two weeks. Not counting QA.</p>\n        <p>**Person B:** I don’t think we can commit resources until we know that `action X` it’s worth doing.</p>\n        <p>**Person A:** You’re right. I’ll add this to the list of things we need to watch for during the next phase of customer interviews and usability tests.</p>\n    </blockquote>\n</div>\n\nEither way, we’re not wasting time. We’re focusing on what’s important.\n\n## Lean UX\n\nIf I had read _Lean UX_ by Jeff Gothelf earlier in my career, I would have figured all of this out much sooner. He sums it all up pretty well in this opening words for Chapter 3, _“Vision, Framing, and Outcomes.”_\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>Lean UX radically shifts the way we frame our work. Our goal is not to create a deliverable, it’s to change something in the world — to create an outcome. We start with assumptions instead of requirements. We create and test hypotheses. We measure to see whether we’ve achieved our desired outcomes.</p>\n    </blockquote>\n</div>\n\n## The Road to Understanding\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/customer-interview-session.jpg\" alt=\"Two men, sitting and talking.\" /><figcaption>Listen carefully. Photo by @liwordson via nappy.</figcaption></figure>\n\nTo really understand what makes an outcome desirable, you have to get out there and talk to people. If you already have a product with a userbase, then this should be easy to accomplish.\n\nSetup interviews, respond to questions, invite them to fill out a form etc. In short: _**make it easy for them to constantly provide feedback.**_\n\nThe process isn’t the same for every industry, so you have to do your homework.\n\n### Everyone on Support\n\nRecently, I read through the Basecamp employee handbook. They have a really cool activity called _[“Everyone on Support.”](https://github.com/basecamp/handbook/blob/master/our-rituals.md#everyone-on-support-eos)_ It boils down to everyone on the team doing one shift of Customer Support every month or two.\n\n> Talking directly to customers all day helps us realize what's wrong, what's right, and what's utterly confusing about Basecamp.\n\n## Final Notes\n\n###  The TL;DR\n\nIf you mess up your focus and don’t provide good inputs, then the engineers will produce output without any valuable outcome. This turns your team into a _cost center_, rather than a place of profit. Do your homework right, prioritize, and take the time to talk to your users. Do that, and you will not fail.\n\n### Technical Debt and Refactoring\n\nThe advice given here does not apply to tasks like fixing technical debt or refactoring code. These activities do not produce “features.” They do not provide any direct outcomes for the people using your product.\n\nI’m still working hard on gathering my own thoughts on this issue. If you have a good resource on the topic, feel free to send it to me.\n","source":"_posts/output-vs-outcome.md","raw":"---\ntitle: Stop Confusing Output and Outcome\nseo_description: Are you building things that matter? Is there any outcome from your work, or are you just churning out code?\npromo_photo: /content/images/2018/customer-interview-session.jpg\ndate: 2018-07-16\nupdated: 2019-02-26\ntags:\n---\n\nWhen you add a shiny new feature to a product you’re producing some sort of **“output.”** This is what your manager sees. They’re happy when that shiny new thing looks good, works, and is delivered on time.\n\nNot all outputs are equal. Some should never have been created in the first place. Outputs themselves are not important. What a team should be measuring is the **outcome** they produce. Simply put: _what benefit (value) does the feature bring to people?_\n\n## A Classic Case of Tunnel Vision\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/tunnel-to-nowhere.jpg\" alt=\"Dark, futuristic tunnel.\" /><figcaption>Photo by Prettysleepy2 via Pixelbay.</figcaption></figure>\n\nWe often fail in creating meaningful outputs that produce actual outcomes. You could blame our tunnel vision for that most of the time. We’re so busy focusing on the final output that we forget the bigger picture. Here’s an example of one such fruitless debate:\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>**Person A:** We need to make it possible for people do `action X` on screen Y. Let’s have a button that could open a modal so you can do that. </p>\n        <p>**Person B:** Sounds good! But is a button the proper thing for this? </p>\n        <p>**Person C:** Yeah, and a modal might be too heavy on screen Y. </p>\n        <p>**Person B:** Yeah, why is it on screen Y do begin with? Screen Z is a more natural place for this stuff. </p>\n        <p>**Person A:** It should be a button. And a modal isn’t too heavy. We could have it on screen Z as well I suppose. </p>\n        <p>**Person B:** I still don’t think it should be a button. How about… </p>\n    </blockquote>\n</div>\n\nAnd the argument about the desired output continues on.\n\nThe team is completely missing the mark. The discussion should’ve been centered around this part:\n\n > _“Make it possible for people to do `action X`.”_\n\nThat’s the desired outcome. That’s the benefit. You need to start from there! But nobody in the scenario focused on that.\n\n**Indeed, nobody even challenged the notion that there’s any benefit to making `action X` possible!**\n\nPerson A did not present a compelling case for why the feature is needed. Yet, the team is already locked in a argument over the implementation of the feature.\n\n## An Alternative Scenario\n\nWhat ~~they~~ you need to do is:\n\n1. Confirm that people need this outcome (benefit.)\n2. Investigate how it will help them.\n3. Weigh the _cost vs benefit_ of producing this output and assign a `priority` to it.\n\nIn the end what should happen is that the team scraps the whole thing if it’s not needed. Otherwise the task is pushed to the appropriate person for ideation and design.\n\nIf the outcome is truly desired by people using the product, then the product person (designer, manager, whatever) will use their expertise to advance things further. They will write a specification of the feature, create wireframes, and prepare the rest of **the inputs for the development stage.**\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>**Person A:** We need to make it possible for people to do `action X`.</p>\n        <p>**Person B:** Why is that? Did we do our research?</p>\n        <p>**Person A:** Yes! This is based on our last round of usability testing. 20% of people spend a lot of time navigating back-and-forth between screens Y and Z.</p>\n        <p>**Person B:** Ok, then this would be a good boost to the overall experience of our product? Hey `Person C` is this within the scope of what we can do this month?</p>\n        <p>**Person C:** Yes. I imagine the development team could implement something like that next week.</p>\n        <p>**Person A:** Great! I will work on further specification and design, and then pass it on.</p>\n    </blockquote>\n</div>\n\nOr perhaps it could go the other way:\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>**Person A:** We need to make it possible for people to do `action X`.</p>\n        <p>**Person B:** Why is that? Did we do our research?</p>\n        <p>**Person A:** Not really. But I’ve used the app yesterday and noticed this will likely bug people.</p>\n        <p>**Person C:** Development of this feature will take two weeks. Not counting QA.</p>\n        <p>**Person B:** I don’t think we can commit resources until we know that `action X` it’s worth doing.</p>\n        <p>**Person A:** You’re right. I’ll add this to the list of things we need to watch for during the next phase of customer interviews and usability tests.</p>\n    </blockquote>\n</div>\n\nEither way, we’re not wasting time. We’re focusing on what’s important.\n\n## Lean UX\n\nIf I had read _Lean UX_ by Jeff Gothelf earlier in my career, I would have figured all of this out much sooner. He sums it all up pretty well in this opening words for Chapter 3, _“Vision, Framing, and Outcomes.”_\n\n<div class=\"scenario-box\">\n    <blockquote>\n        <p>Lean UX radically shifts the way we frame our work. Our goal is not to create a deliverable, it’s to change something in the world — to create an outcome. We start with assumptions instead of requirements. We create and test hypotheses. We measure to see whether we’ve achieved our desired outcomes.</p>\n    </blockquote>\n</div>\n\n## The Road to Understanding\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/customer-interview-session.jpg\" alt=\"Two men, sitting and talking.\" /><figcaption>Listen carefully. Photo by @liwordson via nappy.</figcaption></figure>\n\nTo really understand what makes an outcome desirable, you have to get out there and talk to people. If you already have a product with a userbase, then this should be easy to accomplish.\n\nSetup interviews, respond to questions, invite them to fill out a form etc. In short: _**make it easy for them to constantly provide feedback.**_\n\nThe process isn’t the same for every industry, so you have to do your homework.\n\n### Everyone on Support\n\nRecently, I read through the Basecamp employee handbook. They have a really cool activity called _[“Everyone on Support.”](https://github.com/basecamp/handbook/blob/master/our-rituals.md#everyone-on-support-eos)_ It boils down to everyone on the team doing one shift of Customer Support every month or two.\n\n> Talking directly to customers all day helps us realize what's wrong, what's right, and what's utterly confusing about Basecamp.\n\n## Final Notes\n\n###  The TL;DR\n\nIf you mess up your focus and don’t provide good inputs, then the engineers will produce output without any valuable outcome. This turns your team into a _cost center_, rather than a place of profit. Do your homework right, prioritize, and take the time to talk to your users. Do that, and you will not fail.\n\n### Technical Debt and Refactoring\n\nThe advice given here does not apply to tasks like fixing technical debt or refactoring code. These activities do not produce “features.” They do not provide any direct outcomes for the people using your product.\n\nI’m still working hard on gathering my own thoughts on this issue. If you have a good resource on the topic, feel free to send it to me.\n","slug":"output-vs-outcome","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tqy0009rkriqj0b5dyu","content":"<p>When you add a shiny new feature to a product you’re producing some sort of <strong>“output.”</strong> This is what your manager sees. They’re happy when that shiny new thing looks good, works, and is delivered on time.</p>\n<p>Not all outputs are equal. Some should never have been created in the first place. Outputs themselves are not important. What a team should be measuring is the <strong>outcome</strong> they produce. Simply put: <em>what benefit (value) does the feature bring to people?</em></p>\n<h2 id=\"A-Classic-Case-of-Tunnel-Vision\"><a href=\"#A-Classic-Case-of-Tunnel-Vision\" class=\"headerlink\" title=\"A Classic Case of Tunnel Vision\"></a>A Classic Case of Tunnel Vision</h2><figure class=\"blog-post-image\"><img src=\"/content/images/2018/tunnel-to-nowhere.jpg\" alt=\"Dark, futuristic tunnel.\"><figcaption>Photo by Prettysleepy2 via Pixelbay.</figcaption></figure>\n\n<p>We often fail in creating meaningful outputs that produce actual outcomes. You could blame our tunnel vision for that most of the time. We’re so busy focusing on the final output that we forget the bigger picture. Here’s an example of one such fruitless debate:</p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p><strong>Person A:</strong> We need to make it possible for people do <code>action X</code> on screen Y. Let’s have a button that could open a modal so you can do that. </p><br>        <p><strong>Person B:</strong> Sounds good! But is a button the proper thing for this? </p><br>        <p><strong>Person C:</strong> Yeah, and a modal might be too heavy on screen Y. </p><br>        <p><strong>Person B:</strong> Yeah, why is it on screen Y do begin with? Screen Z is a more natural place for this stuff. </p><br>        <p><strong>Person A:</strong> It should be a button. And a modal isn’t too heavy. We could have it on screen Z as well I suppose. </p><br>        <p><strong>Person B:</strong> I still don’t think it should be a button. How about… </p><br>    </blockquote><br></div>\n\n<p>And the argument about the desired output continues on.</p>\n<p>The team is completely missing the mark. The discussion should’ve been centered around this part:</p>\n<blockquote>\n<p><em>“Make it possible for people to do <code>action X</code>.”</em></p>\n</blockquote>\n<p>That’s the desired outcome. That’s the benefit. You need to start from there! But nobody in the scenario focused on that.</p>\n<p><strong>Indeed, nobody even challenged the notion that there’s any benefit to making <code>action X</code> possible!</strong></p>\n<p>Person A did not present a compelling case for why the feature is needed. Yet, the team is already locked in a argument over the implementation of the feature.</p>\n<h2 id=\"An-Alternative-Scenario\"><a href=\"#An-Alternative-Scenario\" class=\"headerlink\" title=\"An Alternative Scenario\"></a>An Alternative Scenario</h2><p>What <del>they</del> you need to do is:</p>\n<ol>\n<li>Confirm that people need this outcome (benefit.)</li>\n<li>Investigate how it will help them.</li>\n<li>Weigh the <em>cost vs benefit</em> of producing this output and assign a <code>priority</code> to it.</li>\n</ol>\n<p>In the end what should happen is that the team scraps the whole thing if it’s not needed. Otherwise the task is pushed to the appropriate person for ideation and design.</p>\n<p>If the outcome is truly desired by people using the product, then the product person (designer, manager, whatever) will use their expertise to advance things further. They will write a specification of the feature, create wireframes, and prepare the rest of <strong>the inputs for the development stage.</strong></p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p><strong>Person A:</strong> We need to make it possible for people to do <code>action X</code>.</p><br>        <p><strong>Person B:</strong> Why is that? Did we do our research?</p><br>        <p><strong>Person A:</strong> Yes! This is based on our last round of usability testing. 20% of people spend a lot of time navigating back-and-forth between screens Y and Z.</p><br>        <p><strong>Person B:</strong> Ok, then this would be a good boost to the overall experience of our product? Hey <code>Person C</code> is this within the scope of what we can do this month?</p><br>        <p><strong>Person C:</strong> Yes. I imagine the development team could implement something like that next week.</p><br>        <p><strong>Person A:</strong> Great! I will work on further specification and design, and then pass it on.</p><br>    </blockquote><br></div>\n\n<p>Or perhaps it could go the other way:</p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p><strong>Person A:</strong> We need to make it possible for people to do <code>action X</code>.</p><br>        <p><strong>Person B:</strong> Why is that? Did we do our research?</p><br>        <p><strong>Person A:</strong> Not really. But I’ve used the app yesterday and noticed this will likely bug people.</p><br>        <p><strong>Person C:</strong> Development of this feature will take two weeks. Not counting QA.</p><br>        <p><strong>Person B:</strong> I don’t think we can commit resources until we know that <code>action X</code> it’s worth doing.</p><br>        <p><strong>Person A:</strong> You’re right. I’ll add this to the list of things we need to watch for during the next phase of customer interviews and usability tests.</p><br>    </blockquote><br></div>\n\n<p>Either way, we’re not wasting time. We’re focusing on what’s important.</p>\n<h2 id=\"Lean-UX\"><a href=\"#Lean-UX\" class=\"headerlink\" title=\"Lean UX\"></a>Lean UX</h2><p>If I had read <em>Lean UX</em> by Jeff Gothelf earlier in my career, I would have figured all of this out much sooner. He sums it all up pretty well in this opening words for Chapter 3, <em>“Vision, Framing, and Outcomes.”</em></p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p>Lean UX radically shifts the way we frame our work. Our goal is not to create a deliverable, it’s to change something in the world — to create an outcome. We start with assumptions instead of requirements. We create and test hypotheses. We measure to see whether we’ve achieved our desired outcomes.</p><br>    </blockquote><br></div>\n\n<h2 id=\"The-Road-to-Understanding\"><a href=\"#The-Road-to-Understanding\" class=\"headerlink\" title=\"The Road to Understanding\"></a>The Road to Understanding</h2><figure class=\"blog-post-image\"><img src=\"/content/images/2018/customer-interview-session.jpg\" alt=\"Two men, sitting and talking.\"><figcaption>Listen carefully. Photo by @liwordson via nappy.</figcaption></figure>\n\n<p>To really understand what makes an outcome desirable, you have to get out there and talk to people. If you already have a product with a userbase, then this should be easy to accomplish.</p>\n<p>Setup interviews, respond to questions, invite them to fill out a form etc. In short: <em><strong>make it easy for them to constantly provide feedback.</strong></em></p>\n<p>The process isn’t the same for every industry, so you have to do your homework.</p>\n<h3 id=\"Everyone-on-Support\"><a href=\"#Everyone-on-Support\" class=\"headerlink\" title=\"Everyone on Support\"></a>Everyone on Support</h3><p>Recently, I read through the Basecamp employee handbook. They have a really cool activity called <em><a href=\"https://github.com/basecamp/handbook/blob/master/our-rituals.md#everyone-on-support-eos\" target=\"_blank\" rel=\"external\">“Everyone on Support.”</a></em> It boils down to everyone on the team doing one shift of Customer Support every month or two.</p>\n<blockquote>\n<p>Talking directly to customers all day helps us realize what’s wrong, what’s right, and what’s utterly confusing about Basecamp.</p>\n</blockquote>\n<h2 id=\"Final-Notes\"><a href=\"#Final-Notes\" class=\"headerlink\" title=\"Final Notes\"></a>Final Notes</h2><h3 id=\"The-TL-DR\"><a href=\"#The-TL-DR\" class=\"headerlink\" title=\"The TL;DR\"></a>The TL;DR</h3><p>If you mess up your focus and don’t provide good inputs, then the engineers will produce output without any valuable outcome. This turns your team into a <em>cost center</em>, rather than a place of profit. Do your homework right, prioritize, and take the time to talk to your users. Do that, and you will not fail.</p>\n<h3 id=\"Technical-Debt-and-Refactoring\"><a href=\"#Technical-Debt-and-Refactoring\" class=\"headerlink\" title=\"Technical Debt and Refactoring\"></a>Technical Debt and Refactoring</h3><p>The advice given here does not apply to tasks like fixing technical debt or refactoring code. These activities do not produce “features.” They do not provide any direct outcomes for the people using your product.</p>\n<p>I’m still working hard on gathering my own thoughts on this issue. If you have a good resource on the topic, feel free to send it to me.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>When you add a shiny new feature to a product you’re producing some sort of <strong>“output.”</strong> This is what your manager sees. They’re happy when that shiny new thing looks good, works, and is delivered on time.</p>\n<p>Not all outputs are equal. Some should never have been created in the first place. Outputs themselves are not important. What a team should be measuring is the <strong>outcome</strong> they produce. Simply put: <em>what benefit (value) does the feature bring to people?</em></p>\n<h2 id=\"A-Classic-Case-of-Tunnel-Vision\"><a href=\"#A-Classic-Case-of-Tunnel-Vision\" class=\"headerlink\" title=\"A Classic Case of Tunnel Vision\"></a>A Classic Case of Tunnel Vision</h2><figure class=\"blog-post-image\"><img src=\"/content/images/2018/tunnel-to-nowhere.jpg\" alt=\"Dark, futuristic tunnel.\"><figcaption>Photo by Prettysleepy2 via Pixelbay.</figcaption></figure>\n\n<p>We often fail in creating meaningful outputs that produce actual outcomes. You could blame our tunnel vision for that most of the time. We’re so busy focusing on the final output that we forget the bigger picture. Here’s an example of one such fruitless debate:</p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p><strong>Person A:</strong> We need to make it possible for people do <code>action X</code> on screen Y. Let’s have a button that could open a modal so you can do that. </p><br>        <p><strong>Person B:</strong> Sounds good! But is a button the proper thing for this? </p><br>        <p><strong>Person C:</strong> Yeah, and a modal might be too heavy on screen Y. </p><br>        <p><strong>Person B:</strong> Yeah, why is it on screen Y do begin with? Screen Z is a more natural place for this stuff. </p><br>        <p><strong>Person A:</strong> It should be a button. And a modal isn’t too heavy. We could have it on screen Z as well I suppose. </p><br>        <p><strong>Person B:</strong> I still don’t think it should be a button. How about… </p><br>    </blockquote><br></div>\n\n<p>And the argument about the desired output continues on.</p>\n<p>The team is completely missing the mark. The discussion should’ve been centered around this part:</p>\n<blockquote>\n<p><em>“Make it possible for people to do <code>action X</code>.”</em></p>\n</blockquote>\n<p>That’s the desired outcome. That’s the benefit. You need to start from there! But nobody in the scenario focused on that.</p>\n<p><strong>Indeed, nobody even challenged the notion that there’s any benefit to making <code>action X</code> possible!</strong></p>\n<p>Person A did not present a compelling case for why the feature is needed. Yet, the team is already locked in a argument over the implementation of the feature.</p>\n<h2 id=\"An-Alternative-Scenario\"><a href=\"#An-Alternative-Scenario\" class=\"headerlink\" title=\"An Alternative Scenario\"></a>An Alternative Scenario</h2><p>What <del>they</del> you need to do is:</p>\n<ol>\n<li>Confirm that people need this outcome (benefit.)</li>\n<li>Investigate how it will help them.</li>\n<li>Weigh the <em>cost vs benefit</em> of producing this output and assign a <code>priority</code> to it.</li>\n</ol>\n<p>In the end what should happen is that the team scraps the whole thing if it’s not needed. Otherwise the task is pushed to the appropriate person for ideation and design.</p>\n<p>If the outcome is truly desired by people using the product, then the product person (designer, manager, whatever) will use their expertise to advance things further. They will write a specification of the feature, create wireframes, and prepare the rest of <strong>the inputs for the development stage.</strong></p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p><strong>Person A:</strong> We need to make it possible for people to do <code>action X</code>.</p><br>        <p><strong>Person B:</strong> Why is that? Did we do our research?</p><br>        <p><strong>Person A:</strong> Yes! This is based on our last round of usability testing. 20% of people spend a lot of time navigating back-and-forth between screens Y and Z.</p><br>        <p><strong>Person B:</strong> Ok, then this would be a good boost to the overall experience of our product? Hey <code>Person C</code> is this within the scope of what we can do this month?</p><br>        <p><strong>Person C:</strong> Yes. I imagine the development team could implement something like that next week.</p><br>        <p><strong>Person A:</strong> Great! I will work on further specification and design, and then pass it on.</p><br>    </blockquote><br></div>\n\n<p>Or perhaps it could go the other way:</p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p><strong>Person A:</strong> We need to make it possible for people to do <code>action X</code>.</p><br>        <p><strong>Person B:</strong> Why is that? Did we do our research?</p><br>        <p><strong>Person A:</strong> Not really. But I’ve used the app yesterday and noticed this will likely bug people.</p><br>        <p><strong>Person C:</strong> Development of this feature will take two weeks. Not counting QA.</p><br>        <p><strong>Person B:</strong> I don’t think we can commit resources until we know that <code>action X</code> it’s worth doing.</p><br>        <p><strong>Person A:</strong> You’re right. I’ll add this to the list of things we need to watch for during the next phase of customer interviews and usability tests.</p><br>    </blockquote><br></div>\n\n<p>Either way, we’re not wasting time. We’re focusing on what’s important.</p>\n<h2 id=\"Lean-UX\"><a href=\"#Lean-UX\" class=\"headerlink\" title=\"Lean UX\"></a>Lean UX</h2><p>If I had read <em>Lean UX</em> by Jeff Gothelf earlier in my career, I would have figured all of this out much sooner. He sums it all up pretty well in this opening words for Chapter 3, <em>“Vision, Framing, and Outcomes.”</em></p>\n<div class=\"scenario-box\"><br>    <blockquote><br>        <p>Lean UX radically shifts the way we frame our work. Our goal is not to create a deliverable, it’s to change something in the world — to create an outcome. We start with assumptions instead of requirements. We create and test hypotheses. We measure to see whether we’ve achieved our desired outcomes.</p><br>    </blockquote><br></div>\n\n<h2 id=\"The-Road-to-Understanding\"><a href=\"#The-Road-to-Understanding\" class=\"headerlink\" title=\"The Road to Understanding\"></a>The Road to Understanding</h2><figure class=\"blog-post-image\"><img src=\"/content/images/2018/customer-interview-session.jpg\" alt=\"Two men, sitting and talking.\"><figcaption>Listen carefully. Photo by @liwordson via nappy.</figcaption></figure>\n\n<p>To really understand what makes an outcome desirable, you have to get out there and talk to people. If you already have a product with a userbase, then this should be easy to accomplish.</p>\n<p>Setup interviews, respond to questions, invite them to fill out a form etc. In short: <em><strong>make it easy for them to constantly provide feedback.</strong></em></p>\n<p>The process isn’t the same for every industry, so you have to do your homework.</p>\n<h3 id=\"Everyone-on-Support\"><a href=\"#Everyone-on-Support\" class=\"headerlink\" title=\"Everyone on Support\"></a>Everyone on Support</h3><p>Recently, I read through the Basecamp employee handbook. They have a really cool activity called <em><a href=\"https://github.com/basecamp/handbook/blob/master/our-rituals.md#everyone-on-support-eos\" target=\"_blank\" rel=\"external\">“Everyone on Support.”</a></em> It boils down to everyone on the team doing one shift of Customer Support every month or two.</p>\n<blockquote>\n<p>Talking directly to customers all day helps us realize what’s wrong, what’s right, and what’s utterly confusing about Basecamp.</p>\n</blockquote>\n<h2 id=\"Final-Notes\"><a href=\"#Final-Notes\" class=\"headerlink\" title=\"Final Notes\"></a>Final Notes</h2><h3 id=\"The-TL-DR\"><a href=\"#The-TL-DR\" class=\"headerlink\" title=\"The TL;DR\"></a>The TL;DR</h3><p>If you mess up your focus and don’t provide good inputs, then the engineers will produce output without any valuable outcome. This turns your team into a <em>cost center</em>, rather than a place of profit. Do your homework right, prioritize, and take the time to talk to your users. Do that, and you will not fail.</p>\n<h3 id=\"Technical-Debt-and-Refactoring\"><a href=\"#Technical-Debt-and-Refactoring\" class=\"headerlink\" title=\"Technical Debt and Refactoring\"></a>Technical Debt and Refactoring</h3><p>The advice given here does not apply to tasks like fixing technical debt or refactoring code. These activities do not produce “features.” They do not provide any direct outcomes for the people using your product.</p>\n<p>I’m still working hard on gathering my own thoughts on this issue. If you have a good resource on the topic, feel free to send it to me.</p>\n"},{"title":"A Guide to Exploratory Testing","seo_description":"Learn about the benefits of Exploratory Testing and how to use it on your team.","promo_photo":"/content/images/2020/casual-testing.jpg","date":"2020-08-16T00:00:00.000Z","_content":"\n_”Automated testing is king!”_\n\nThis is a sentiment echoed by software and QA engineers across industries. And it makes sense! Verifying a piece of software works as intended is best achieved by an automated process. But that’s not the only thing we should be testing.\n\nTests might tell us that something is working, **but they won’t tell us how it could function better for the people using it.** We like to delegate this problem to domain experts and designers. But what’s the equivalent of an integration test in the user experience design world?\n\nDo we need another set of design experts for this? QA design engineers? Do we need to organize focus groups and interviews? What if we can’t afford any of this? What if you’re an offshore team that can’t get approval to talk to customers?\n\nThere’s a much simpler solution. One that’s on budget, sensible, **and driven by empathy towards people who will use the product.**\n\n## What Is Exploratory Testing?\n\nMost testing practices define a set of flows and validate their execution. They ask: _does this work the way we defined it?_ In contrast, with Exploratory testing, we want to see if those flows make sense and if there’s something we forgot to define. \n\nIn 2018 I wrote _[“Output vs Outcome”](/2018/output-vs-outcome)_ which comes as parallel to that. Most of the testing we do verifies that our _outputs are correct._ **Exploratory testing attempts to confirm outcomes and inform future goals.**\n\nThe weight of practicing this does not fall on the engineers. Engineers or designers should manage the process, but they aren’t necessary practitioners who will carry it out. (But they are free to take part!)\n\n### Who Should Test?\n\nEveryone! Get as many people as possible invested in using the software you’re building and get them to ***think.*** Everyone in the organization should invest a few hours per month to do this. Sales, marketing, management, heck even your aunt and your favorite barista should chime in.\n\n### What’s the Process Like?\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/exploratory-testing-diagram.png\" alt=\"Diagram: text, learn, execute, repeat.\" /><figcaption>Test, learn, execute, repeat.</figcaption></figure>\n\nThere isn’t a strict process. *“Freestyle testing”* gets mentioned and this puts people off. The current trend is that every manager will insist on a well-known and proven process. \n\nExploratory testing isn’t complete chaos, though. There should certainly be a pre-defined way we expect a tester to document and report their findings. But the way they will conduct the test itself is what’s left to the individual.\n\nIt’s a process that values individuality and diversity. The more diverse the testers, the more interesting the findings. Here are some of the types of diversity we’re thinking of here:\n\n- **People use their devices in different ways.** For example, it’s be great to have both keyboard-heavy users and folks who avoid using (or cannot use) the keyboard as testers.\n- **Unique experiences and backgrounds** lead to different expectations of how the business process the software is enabling is supposed to work.\n- People from **different professions use different software** and they come with different expectations on how your software is supposed to function.\n\n### Charters and Timeboxes\n\nYou don’t always have to test the whole system. Instead, you can set specific testing goals, commonly referred to as **charters.** An example might be: _“Explore the newest filtering options”_ or _“Explore the new report builder interface.”_\n\nSome teams also like to timebox these tests. I’d say that makes sense if your testers already know the system a bit and are trying to only test one part of it. For a full system test, I would not assign any timeboxes.\n\n### Documenting the Test\n\n**The testers should ideally record themselves while testing.** Screen + voice recordings are ideal, but making a voice recording is fine too.\n\nThe purpose isn’t necessarily so others could review (though that would be great!), but for the tester to refer to the recording while they create their documentation. This way they can easily grab screenshots or refer to a time segment where something weird happened. It also ensures that they don’t forget any details.\n\nWriting things down as you’re testing is a burden that takes away from the exploratory nature of the process. Do it later.\n\n## Quantifying the Testing Data\n\nA bit of a problem with this approach is quantifying the results and value that they bring. This depends on the data you get, so let’s look at what you can expect.\n\n### Onboarding Issues\n\nIf a tester isn’t a domain expert or has never used the software previously expect their problems and feedback to be centered on the onboarding process. If this product is alien to them then this will be a good test of how easy it is for someone to pick up and use your software.\n\n### Domain-related Issues\n\nThis is the **jackpot category.** If a domain export identifies something is wrong with how the system displays or performs a business process, then you’re getting a lot of value out of this testing practice.\n\n### Bugs\n\nFinding bugs before your customers do is extremely valuable and Exploratory testing will likely result in the discovery of some bugs. While this is great, don’t focus solely on the bugs, look for all the other issues as well!\n\n### Usability and Accessibility Issues\n\nThe more diverse your testers, the more you can expect to learn about usability problems. Strive to include people with various motor, vision, hearing, and cognitive impairments in your organization!\n\nThe improvements that arise from this will benefit all of your other customers as well as those with impairments. There is no excuse to avoid focusing on this.\n\n### User Experience Issues\n\nLook for comments like _“that felt weird”_ or _“I wasn’t sure it actually did [the thing].”_ These will inform you of situations where your software isn’t clearly communicating that’s happening. Your software should solve problems, not create confusion.\n\n## Using the Testing Data\n\nSomeone will have to crawl through the testing documents to identify all the different issues and formalize them into tasks. This is likely the domain of a QA lead, designer, or product owner. Obviously, it depends on the type of organization. At any rate, they **will spend a lot of time doing this** and they will get better at it as time goes on.\n\n## Second-order Benefits\n\nThere’s some other benefits worth considering as this is a relaxed, team-orianted activity:\n\n- Everyone learns more about the system and studies do show that people get more invested the more they are involved in something.\n  - I’ve noticed that **salespeople especially benefit from understanding the system.** The more they know, the better they are at answering the questions of potential customers. The number of times they have to say _“I’ll get back to you on that”_ decreases and their confidence grows.\n- It teaches people how to test and investigate better. That will improve productivity in future testing practices. \n  - It’s valuable for a junior QA tester to gain this sort of 360° experience with the system.\n- It’s an organization-wide effort that brings different departments together. This improves cross-team communication and understanding.\n- It helps inform future development. It’s better to crowd-source a lot of suggestions based on actual usage, not hypothetical assumptions.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/who-should-test-software.png\" alt=\"Diagram: Asks should you test? Are you a tester? No? Doesn’t matter you should still test!\" /><figcaption>Show this diagram to your co-workers.</figcaption></figure>\n\n## Get Going!\n\nSo, what are you waiting for? Get everyone together, share this concept with them and allow everyone an hour to sit down and explore. You’ll be amazed by all the different discoveries and perspectives!\n","source":"_posts/guide-to-exploratory-testing.md","raw":"---\ntitle: A Guide to Exploratory Testing\nseo_description: Learn about the benefits of Exploratory Testing and how to use it on your team.\npromo_photo: /content/images/2020/casual-testing.jpg\ndate: 2020-08-16\ntags:\n\n---\n\n_”Automated testing is king!”_\n\nThis is a sentiment echoed by software and QA engineers across industries. And it makes sense! Verifying a piece of software works as intended is best achieved by an automated process. But that’s not the only thing we should be testing.\n\nTests might tell us that something is working, **but they won’t tell us how it could function better for the people using it.** We like to delegate this problem to domain experts and designers. But what’s the equivalent of an integration test in the user experience design world?\n\nDo we need another set of design experts for this? QA design engineers? Do we need to organize focus groups and interviews? What if we can’t afford any of this? What if you’re an offshore team that can’t get approval to talk to customers?\n\nThere’s a much simpler solution. One that’s on budget, sensible, **and driven by empathy towards people who will use the product.**\n\n## What Is Exploratory Testing?\n\nMost testing practices define a set of flows and validate their execution. They ask: _does this work the way we defined it?_ In contrast, with Exploratory testing, we want to see if those flows make sense and if there’s something we forgot to define. \n\nIn 2018 I wrote _[“Output vs Outcome”](/2018/output-vs-outcome)_ which comes as parallel to that. Most of the testing we do verifies that our _outputs are correct._ **Exploratory testing attempts to confirm outcomes and inform future goals.**\n\nThe weight of practicing this does not fall on the engineers. Engineers or designers should manage the process, but they aren’t necessary practitioners who will carry it out. (But they are free to take part!)\n\n### Who Should Test?\n\nEveryone! Get as many people as possible invested in using the software you’re building and get them to ***think.*** Everyone in the organization should invest a few hours per month to do this. Sales, marketing, management, heck even your aunt and your favorite barista should chime in.\n\n### What’s the Process Like?\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/exploratory-testing-diagram.png\" alt=\"Diagram: text, learn, execute, repeat.\" /><figcaption>Test, learn, execute, repeat.</figcaption></figure>\n\nThere isn’t a strict process. *“Freestyle testing”* gets mentioned and this puts people off. The current trend is that every manager will insist on a well-known and proven process. \n\nExploratory testing isn’t complete chaos, though. There should certainly be a pre-defined way we expect a tester to document and report their findings. But the way they will conduct the test itself is what’s left to the individual.\n\nIt’s a process that values individuality and diversity. The more diverse the testers, the more interesting the findings. Here are some of the types of diversity we’re thinking of here:\n\n- **People use their devices in different ways.** For example, it’s be great to have both keyboard-heavy users and folks who avoid using (or cannot use) the keyboard as testers.\n- **Unique experiences and backgrounds** lead to different expectations of how the business process the software is enabling is supposed to work.\n- People from **different professions use different software** and they come with different expectations on how your software is supposed to function.\n\n### Charters and Timeboxes\n\nYou don’t always have to test the whole system. Instead, you can set specific testing goals, commonly referred to as **charters.** An example might be: _“Explore the newest filtering options”_ or _“Explore the new report builder interface.”_\n\nSome teams also like to timebox these tests. I’d say that makes sense if your testers already know the system a bit and are trying to only test one part of it. For a full system test, I would not assign any timeboxes.\n\n### Documenting the Test\n\n**The testers should ideally record themselves while testing.** Screen + voice recordings are ideal, but making a voice recording is fine too.\n\nThe purpose isn’t necessarily so others could review (though that would be great!), but for the tester to refer to the recording while they create their documentation. This way they can easily grab screenshots or refer to a time segment where something weird happened. It also ensures that they don’t forget any details.\n\nWriting things down as you’re testing is a burden that takes away from the exploratory nature of the process. Do it later.\n\n## Quantifying the Testing Data\n\nA bit of a problem with this approach is quantifying the results and value that they bring. This depends on the data you get, so let’s look at what you can expect.\n\n### Onboarding Issues\n\nIf a tester isn’t a domain expert or has never used the software previously expect their problems and feedback to be centered on the onboarding process. If this product is alien to them then this will be a good test of how easy it is for someone to pick up and use your software.\n\n### Domain-related Issues\n\nThis is the **jackpot category.** If a domain export identifies something is wrong with how the system displays or performs a business process, then you’re getting a lot of value out of this testing practice.\n\n### Bugs\n\nFinding bugs before your customers do is extremely valuable and Exploratory testing will likely result in the discovery of some bugs. While this is great, don’t focus solely on the bugs, look for all the other issues as well!\n\n### Usability and Accessibility Issues\n\nThe more diverse your testers, the more you can expect to learn about usability problems. Strive to include people with various motor, vision, hearing, and cognitive impairments in your organization!\n\nThe improvements that arise from this will benefit all of your other customers as well as those with impairments. There is no excuse to avoid focusing on this.\n\n### User Experience Issues\n\nLook for comments like _“that felt weird”_ or _“I wasn’t sure it actually did [the thing].”_ These will inform you of situations where your software isn’t clearly communicating that’s happening. Your software should solve problems, not create confusion.\n\n## Using the Testing Data\n\nSomeone will have to crawl through the testing documents to identify all the different issues and formalize them into tasks. This is likely the domain of a QA lead, designer, or product owner. Obviously, it depends on the type of organization. At any rate, they **will spend a lot of time doing this** and they will get better at it as time goes on.\n\n## Second-order Benefits\n\nThere’s some other benefits worth considering as this is a relaxed, team-orianted activity:\n\n- Everyone learns more about the system and studies do show that people get more invested the more they are involved in something.\n  - I’ve noticed that **salespeople especially benefit from understanding the system.** The more they know, the better they are at answering the questions of potential customers. The number of times they have to say _“I’ll get back to you on that”_ decreases and their confidence grows.\n- It teaches people how to test and investigate better. That will improve productivity in future testing practices. \n  - It’s valuable for a junior QA tester to gain this sort of 360° experience with the system.\n- It’s an organization-wide effort that brings different departments together. This improves cross-team communication and understanding.\n- It helps inform future development. It’s better to crowd-source a lot of suggestions based on actual usage, not hypothetical assumptions.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/who-should-test-software.png\" alt=\"Diagram: Asks should you test? Are you a tester? No? Doesn’t matter you should still test!\" /><figcaption>Show this diagram to your co-workers.</figcaption></figure>\n\n## Get Going!\n\nSo, what are you waiting for? Get everyone together, share this concept with them and allow everyone an hour to sit down and explore. You’ll be amazed by all the different discoveries and perspectives!\n","slug":"guide-to-exploratory-testing","published":1,"updated":"2020-09-24T11:18:29.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tra000arkrimgx04tzh","content":"<p><em>”Automated testing is king!”</em></p>\n<p>This is a sentiment echoed by software and QA engineers across industries. And it makes sense! Verifying a piece of software works as intended is best achieved by an automated process. But that’s not the only thing we should be testing.</p>\n<p>Tests might tell us that something is working, <strong>but they won’t tell us how it could function better for the people using it.</strong> We like to delegate this problem to domain experts and designers. But what’s the equivalent of an integration test in the user experience design world?</p>\n<p>Do we need another set of design experts for this? QA design engineers? Do we need to organize focus groups and interviews? What if we can’t afford any of this? What if you’re an offshore team that can’t get approval to talk to customers?</p>\n<p>There’s a much simpler solution. One that’s on budget, sensible, <strong>and driven by empathy towards people who will use the product.</strong></p>\n<h2 id=\"What-Is-Exploratory-Testing\"><a href=\"#What-Is-Exploratory-Testing\" class=\"headerlink\" title=\"What Is Exploratory Testing?\"></a>What Is Exploratory Testing?</h2><p>Most testing practices define a set of flows and validate their execution. They ask: <em>does this work the way we defined it?</em> In contrast, with Exploratory testing, we want to see if those flows make sense and if there’s something we forgot to define. </p>\n<p>In 2018 I wrote <em><a href=\"/2018/output-vs-outcome\">“Output vs Outcome”</a></em> which comes as parallel to that. Most of the testing we do verifies that our <em>outputs are correct.</em> <strong>Exploratory testing attempts to confirm outcomes and inform future goals.</strong></p>\n<p>The weight of practicing this does not fall on the engineers. Engineers or designers should manage the process, but they aren’t necessary practitioners who will carry it out. (But they are free to take part!)</p>\n<h3 id=\"Who-Should-Test\"><a href=\"#Who-Should-Test\" class=\"headerlink\" title=\"Who Should Test?\"></a>Who Should Test?</h3><p>Everyone! Get as many people as possible invested in using the software you’re building and get them to <strong><em>think.</em></strong> Everyone in the organization should invest a few hours per month to do this. Sales, marketing, management, heck even your aunt and your favorite barista should chime in.</p>\n<h3 id=\"What’s-the-Process-Like\"><a href=\"#What’s-the-Process-Like\" class=\"headerlink\" title=\"What’s the Process Like?\"></a>What’s the Process Like?</h3><figure class=\"blog-post-image\"><img src=\"/content/images/2020/exploratory-testing-diagram.png\" alt=\"Diagram: text, learn, execute, repeat.\"><figcaption>Test, learn, execute, repeat.</figcaption></figure>\n\n<p>There isn’t a strict process. <em>“Freestyle testing”</em> gets mentioned and this puts people off. The current trend is that every manager will insist on a well-known and proven process. </p>\n<p>Exploratory testing isn’t complete chaos, though. There should certainly be a pre-defined way we expect a tester to document and report their findings. But the way they will conduct the test itself is what’s left to the individual.</p>\n<p>It’s a process that values individuality and diversity. The more diverse the testers, the more interesting the findings. Here are some of the types of diversity we’re thinking of here:</p>\n<ul>\n<li><strong>People use their devices in different ways.</strong> For example, it’s be great to have both keyboard-heavy users and folks who avoid using (or cannot use) the keyboard as testers.</li>\n<li><strong>Unique experiences and backgrounds</strong> lead to different expectations of how the business process the software is enabling is supposed to work.</li>\n<li>People from <strong>different professions use different software</strong> and they come with different expectations on how your software is supposed to function.</li>\n</ul>\n<h3 id=\"Charters-and-Timeboxes\"><a href=\"#Charters-and-Timeboxes\" class=\"headerlink\" title=\"Charters and Timeboxes\"></a>Charters and Timeboxes</h3><p>You don’t always have to test the whole system. Instead, you can set specific testing goals, commonly referred to as <strong>charters.</strong> An example might be: <em>“Explore the newest filtering options”</em> or <em>“Explore the new report builder interface.”</em></p>\n<p>Some teams also like to timebox these tests. I’d say that makes sense if your testers already know the system a bit and are trying to only test one part of it. For a full system test, I would not assign any timeboxes.</p>\n<h3 id=\"Documenting-the-Test\"><a href=\"#Documenting-the-Test\" class=\"headerlink\" title=\"Documenting the Test\"></a>Documenting the Test</h3><p><strong>The testers should ideally record themselves while testing.</strong> Screen + voice recordings are ideal, but making a voice recording is fine too.</p>\n<p>The purpose isn’t necessarily so others could review (though that would be great!), but for the tester to refer to the recording while they create their documentation. This way they can easily grab screenshots or refer to a time segment where something weird happened. It also ensures that they don’t forget any details.</p>\n<p>Writing things down as you’re testing is a burden that takes away from the exploratory nature of the process. Do it later.</p>\n<h2 id=\"Quantifying-the-Testing-Data\"><a href=\"#Quantifying-the-Testing-Data\" class=\"headerlink\" title=\"Quantifying the Testing Data\"></a>Quantifying the Testing Data</h2><p>A bit of a problem with this approach is quantifying the results and value that they bring. This depends on the data you get, so let’s look at what you can expect.</p>\n<h3 id=\"Onboarding-Issues\"><a href=\"#Onboarding-Issues\" class=\"headerlink\" title=\"Onboarding Issues\"></a>Onboarding Issues</h3><p>If a tester isn’t a domain expert or has never used the software previously expect their problems and feedback to be centered on the onboarding process. If this product is alien to them then this will be a good test of how easy it is for someone to pick up and use your software.</p>\n<h3 id=\"Domain-related-Issues\"><a href=\"#Domain-related-Issues\" class=\"headerlink\" title=\"Domain-related Issues\"></a>Domain-related Issues</h3><p>This is the <strong>jackpot category.</strong> If a domain export identifies something is wrong with how the system displays or performs a business process, then you’re getting a lot of value out of this testing practice.</p>\n<h3 id=\"Bugs\"><a href=\"#Bugs\" class=\"headerlink\" title=\"Bugs\"></a>Bugs</h3><p>Finding bugs before your customers do is extremely valuable and Exploratory testing will likely result in the discovery of some bugs. While this is great, don’t focus solely on the bugs, look for all the other issues as well!</p>\n<h3 id=\"Usability-and-Accessibility-Issues\"><a href=\"#Usability-and-Accessibility-Issues\" class=\"headerlink\" title=\"Usability and Accessibility Issues\"></a>Usability and Accessibility Issues</h3><p>The more diverse your testers, the more you can expect to learn about usability problems. Strive to include people with various motor, vision, hearing, and cognitive impairments in your organization!</p>\n<p>The improvements that arise from this will benefit all of your other customers as well as those with impairments. There is no excuse to avoid focusing on this.</p>\n<h3 id=\"User-Experience-Issues\"><a href=\"#User-Experience-Issues\" class=\"headerlink\" title=\"User Experience Issues\"></a>User Experience Issues</h3><p>Look for comments like <em>“that felt weird”</em> or <em>“I wasn’t sure it actually did [the thing].”</em> These will inform you of situations where your software isn’t clearly communicating that’s happening. Your software should solve problems, not create confusion.</p>\n<h2 id=\"Using-the-Testing-Data\"><a href=\"#Using-the-Testing-Data\" class=\"headerlink\" title=\"Using the Testing Data\"></a>Using the Testing Data</h2><p>Someone will have to crawl through the testing documents to identify all the different issues and formalize them into tasks. This is likely the domain of a QA lead, designer, or product owner. Obviously, it depends on the type of organization. At any rate, they <strong>will spend a lot of time doing this</strong> and they will get better at it as time goes on.</p>\n<h2 id=\"Second-order-Benefits\"><a href=\"#Second-order-Benefits\" class=\"headerlink\" title=\"Second-order Benefits\"></a>Second-order Benefits</h2><p>There’s some other benefits worth considering as this is a relaxed, team-orianted activity:</p>\n<ul>\n<li>Everyone learns more about the system and studies do show that people get more invested the more they are involved in something.<ul>\n<li>I’ve noticed that <strong>salespeople especially benefit from understanding the system.</strong> The more they know, the better they are at answering the questions of potential customers. The number of times they have to say <em>“I’ll get back to you on that”</em> decreases and their confidence grows.</li>\n</ul>\n</li>\n<li>It teaches people how to test and investigate better. That will improve productivity in future testing practices. <ul>\n<li>It’s valuable for a junior QA tester to gain this sort of 360° experience with the system.</li>\n</ul>\n</li>\n<li>It’s an organization-wide effort that brings different departments together. This improves cross-team communication and understanding.</li>\n<li>It helps inform future development. It’s better to crowd-source a lot of suggestions based on actual usage, not hypothetical assumptions.</li>\n</ul>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/who-should-test-software.png\" alt=\"Diagram: Asks should you test? Are you a tester? No? Doesn’t matter you should still test!\"><figcaption>Show this diagram to your co-workers.</figcaption></figure>\n\n<h2 id=\"Get-Going\"><a href=\"#Get-Going\" class=\"headerlink\" title=\"Get Going!\"></a>Get Going!</h2><p>So, what are you waiting for? Get everyone together, share this concept with them and allow everyone an hour to sit down and explore. You’ll be amazed by all the different discoveries and perspectives!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><em>”Automated testing is king!”</em></p>\n<p>This is a sentiment echoed by software and QA engineers across industries. And it makes sense! Verifying a piece of software works as intended is best achieved by an automated process. But that’s not the only thing we should be testing.</p>\n<p>Tests might tell us that something is working, <strong>but they won’t tell us how it could function better for the people using it.</strong> We like to delegate this problem to domain experts and designers. But what’s the equivalent of an integration test in the user experience design world?</p>\n<p>Do we need another set of design experts for this? QA design engineers? Do we need to organize focus groups and interviews? What if we can’t afford any of this? What if you’re an offshore team that can’t get approval to talk to customers?</p>\n<p>There’s a much simpler solution. One that’s on budget, sensible, <strong>and driven by empathy towards people who will use the product.</strong></p>\n<h2 id=\"What-Is-Exploratory-Testing\"><a href=\"#What-Is-Exploratory-Testing\" class=\"headerlink\" title=\"What Is Exploratory Testing?\"></a>What Is Exploratory Testing?</h2><p>Most testing practices define a set of flows and validate their execution. They ask: <em>does this work the way we defined it?</em> In contrast, with Exploratory testing, we want to see if those flows make sense and if there’s something we forgot to define. </p>\n<p>In 2018 I wrote <em><a href=\"/2018/output-vs-outcome\">“Output vs Outcome”</a></em> which comes as parallel to that. Most of the testing we do verifies that our <em>outputs are correct.</em> <strong>Exploratory testing attempts to confirm outcomes and inform future goals.</strong></p>\n<p>The weight of practicing this does not fall on the engineers. Engineers or designers should manage the process, but they aren’t necessary practitioners who will carry it out. (But they are free to take part!)</p>\n<h3 id=\"Who-Should-Test\"><a href=\"#Who-Should-Test\" class=\"headerlink\" title=\"Who Should Test?\"></a>Who Should Test?</h3><p>Everyone! Get as many people as possible invested in using the software you’re building and get them to <strong><em>think.</em></strong> Everyone in the organization should invest a few hours per month to do this. Sales, marketing, management, heck even your aunt and your favorite barista should chime in.</p>\n<h3 id=\"What’s-the-Process-Like\"><a href=\"#What’s-the-Process-Like\" class=\"headerlink\" title=\"What’s the Process Like?\"></a>What’s the Process Like?</h3><figure class=\"blog-post-image\"><img src=\"/content/images/2020/exploratory-testing-diagram.png\" alt=\"Diagram: text, learn, execute, repeat.\"><figcaption>Test, learn, execute, repeat.</figcaption></figure>\n\n<p>There isn’t a strict process. <em>“Freestyle testing”</em> gets mentioned and this puts people off. The current trend is that every manager will insist on a well-known and proven process. </p>\n<p>Exploratory testing isn’t complete chaos, though. There should certainly be a pre-defined way we expect a tester to document and report their findings. But the way they will conduct the test itself is what’s left to the individual.</p>\n<p>It’s a process that values individuality and diversity. The more diverse the testers, the more interesting the findings. Here are some of the types of diversity we’re thinking of here:</p>\n<ul>\n<li><strong>People use their devices in different ways.</strong> For example, it’s be great to have both keyboard-heavy users and folks who avoid using (or cannot use) the keyboard as testers.</li>\n<li><strong>Unique experiences and backgrounds</strong> lead to different expectations of how the business process the software is enabling is supposed to work.</li>\n<li>People from <strong>different professions use different software</strong> and they come with different expectations on how your software is supposed to function.</li>\n</ul>\n<h3 id=\"Charters-and-Timeboxes\"><a href=\"#Charters-and-Timeboxes\" class=\"headerlink\" title=\"Charters and Timeboxes\"></a>Charters and Timeboxes</h3><p>You don’t always have to test the whole system. Instead, you can set specific testing goals, commonly referred to as <strong>charters.</strong> An example might be: <em>“Explore the newest filtering options”</em> or <em>“Explore the new report builder interface.”</em></p>\n<p>Some teams also like to timebox these tests. I’d say that makes sense if your testers already know the system a bit and are trying to only test one part of it. For a full system test, I would not assign any timeboxes.</p>\n<h3 id=\"Documenting-the-Test\"><a href=\"#Documenting-the-Test\" class=\"headerlink\" title=\"Documenting the Test\"></a>Documenting the Test</h3><p><strong>The testers should ideally record themselves while testing.</strong> Screen + voice recordings are ideal, but making a voice recording is fine too.</p>\n<p>The purpose isn’t necessarily so others could review (though that would be great!), but for the tester to refer to the recording while they create their documentation. This way they can easily grab screenshots or refer to a time segment where something weird happened. It also ensures that they don’t forget any details.</p>\n<p>Writing things down as you’re testing is a burden that takes away from the exploratory nature of the process. Do it later.</p>\n<h2 id=\"Quantifying-the-Testing-Data\"><a href=\"#Quantifying-the-Testing-Data\" class=\"headerlink\" title=\"Quantifying the Testing Data\"></a>Quantifying the Testing Data</h2><p>A bit of a problem with this approach is quantifying the results and value that they bring. This depends on the data you get, so let’s look at what you can expect.</p>\n<h3 id=\"Onboarding-Issues\"><a href=\"#Onboarding-Issues\" class=\"headerlink\" title=\"Onboarding Issues\"></a>Onboarding Issues</h3><p>If a tester isn’t a domain expert or has never used the software previously expect their problems and feedback to be centered on the onboarding process. If this product is alien to them then this will be a good test of how easy it is for someone to pick up and use your software.</p>\n<h3 id=\"Domain-related-Issues\"><a href=\"#Domain-related-Issues\" class=\"headerlink\" title=\"Domain-related Issues\"></a>Domain-related Issues</h3><p>This is the <strong>jackpot category.</strong> If a domain export identifies something is wrong with how the system displays or performs a business process, then you’re getting a lot of value out of this testing practice.</p>\n<h3 id=\"Bugs\"><a href=\"#Bugs\" class=\"headerlink\" title=\"Bugs\"></a>Bugs</h3><p>Finding bugs before your customers do is extremely valuable and Exploratory testing will likely result in the discovery of some bugs. While this is great, don’t focus solely on the bugs, look for all the other issues as well!</p>\n<h3 id=\"Usability-and-Accessibility-Issues\"><a href=\"#Usability-and-Accessibility-Issues\" class=\"headerlink\" title=\"Usability and Accessibility Issues\"></a>Usability and Accessibility Issues</h3><p>The more diverse your testers, the more you can expect to learn about usability problems. Strive to include people with various motor, vision, hearing, and cognitive impairments in your organization!</p>\n<p>The improvements that arise from this will benefit all of your other customers as well as those with impairments. There is no excuse to avoid focusing on this.</p>\n<h3 id=\"User-Experience-Issues\"><a href=\"#User-Experience-Issues\" class=\"headerlink\" title=\"User Experience Issues\"></a>User Experience Issues</h3><p>Look for comments like <em>“that felt weird”</em> or <em>“I wasn’t sure it actually did [the thing].”</em> These will inform you of situations where your software isn’t clearly communicating that’s happening. Your software should solve problems, not create confusion.</p>\n<h2 id=\"Using-the-Testing-Data\"><a href=\"#Using-the-Testing-Data\" class=\"headerlink\" title=\"Using the Testing Data\"></a>Using the Testing Data</h2><p>Someone will have to crawl through the testing documents to identify all the different issues and formalize them into tasks. This is likely the domain of a QA lead, designer, or product owner. Obviously, it depends on the type of organization. At any rate, they <strong>will spend a lot of time doing this</strong> and they will get better at it as time goes on.</p>\n<h2 id=\"Second-order-Benefits\"><a href=\"#Second-order-Benefits\" class=\"headerlink\" title=\"Second-order Benefits\"></a>Second-order Benefits</h2><p>There’s some other benefits worth considering as this is a relaxed, team-orianted activity:</p>\n<ul>\n<li>Everyone learns more about the system and studies do show that people get more invested the more they are involved in something.<ul>\n<li>I’ve noticed that <strong>salespeople especially benefit from understanding the system.</strong> The more they know, the better they are at answering the questions of potential customers. The number of times they have to say <em>“I’ll get back to you on that”</em> decreases and their confidence grows.</li>\n</ul>\n</li>\n<li>It teaches people how to test and investigate better. That will improve productivity in future testing practices. <ul>\n<li>It’s valuable for a junior QA tester to gain this sort of 360° experience with the system.</li>\n</ul>\n</li>\n<li>It’s an organization-wide effort that brings different departments together. This improves cross-team communication and understanding.</li>\n<li>It helps inform future development. It’s better to crowd-source a lot of suggestions based on actual usage, not hypothetical assumptions.</li>\n</ul>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/who-should-test-software.png\" alt=\"Diagram: Asks should you test? Are you a tester? No? Doesn’t matter you should still test!\"><figcaption>Show this diagram to your co-workers.</figcaption></figure>\n\n<h2 id=\"Get-Going\"><a href=\"#Get-Going\" class=\"headerlink\" title=\"Get Going!\"></a>Get Going!</h2><p>So, what are you waiting for? Get everyone together, share this concept with them and allow everyone an hour to sit down and explore. You’ll be amazed by all the different discoveries and perspectives!</p>\n"},{"title":"How to Master a New Codebase","seo_description":"Dealing with a large “legacy” codebase? Here’s a collection of tips and tricks on how to deal read and navigate the code.","promo_photo":"/content/images/2017/uncharted-lands.jpg","date":"2017-08-06T00:00:00.000Z","updated":"2020-11-01T00:00:00.000Z","_content":"\nJumping into a new project can be scary. Especially if _“legacy”_ the words used to describe it. But if you learn the right techniques to navigating a new codebase then on-boarding will take a lot less time.\n\nOver my 5+ year career I’ve had to switch between projects of various sizes. It’s been frustrating at times, but I’ve noticed certain _patterns_ over the years. \n\nThis article is an evolving collection of techniques that I’ve developed to help me become as productive as possible. I recently [joined Amazon](/2020/hello-amsterdam) and this methodology has proven its worth for me – allowing me to contribute since week 1!\n\n## Traversing Uncharted Territory\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/uncharted-lands.jpg\" alt=\"The great outdoors: mountains, trees, a lake.\" /><figcaption>Where do you start? Photo by tpsdave via Pixabay.</figcaption></figure>\n\n_Let me set the scene. This is a short personal anecdote from 5 years ago that will be entertaining to read. It’s purpose is to show just how hard it can be to join a large codebase. (You can skip this part [by clicking here.](#How-to-Dive-Into-a-Large-Codebase))_\n\n### Part 1: Problem Setup\n\nEver read a murder mystery, but instead of solving a murder, the character is fixing a bug? Here’s the scenario for out little detective mystery:\n\n**🔎 Context:** You’re working on a giant monolith app. The tech is somewhat outdated. (New questions stopped appearing on Stack Overflow around 2010.) There’s also little documentation left by the previous team.\n\n**📝 Task:** The client reported a bug with one of the form components on the interface. We will henceforth call this `Component A`. The client is using Chrome on Windows 10.\n\n**😵 Confusion:** Upon inspection in Chrome on Mac OS, you cannot reproduce the bug. You could also not replicate the bug on your virtual machine. (It works great both on Edge, Chrome, and IE11!)\n\n**💡 To clarify:** The client is not making this up. You refer to their screenshots and also note that the form looks different on their end. (The styles don’t match.)\n\nHow do you tackle this? Working with bugs that are hard to reproduce is a hard time. What’s the thought process and where do you start looking first? Also, remember: _you’re new to this large codebase._\n\n<div class=\"alert-box alert-box__info\">🤔 Try to think of a couple of possible problems. Let me know if your intuition guessed what the problem was!</div>\n\n### Part 2: Initial Approach\n\nI was lucky to have a colleague who uses Windows. I got them to open the staging app and check it out. And the bug was there in all its glory.\n\n**I found it strange that the bug was not present on VirtualBox. Was the version of Chrome on the VM different?**\n\nI borrowed their computer over lunch. Then, I inspected the generated HTML and JavaScript bundle via Chrome Developer Tools. My findings were surprising. This strange component was not our `Component A`.\n\nSince the bundled code is obfuscated it was hard to figure out what I was looking at. But, I was able to eventually find this component. This `Component B` performed the same functionality but had different styles and behavior.\n\nKnowing the name of the component I fixed the bug – that was related to the logic – and tested the changes. Sure enough, the component on the screen still had different styles, but the bug had been solved.\n\n### Part 3: Digging Deeper\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/prairie-dogs-debugging-and-diggin.jpg\" alt=\"Image of prairie dogs. The joke is that they’re digging.\" /><figcaption>Prairie dogs or programmers? Photo by Kapa65 via Pixabay.</figcaption></figure>\n\nYay, bug solved, case closed, right? _Well, not quite._ This is an interesting find and it has to be resolved. Anything else would be dishonest to the client and disrespectful to my craft.\n\n<div class=\"alert-box alert-box__info\">✨ Always try to find the root cause of the problem. Try to avoid compromising with a workaround solution.</div>\n\n**Some more context:** These two components are date inputs. (Very specialized to the business process.) They achieve the same result in the end, but the input flows are very different. These components also look strikingly different in their visual style.\n\nMy suspicion was that there had to be some sort of `if/else` switch that determines when B is inserted instead of A.\n\nI started looking at the controller that instantiates the component and worked my way up.\n\nI did not find any such logic on my way to the final file. This was a top-level “bootstrap” file that registers every component that’s used in the app.  It imports these components and makes them available to the global namespace. It does this via a `registerImplementation()` method.\n\nAt this point, I am a bit fatigued. I had crawled my way up a big dependency graph, but have not found what I was looking for.\n\nRotten luck, so far.\n\nNow, I’ve seen this “bootstrap” file before, but don’t remember seeing any real logic inside of it.\n\nAs expected I did not find any magical `if/else` statement. What I did find was a `registerImplementation()` call for `Component A`, but none for `Component B`.\n\nI read the file line-by-line and towards the bottom of the file, I noticed something I missed earlier. There was a `require` statement for a file called `mobileAppClient`. \n\n#### The Mystery Solved\n\nIn this file was a magical block of code:\n\n```\nif (app.getIsMobile()) {\n  overrideImplementation(componentA, componentB);\n  // …other code\n}\n```\n\nThis was no doubt the problem. The app would use `Component B` over `Component A` on mobile devices. And I suspected that this magical `getIsMobile()` method was the problem. (Spoiler: Yes, yes it was!)\n\nThe implementation was naïve. Much like this:\n\n```\nfunction app.getIsMobile() {\n  return Modernizer.touchEvents;\n}\n```\n\nThis logic treated every device with a touchscreen as a mobile device. Sure enough, my colleague's laptop did have a touchscreen. And so did the client who reported the bug.\n\nI reimplemented this method in a more sophisticated way and **properly** solved the bug. Hooray!\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/crawl-graph.png\" alt=\"A simplified version of our crawl path.\" /><figcaption>A simplified view of all the files I had to go through.</figcaption></figure>\n\n\n## Grasping The Unfamiliar\n\nThe hunt for the source of this little bug took around 3 hours.\n\n**The business value was also greater than initially expected. This bugfix solved several other issues the client was having.**\n\nIt also lead us to a bigger discussion about the app’s mobile experience. (Which was in poor state.)\n\nAs for me, this experience helped me get a better grasp of the entire system. As I encountered something new or unusual I’d take a note of it. I was writing a _“traveler’s journal”_ of this unfamiliar codebase.\n\nThis is why hunting bugs in a large codebase you’re not familiar with can be summed up as: _“Solving a (~~murder~~) mystery in an unfamiliar land.”_\n\nYou first have to get your bearings, chart out the land, and then start gathering clues and cracking the case.\n\n## How to Dive Into a Large Codebase\n\nFirst of all, understanding the codebase is something that is bound to happen _eventually._ But, if you’re expected to do it often then it helps to develop the techniques that make it easier.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/diving-into-code.jpg\" alt=\"Image of a diver in the sea.\" /><figcaption>Diving deep. Photo by uccisea1970 via Pixabay.</figcaption></figure>\n\nBut, if you have to do this on a regular basis, how can you get good (and fast!) at doing it? It comes down to a couple of techniques. I call them:\n\n- Observing and researching,\n- Testing,\n- Digging,\n- Breaking,\n- Time traveling, and\n- Resting\n\nI know the names are not brilliant, but let’s see what they bring to the table.\n\n### Observing and Researching\n\nThe first thing you should do on a new project is to spend time using the app in a production environment. Get to know all the features and the business problems the app is solving.\n\nThe best way to go about this is [exploratory testing.](/2018/guide-to-exploratory-testing)\n\nThis step is crucial to understanding the project. Especially if this is a business domain that you are unfamiliar with.\n\n#### Get an On-boarding Buddy\n\nYour time will be a lot easier if you find someone who has tenure in the project and is open to answering your question. \n\nDon’t disregard engineers who might have much less experience than you. Anyone who has been around longer than you is a great source of knowledge. _Project tenure_ is the most important metric.\n\nIt’s best for this person to be a fellow engineer. You can find a separate person who you can look up to as a domain expert.\n\n#### Read the Docs\n\nAfter that, you should do detailed research to find all the documentation that exists. (But, take the docs with a grain of salt as they are likely outdated.)\n\nHere’s what you’re looking for (in order of importance):\n- All the project README files. (Check when they were last updated.)\n- A project wiki.\n- Recent meeting notes (preferably with key stakeholders.)\n- Architecture design docs.\n- Deployment docs.\n- Backlog of upcoming epics.\n- Backlog of _fixed_ issues.\n- User interview reports, videos, etc.\n- Mockups of upcoming features.\n\n#### Improve the Docs\n\nAt a minimum there’s going be a README file for the project you just joined. This file will be outdated (I can bet on it!) and the instruction will likely be unclear.\n\nMost devs write this file from their point of understanding – they _already_ know how to start the system. The README is just a short set of important notes for them. This is why newcomers to the project always struggle to follow the instructions.\n\nThis means you have a great role to play. You are coming to the project with no prior understanding and you can (and must!) update everything as you go.\n\n### Read the Tests\n\nI hope you’ve just joined a project that actually has tests. If so, tests are basically a form of documentation. You can figure out a lot about the project by looking at:\n- The names of the test cases.\n- The associated inputs and expected outputs.\n- Modules with the most edge cases covered – usually the most critical ones.\n- The way third-party services are mocked and integrated.\n\nYou don’t need to look too much into the implementation of the tests until it becomes relevant to your task.\n\n#### Improve the Tests\n\nJust like with docs, not every team treats their tests with a high standard. Improving tests by covering edge cases or uncovered lines is a great way to dig deep into a specific piece of code. It also benefits the project and **makes for a good early contribution.**\n\nIf the project doesn’t have any tests then implementing them might be hard for you as a newcomer. You’ll have to earn trust with your team and manager before leading a big initiative like that. (But if you have a green light to do it, take it right away!)\n\n### Digging\n\nThis series of techniques is out-of-scope for the purposes of this article. I will list the concepts and trust you to do your homework and research the things you’re not familiar with.\n\n**But, it mostly boils down to using a good editor or IDE and actually using the features that make that editor awesome.**\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/dont-dig-with-kids-toys.jpg\" alt=\"Image of children’s shovels on the beach.\" /><figcaption>Use better tools. Photo by Efraimstochter via Pixabay.</figcaption></figure>\n\nI use JetBrains WebStorm. (Visual Studio Code is a fine, open-source alternative.) As for you, you should use whatever you like. But bear in mind that some features are a “must have”, especially when jumping into a large codebase.\n\nI’d say that these features are:\n- `go-to` definition,\n- intelligent code completion (_“intellisense”_ and the like),\n- structure pop-up,\n- jump to deceleration,\n- jump down the hierarchy,\n- show usage, \n- regex search, \n- git integration (to quickly inspect file history), and\n- linter integration.\n\nThese make it easy to navigate any project with speed. They also shine when dealing with a new codebase.\n\nI would also note that using the search feature of your editor can be very powerful when all else fails. Remember to make your queries more precise with regular expressions and by filtering out directories and file types.\n\n### Breaking\n\nDebuggers and profilers are your friends! These tools are as important as your editor.  Spend time finding the best ones and getting to know them.\n\nTop features I look for:\n- breakpoints (duh),\n- change code at runtime,\n- jump to line,\n- performance profiling,\n- track scope stack, and\n- access values/methods in scope.\n\nIt is not uncommon to have several tools that handle these instead of an all-in-one solution. Obviously, this depends on the language, the surrounding ecosystem, and tooling. (For example, you might use specialized tools like the [React Inspector](https://github.com/xyc/react-inspector) and [Redux DevTools.](https://github.com/reduxjs/redux-devtools))\n\n### Time Travel\n\nThis tip boils down to one simple truth: **`git` is your friend!**\n\n**Scenario:** Let’s say you’re fixing a complex bug. You’ve found all the important blocks of code, but you have a hard time figuring out how to actually fix the problem. What now?\n\nAt this point, you’ll find yourself confused by something specific. This will likely be a block of code that was at some point introduced either as a bug fix or a feature.\n\nLooking at the history of that file will help you better understand how and when this happened.\n\nHow you achieve this is up to you. Some prefer to use `git` from their CLI of choice. The obvious* commands here are:\n- `git log -p -- path/to/file`\n- `git show`\n- `git diff`\n\n<div class=\"footnote\"><p>_*A not so obvious command would be something like `git bisect`. My friend Jovan wrote a quick intro for [the Spicefactory blog](https://spicefactory.co/blog/2016/08/26/spicycomic-3-git-bisect/) about this topic._</p></div>\n\nI prefer to the use the `git` tools built into my IDE. I find that they help save time overall and don’t require that you remember all the commands and options.\n\nChoose your tools as you see fit. But remember that the end goal is to go back in time. This should be efficient and yield as much useful information as possible.\n\nYou’ll first look for the git message and diff. Then try to find something like this:\n- The reference to the ticket (bug report or feature request) that was addressed by the commit(s).\n- The pull request and any discussion thread that may have existed.\n- The test cases that were introduced/modified when the code was introduced.\n\nAnd (this is somewhat my “favorite”):\n\n_The rapid `“hotfixes”` that were merged to `“fix minor bugs”`. These bugs appeared along with the feature._\n\nNot sure what I mean? Tell me if this sounds familiar:\n\nOn smaller teams where one individual owns too much of the codebase, you will see these things happen. The developer will commit a major change (new feature). The feature will generally work but soon a set of bug reports comes in from the QA team or stakeholders.\n\nIn a race against time to complete their sprint, the developer will then introduce a series of rapid _“fixes.”_\n\nThese fixes never address the core problem. They instead introduce a solution to cover some edge-cases. If you’re ever in a situation like this one, consider this:\n\n1. Revert their bug fixes.\n2. Try to refactor.\n3. If the refactor fails, re-implement the feature from scratch.\n\nThis will likely take a lot more time. Communicate what you plan on doing to your project manager and see if it’s alright to commit that time.\n\n### Resting\n\nMy final tip is this: don’t overwork yourself and do everything to avoid burnout.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/relax-like-a-cat.jpg\" alt=\"A cool cat, relaxing.\" /><figcaption>Leave time for yourself. Photo by lppicture via Pixabay.</figcaption></figure>\n\n**_Programming is overwhelming._**\n\nNew codebases (especially large ones!) are overwhelming. Trying to understand dozens of design decisions from the past is overwhelming.\n\nAre you a junior developer? Then all the new patterns and ~~needless~~ clever abstractions you encounter will probably be overwhelming.\n\nSo with that in mind don’t make things harder for yourself.\n\nGive yourself time to breathe. Don’t lose sleep over this. Fight your managers if they try to put you in a crunch or assign impossible-to-hit deadlines.\n\n## Final Takeaways\n\nFatigued by the article or just skipped ahead to see the titles and images? I feel you. Here’s what you should remember:\n\n1. **Do your homework:** Learn as much as you can about the domain, the business problems, the app architecture, and find all the docs you can.\n2. **Gear up:** Use a great IDE/Code editor that will make digging through the code easier.\n3. **Debug at runtime:** Set breakpoints at critical sections. Monitor the stack. Follow what’s happening line-by-line.\n4. **Use git history:** Remember to look at how a piece of code has changed over time whenever you are confused as to what it actually does. (Or why it even exists.)\n5. **Rest and don’t be overwhelmed:** Programming is hard. Your job is hard. Don’t make it harder by being tired and stressed.\n","source":"_posts/how-to-read-and-navigate-new-codebase.md","raw":"---\ntitle: How to Master a New Codebase\nseo_description: Dealing with a large “legacy” codebase? Here’s a collection of tips and tricks on how to deal read and navigate the code.\npromo_photo: /content/images/2017/uncharted-lands.jpg\ndate: 2017-08-06\nupdated: 2020-11-01\ntags:\n---\n\nJumping into a new project can be scary. Especially if _“legacy”_ the words used to describe it. But if you learn the right techniques to navigating a new codebase then on-boarding will take a lot less time.\n\nOver my 5+ year career I’ve had to switch between projects of various sizes. It’s been frustrating at times, but I’ve noticed certain _patterns_ over the years. \n\nThis article is an evolving collection of techniques that I’ve developed to help me become as productive as possible. I recently [joined Amazon](/2020/hello-amsterdam) and this methodology has proven its worth for me – allowing me to contribute since week 1!\n\n## Traversing Uncharted Territory\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/uncharted-lands.jpg\" alt=\"The great outdoors: mountains, trees, a lake.\" /><figcaption>Where do you start? Photo by tpsdave via Pixabay.</figcaption></figure>\n\n_Let me set the scene. This is a short personal anecdote from 5 years ago that will be entertaining to read. It’s purpose is to show just how hard it can be to join a large codebase. (You can skip this part [by clicking here.](#How-to-Dive-Into-a-Large-Codebase))_\n\n### Part 1: Problem Setup\n\nEver read a murder mystery, but instead of solving a murder, the character is fixing a bug? Here’s the scenario for out little detective mystery:\n\n**🔎 Context:** You’re working on a giant monolith app. The tech is somewhat outdated. (New questions stopped appearing on Stack Overflow around 2010.) There’s also little documentation left by the previous team.\n\n**📝 Task:** The client reported a bug with one of the form components on the interface. We will henceforth call this `Component A`. The client is using Chrome on Windows 10.\n\n**😵 Confusion:** Upon inspection in Chrome on Mac OS, you cannot reproduce the bug. You could also not replicate the bug on your virtual machine. (It works great both on Edge, Chrome, and IE11!)\n\n**💡 To clarify:** The client is not making this up. You refer to their screenshots and also note that the form looks different on their end. (The styles don’t match.)\n\nHow do you tackle this? Working with bugs that are hard to reproduce is a hard time. What’s the thought process and where do you start looking first? Also, remember: _you’re new to this large codebase._\n\n<div class=\"alert-box alert-box__info\">🤔 Try to think of a couple of possible problems. Let me know if your intuition guessed what the problem was!</div>\n\n### Part 2: Initial Approach\n\nI was lucky to have a colleague who uses Windows. I got them to open the staging app and check it out. And the bug was there in all its glory.\n\n**I found it strange that the bug was not present on VirtualBox. Was the version of Chrome on the VM different?**\n\nI borrowed their computer over lunch. Then, I inspected the generated HTML and JavaScript bundle via Chrome Developer Tools. My findings were surprising. This strange component was not our `Component A`.\n\nSince the bundled code is obfuscated it was hard to figure out what I was looking at. But, I was able to eventually find this component. This `Component B` performed the same functionality but had different styles and behavior.\n\nKnowing the name of the component I fixed the bug – that was related to the logic – and tested the changes. Sure enough, the component on the screen still had different styles, but the bug had been solved.\n\n### Part 3: Digging Deeper\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/prairie-dogs-debugging-and-diggin.jpg\" alt=\"Image of prairie dogs. The joke is that they’re digging.\" /><figcaption>Prairie dogs or programmers? Photo by Kapa65 via Pixabay.</figcaption></figure>\n\nYay, bug solved, case closed, right? _Well, not quite._ This is an interesting find and it has to be resolved. Anything else would be dishonest to the client and disrespectful to my craft.\n\n<div class=\"alert-box alert-box__info\">✨ Always try to find the root cause of the problem. Try to avoid compromising with a workaround solution.</div>\n\n**Some more context:** These two components are date inputs. (Very specialized to the business process.) They achieve the same result in the end, but the input flows are very different. These components also look strikingly different in their visual style.\n\nMy suspicion was that there had to be some sort of `if/else` switch that determines when B is inserted instead of A.\n\nI started looking at the controller that instantiates the component and worked my way up.\n\nI did not find any such logic on my way to the final file. This was a top-level “bootstrap” file that registers every component that’s used in the app.  It imports these components and makes them available to the global namespace. It does this via a `registerImplementation()` method.\n\nAt this point, I am a bit fatigued. I had crawled my way up a big dependency graph, but have not found what I was looking for.\n\nRotten luck, so far.\n\nNow, I’ve seen this “bootstrap” file before, but don’t remember seeing any real logic inside of it.\n\nAs expected I did not find any magical `if/else` statement. What I did find was a `registerImplementation()` call for `Component A`, but none for `Component B`.\n\nI read the file line-by-line and towards the bottom of the file, I noticed something I missed earlier. There was a `require` statement for a file called `mobileAppClient`. \n\n#### The Mystery Solved\n\nIn this file was a magical block of code:\n\n```\nif (app.getIsMobile()) {\n  overrideImplementation(componentA, componentB);\n  // …other code\n}\n```\n\nThis was no doubt the problem. The app would use `Component B` over `Component A` on mobile devices. And I suspected that this magical `getIsMobile()` method was the problem. (Spoiler: Yes, yes it was!)\n\nThe implementation was naïve. Much like this:\n\n```\nfunction app.getIsMobile() {\n  return Modernizer.touchEvents;\n}\n```\n\nThis logic treated every device with a touchscreen as a mobile device. Sure enough, my colleague's laptop did have a touchscreen. And so did the client who reported the bug.\n\nI reimplemented this method in a more sophisticated way and **properly** solved the bug. Hooray!\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/crawl-graph.png\" alt=\"A simplified version of our crawl path.\" /><figcaption>A simplified view of all the files I had to go through.</figcaption></figure>\n\n\n## Grasping The Unfamiliar\n\nThe hunt for the source of this little bug took around 3 hours.\n\n**The business value was also greater than initially expected. This bugfix solved several other issues the client was having.**\n\nIt also lead us to a bigger discussion about the app’s mobile experience. (Which was in poor state.)\n\nAs for me, this experience helped me get a better grasp of the entire system. As I encountered something new or unusual I’d take a note of it. I was writing a _“traveler’s journal”_ of this unfamiliar codebase.\n\nThis is why hunting bugs in a large codebase you’re not familiar with can be summed up as: _“Solving a (~~murder~~) mystery in an unfamiliar land.”_\n\nYou first have to get your bearings, chart out the land, and then start gathering clues and cracking the case.\n\n## How to Dive Into a Large Codebase\n\nFirst of all, understanding the codebase is something that is bound to happen _eventually._ But, if you’re expected to do it often then it helps to develop the techniques that make it easier.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/diving-into-code.jpg\" alt=\"Image of a diver in the sea.\" /><figcaption>Diving deep. Photo by uccisea1970 via Pixabay.</figcaption></figure>\n\nBut, if you have to do this on a regular basis, how can you get good (and fast!) at doing it? It comes down to a couple of techniques. I call them:\n\n- Observing and researching,\n- Testing,\n- Digging,\n- Breaking,\n- Time traveling, and\n- Resting\n\nI know the names are not brilliant, but let’s see what they bring to the table.\n\n### Observing and Researching\n\nThe first thing you should do on a new project is to spend time using the app in a production environment. Get to know all the features and the business problems the app is solving.\n\nThe best way to go about this is [exploratory testing.](/2018/guide-to-exploratory-testing)\n\nThis step is crucial to understanding the project. Especially if this is a business domain that you are unfamiliar with.\n\n#### Get an On-boarding Buddy\n\nYour time will be a lot easier if you find someone who has tenure in the project and is open to answering your question. \n\nDon’t disregard engineers who might have much less experience than you. Anyone who has been around longer than you is a great source of knowledge. _Project tenure_ is the most important metric.\n\nIt’s best for this person to be a fellow engineer. You can find a separate person who you can look up to as a domain expert.\n\n#### Read the Docs\n\nAfter that, you should do detailed research to find all the documentation that exists. (But, take the docs with a grain of salt as they are likely outdated.)\n\nHere’s what you’re looking for (in order of importance):\n- All the project README files. (Check when they were last updated.)\n- A project wiki.\n- Recent meeting notes (preferably with key stakeholders.)\n- Architecture design docs.\n- Deployment docs.\n- Backlog of upcoming epics.\n- Backlog of _fixed_ issues.\n- User interview reports, videos, etc.\n- Mockups of upcoming features.\n\n#### Improve the Docs\n\nAt a minimum there’s going be a README file for the project you just joined. This file will be outdated (I can bet on it!) and the instruction will likely be unclear.\n\nMost devs write this file from their point of understanding – they _already_ know how to start the system. The README is just a short set of important notes for them. This is why newcomers to the project always struggle to follow the instructions.\n\nThis means you have a great role to play. You are coming to the project with no prior understanding and you can (and must!) update everything as you go.\n\n### Read the Tests\n\nI hope you’ve just joined a project that actually has tests. If so, tests are basically a form of documentation. You can figure out a lot about the project by looking at:\n- The names of the test cases.\n- The associated inputs and expected outputs.\n- Modules with the most edge cases covered – usually the most critical ones.\n- The way third-party services are mocked and integrated.\n\nYou don’t need to look too much into the implementation of the tests until it becomes relevant to your task.\n\n#### Improve the Tests\n\nJust like with docs, not every team treats their tests with a high standard. Improving tests by covering edge cases or uncovered lines is a great way to dig deep into a specific piece of code. It also benefits the project and **makes for a good early contribution.**\n\nIf the project doesn’t have any tests then implementing them might be hard for you as a newcomer. You’ll have to earn trust with your team and manager before leading a big initiative like that. (But if you have a green light to do it, take it right away!)\n\n### Digging\n\nThis series of techniques is out-of-scope for the purposes of this article. I will list the concepts and trust you to do your homework and research the things you’re not familiar with.\n\n**But, it mostly boils down to using a good editor or IDE and actually using the features that make that editor awesome.**\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/dont-dig-with-kids-toys.jpg\" alt=\"Image of children’s shovels on the beach.\" /><figcaption>Use better tools. Photo by Efraimstochter via Pixabay.</figcaption></figure>\n\nI use JetBrains WebStorm. (Visual Studio Code is a fine, open-source alternative.) As for you, you should use whatever you like. But bear in mind that some features are a “must have”, especially when jumping into a large codebase.\n\nI’d say that these features are:\n- `go-to` definition,\n- intelligent code completion (_“intellisense”_ and the like),\n- structure pop-up,\n- jump to deceleration,\n- jump down the hierarchy,\n- show usage, \n- regex search, \n- git integration (to quickly inspect file history), and\n- linter integration.\n\nThese make it easy to navigate any project with speed. They also shine when dealing with a new codebase.\n\nI would also note that using the search feature of your editor can be very powerful when all else fails. Remember to make your queries more precise with regular expressions and by filtering out directories and file types.\n\n### Breaking\n\nDebuggers and profilers are your friends! These tools are as important as your editor.  Spend time finding the best ones and getting to know them.\n\nTop features I look for:\n- breakpoints (duh),\n- change code at runtime,\n- jump to line,\n- performance profiling,\n- track scope stack, and\n- access values/methods in scope.\n\nIt is not uncommon to have several tools that handle these instead of an all-in-one solution. Obviously, this depends on the language, the surrounding ecosystem, and tooling. (For example, you might use specialized tools like the [React Inspector](https://github.com/xyc/react-inspector) and [Redux DevTools.](https://github.com/reduxjs/redux-devtools))\n\n### Time Travel\n\nThis tip boils down to one simple truth: **`git` is your friend!**\n\n**Scenario:** Let’s say you’re fixing a complex bug. You’ve found all the important blocks of code, but you have a hard time figuring out how to actually fix the problem. What now?\n\nAt this point, you’ll find yourself confused by something specific. This will likely be a block of code that was at some point introduced either as a bug fix or a feature.\n\nLooking at the history of that file will help you better understand how and when this happened.\n\nHow you achieve this is up to you. Some prefer to use `git` from their CLI of choice. The obvious* commands here are:\n- `git log -p -- path/to/file`\n- `git show`\n- `git diff`\n\n<div class=\"footnote\"><p>_*A not so obvious command would be something like `git bisect`. My friend Jovan wrote a quick intro for [the Spicefactory blog](https://spicefactory.co/blog/2016/08/26/spicycomic-3-git-bisect/) about this topic._</p></div>\n\nI prefer to the use the `git` tools built into my IDE. I find that they help save time overall and don’t require that you remember all the commands and options.\n\nChoose your tools as you see fit. But remember that the end goal is to go back in time. This should be efficient and yield as much useful information as possible.\n\nYou’ll first look for the git message and diff. Then try to find something like this:\n- The reference to the ticket (bug report or feature request) that was addressed by the commit(s).\n- The pull request and any discussion thread that may have existed.\n- The test cases that were introduced/modified when the code was introduced.\n\nAnd (this is somewhat my “favorite”):\n\n_The rapid `“hotfixes”` that were merged to `“fix minor bugs”`. These bugs appeared along with the feature._\n\nNot sure what I mean? Tell me if this sounds familiar:\n\nOn smaller teams where one individual owns too much of the codebase, you will see these things happen. The developer will commit a major change (new feature). The feature will generally work but soon a set of bug reports comes in from the QA team or stakeholders.\n\nIn a race against time to complete their sprint, the developer will then introduce a series of rapid _“fixes.”_\n\nThese fixes never address the core problem. They instead introduce a solution to cover some edge-cases. If you’re ever in a situation like this one, consider this:\n\n1. Revert their bug fixes.\n2. Try to refactor.\n3. If the refactor fails, re-implement the feature from scratch.\n\nThis will likely take a lot more time. Communicate what you plan on doing to your project manager and see if it’s alright to commit that time.\n\n### Resting\n\nMy final tip is this: don’t overwork yourself and do everything to avoid burnout.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/relax-like-a-cat.jpg\" alt=\"A cool cat, relaxing.\" /><figcaption>Leave time for yourself. Photo by lppicture via Pixabay.</figcaption></figure>\n\n**_Programming is overwhelming._**\n\nNew codebases (especially large ones!) are overwhelming. Trying to understand dozens of design decisions from the past is overwhelming.\n\nAre you a junior developer? Then all the new patterns and ~~needless~~ clever abstractions you encounter will probably be overwhelming.\n\nSo with that in mind don’t make things harder for yourself.\n\nGive yourself time to breathe. Don’t lose sleep over this. Fight your managers if they try to put you in a crunch or assign impossible-to-hit deadlines.\n\n## Final Takeaways\n\nFatigued by the article or just skipped ahead to see the titles and images? I feel you. Here’s what you should remember:\n\n1. **Do your homework:** Learn as much as you can about the domain, the business problems, the app architecture, and find all the docs you can.\n2. **Gear up:** Use a great IDE/Code editor that will make digging through the code easier.\n3. **Debug at runtime:** Set breakpoints at critical sections. Monitor the stack. Follow what’s happening line-by-line.\n4. **Use git history:** Remember to look at how a piece of code has changed over time whenever you are confused as to what it actually does. (Or why it even exists.)\n5. **Rest and don’t be overwhelmed:** Programming is hard. Your job is hard. Don’t make it harder by being tired and stressed.\n","slug":"how-to-read-and-navigate-new-codebase","published":1,"_id":"ckfi82trc000crkril84jnfm5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Jumping into a new project can be scary. Especially if <em>“legacy”</em> the words used to describe it. But if you learn the right techniques to navigating a new codebase then on-boarding will take a lot less time.</p>\n<p>Over my 5+ year career I’ve had to switch between projects of various sizes. It’s been frustrating at times, but I’ve noticed certain <em>patterns</em> over the years. </p>\n<p>This article is an evolving collection of techniques that I’ve developed to help me become as productive as possible. I recently <a href=\"/2020/hello-amsterdam\">joined Amazon</a> and this methodology has proven its worth for me – allowing me to contribute since week 1!</p>\n<h2 id=\"Traversing-Uncharted-Territory\"><a href=\"#Traversing-Uncharted-Territory\" class=\"headerlink\" title=\"Traversing Uncharted Territory\"></a>Traversing Uncharted Territory</h2><figure class=\"blog-post-image\"><img src=\"/content/images/2017/uncharted-lands.jpg\" alt=\"The great outdoors: mountains, trees, a lake.\"><figcaption>Where do you start? Photo by tpsdave via Pixabay.</figcaption></figure>\n\n<p><em>Let me set the scene. This is a short personal anecdote from 5 years ago that will be entertaining to read. It’s purpose is to show just how hard it can be to join a large codebase. (You can skip this part <a href=\"#How-to-Dive-Into-a-Large-Codebase\">by clicking here.</a>)</em></p>\n<h3 id=\"Part-1-Problem-Setup\"><a href=\"#Part-1-Problem-Setup\" class=\"headerlink\" title=\"Part 1: Problem Setup\"></a>Part 1: Problem Setup</h3><p>Ever read a murder mystery, but instead of solving a murder, the character is fixing a bug? Here’s the scenario for out little detective mystery:</p>\n<p><strong>🔎 Context:</strong> You’re working on a giant monolith app. The tech is somewhat outdated. (New questions stopped appearing on Stack Overflow around 2010.) There’s also little documentation left by the previous team.</p>\n<p><strong>📝 Task:</strong> The client reported a bug with one of the form components on the interface. We will henceforth call this <code>Component A</code>. The client is using Chrome on Windows 10.</p>\n<p><strong>😵 Confusion:</strong> Upon inspection in Chrome on Mac OS, you cannot reproduce the bug. You could also not replicate the bug on your virtual machine. (It works great both on Edge, Chrome, and IE11!)</p>\n<p><strong>💡 To clarify:</strong> The client is not making this up. You refer to their screenshots and also note that the form looks different on their end. (The styles don’t match.)</p>\n<p>How do you tackle this? Working with bugs that are hard to reproduce is a hard time. What’s the thought process and where do you start looking first? Also, remember: <em>you’re new to this large codebase.</em></p>\n<div class=\"alert-box alert-box__info\">🤔 Try to think of a couple of possible problems. Let me know if your intuition guessed what the problem was!</div>\n\n<h3 id=\"Part-2-Initial-Approach\"><a href=\"#Part-2-Initial-Approach\" class=\"headerlink\" title=\"Part 2: Initial Approach\"></a>Part 2: Initial Approach</h3><p>I was lucky to have a colleague who uses Windows. I got them to open the staging app and check it out. And the bug was there in all its glory.</p>\n<p><strong>I found it strange that the bug was not present on VirtualBox. Was the version of Chrome on the VM different?</strong></p>\n<p>I borrowed their computer over lunch. Then, I inspected the generated HTML and JavaScript bundle via Chrome Developer Tools. My findings were surprising. This strange component was not our <code>Component A</code>.</p>\n<p>Since the bundled code is obfuscated it was hard to figure out what I was looking at. But, I was able to eventually find this component. This <code>Component B</code> performed the same functionality but had different styles and behavior.</p>\n<p>Knowing the name of the component I fixed the bug – that was related to the logic – and tested the changes. Sure enough, the component on the screen still had different styles, but the bug had been solved.</p>\n<h3 id=\"Part-3-Digging-Deeper\"><a href=\"#Part-3-Digging-Deeper\" class=\"headerlink\" title=\"Part 3: Digging Deeper\"></a>Part 3: Digging Deeper</h3><figure class=\"blog-post-image\"><img src=\"/content/images/2017/prairie-dogs-debugging-and-diggin.jpg\" alt=\"Image of prairie dogs. The joke is that they’re digging.\"><figcaption>Prairie dogs or programmers? Photo by Kapa65 via Pixabay.</figcaption></figure>\n\n<p>Yay, bug solved, case closed, right? <em>Well, not quite.</em> This is an interesting find and it has to be resolved. Anything else would be dishonest to the client and disrespectful to my craft.</p>\n<div class=\"alert-box alert-box__info\">✨ Always try to find the root cause of the problem. Try to avoid compromising with a workaround solution.</div>\n\n<p><strong>Some more context:</strong> These two components are date inputs. (Very specialized to the business process.) They achieve the same result in the end, but the input flows are very different. These components also look strikingly different in their visual style.</p>\n<p>My suspicion was that there had to be some sort of <code>if/else</code> switch that determines when B is inserted instead of A.</p>\n<p>I started looking at the controller that instantiates the component and worked my way up.</p>\n<p>I did not find any such logic on my way to the final file. This was a top-level “bootstrap” file that registers every component that’s used in the app.  It imports these components and makes them available to the global namespace. It does this via a <code>registerImplementation()</code> method.</p>\n<p>At this point, I am a bit fatigued. I had crawled my way up a big dependency graph, but have not found what I was looking for.</p>\n<p>Rotten luck, so far.</p>\n<p>Now, I’ve seen this “bootstrap” file before, but don’t remember seeing any real logic inside of it.</p>\n<p>As expected I did not find any magical <code>if/else</code> statement. What I did find was a <code>registerImplementation()</code> call for <code>Component A</code>, but none for <code>Component B</code>.</p>\n<p>I read the file line-by-line and towards the bottom of the file, I noticed something I missed earlier. There was a <code>require</code> statement for a file called <code>mobileAppClient</code>. </p>\n<h4 id=\"The-Mystery-Solved\"><a href=\"#The-Mystery-Solved\" class=\"headerlink\" title=\"The Mystery Solved\"></a>The Mystery Solved</h4><p>In this file was a magical block of code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">if (app.getIsMobile()) &#123;</div><div class=\"line\">  overrideImplementation(componentA, componentB);</div><div class=\"line\">  // …other code</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>This was no doubt the problem. The app would use <code>Component B</code> over <code>Component A</code> on mobile devices. And I suspected that this magical <code>getIsMobile()</code> method was the problem. (Spoiler: Yes, yes it was!)</p>\n<p>The implementation was naïve. Much like this:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">function app.getIsMobile() &#123;</div><div class=\"line\">  return Modernizer.touchEvents;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>This logic treated every device with a touchscreen as a mobile device. Sure enough, my colleague’s laptop did have a touchscreen. And so did the client who reported the bug.</p>\n<p>I reimplemented this method in a more sophisticated way and <strong>properly</strong> solved the bug. Hooray!</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/crawl-graph.png\" alt=\"A simplified version of our crawl path.\"><figcaption>A simplified view of all the files I had to go through.</figcaption></figure>\n\n\n<h2 id=\"Grasping-The-Unfamiliar\"><a href=\"#Grasping-The-Unfamiliar\" class=\"headerlink\" title=\"Grasping The Unfamiliar\"></a>Grasping The Unfamiliar</h2><p>The hunt for the source of this little bug took around 3 hours.</p>\n<p><strong>The business value was also greater than initially expected. This bugfix solved several other issues the client was having.</strong></p>\n<p>It also lead us to a bigger discussion about the app’s mobile experience. (Which was in poor state.)</p>\n<p>As for me, this experience helped me get a better grasp of the entire system. As I encountered something new or unusual I’d take a note of it. I was writing a <em>“traveler’s journal”</em> of this unfamiliar codebase.</p>\n<p>This is why hunting bugs in a large codebase you’re not familiar with can be summed up as: <em>“Solving a (<del>murder</del>) mystery in an unfamiliar land.”</em></p>\n<p>You first have to get your bearings, chart out the land, and then start gathering clues and cracking the case.</p>\n<h2 id=\"How-to-Dive-Into-a-Large-Codebase\"><a href=\"#How-to-Dive-Into-a-Large-Codebase\" class=\"headerlink\" title=\"How to Dive Into a Large Codebase\"></a>How to Dive Into a Large Codebase</h2><p>First of all, understanding the codebase is something that is bound to happen <em>eventually.</em> But, if you’re expected to do it often then it helps to develop the techniques that make it easier.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/diving-into-code.jpg\" alt=\"Image of a diver in the sea.\"><figcaption>Diving deep. Photo by uccisea1970 via Pixabay.</figcaption></figure>\n\n<p>But, if you have to do this on a regular basis, how can you get good (and fast!) at doing it? It comes down to a couple of techniques. I call them:</p>\n<ul>\n<li>Observing and researching,</li>\n<li>Testing,</li>\n<li>Digging,</li>\n<li>Breaking,</li>\n<li>Time traveling, and</li>\n<li>Resting</li>\n</ul>\n<p>I know the names are not brilliant, but let’s see what they bring to the table.</p>\n<h3 id=\"Observing-and-Researching\"><a href=\"#Observing-and-Researching\" class=\"headerlink\" title=\"Observing and Researching\"></a>Observing and Researching</h3><p>The first thing you should do on a new project is to spend time using the app in a production environment. Get to know all the features and the business problems the app is solving.</p>\n<p>The best way to go about this is <a href=\"/2018/guide-to-exploratory-testing\">exploratory testing.</a></p>\n<p>This step is crucial to understanding the project. Especially if this is a business domain that you are unfamiliar with.</p>\n<h4 id=\"Get-an-On-boarding-Buddy\"><a href=\"#Get-an-On-boarding-Buddy\" class=\"headerlink\" title=\"Get an On-boarding Buddy\"></a>Get an On-boarding Buddy</h4><p>Your time will be a lot easier if you find someone who has tenure in the project and is open to answering your question. </p>\n<p>Don’t disregard engineers who might have much less experience than you. Anyone who has been around longer than you is a great source of knowledge. <em>Project tenure</em> is the most important metric.</p>\n<p>It’s best for this person to be a fellow engineer. You can find a separate person who you can look up to as a domain expert.</p>\n<h4 id=\"Read-the-Docs\"><a href=\"#Read-the-Docs\" class=\"headerlink\" title=\"Read the Docs\"></a>Read the Docs</h4><p>After that, you should do detailed research to find all the documentation that exists. (But, take the docs with a grain of salt as they are likely outdated.)</p>\n<p>Here’s what you’re looking for (in order of importance):</p>\n<ul>\n<li>All the project README files. (Check when they were last updated.)</li>\n<li>A project wiki.</li>\n<li>Recent meeting notes (preferably with key stakeholders.)</li>\n<li>Architecture design docs.</li>\n<li>Deployment docs.</li>\n<li>Backlog of upcoming epics.</li>\n<li>Backlog of <em>fixed</em> issues.</li>\n<li>User interview reports, videos, etc.</li>\n<li>Mockups of upcoming features.</li>\n</ul>\n<h4 id=\"Improve-the-Docs\"><a href=\"#Improve-the-Docs\" class=\"headerlink\" title=\"Improve the Docs\"></a>Improve the Docs</h4><p>At a minimum there’s going be a README file for the project you just joined. This file will be outdated (I can bet on it!) and the instruction will likely be unclear.</p>\n<p>Most devs write this file from their point of understanding – they <em>already</em> know how to start the system. The README is just a short set of important notes for them. This is why newcomers to the project always struggle to follow the instructions.</p>\n<p>This means you have a great role to play. You are coming to the project with no prior understanding and you can (and must!) update everything as you go.</p>\n<h3 id=\"Read-the-Tests\"><a href=\"#Read-the-Tests\" class=\"headerlink\" title=\"Read the Tests\"></a>Read the Tests</h3><p>I hope you’ve just joined a project that actually has tests. If so, tests are basically a form of documentation. You can figure out a lot about the project by looking at:</p>\n<ul>\n<li>The names of the test cases.</li>\n<li>The associated inputs and expected outputs.</li>\n<li>Modules with the most edge cases covered – usually the most critical ones.</li>\n<li>The way third-party services are mocked and integrated.</li>\n</ul>\n<p>You don’t need to look too much into the implementation of the tests until it becomes relevant to your task.</p>\n<h4 id=\"Improve-the-Tests\"><a href=\"#Improve-the-Tests\" class=\"headerlink\" title=\"Improve the Tests\"></a>Improve the Tests</h4><p>Just like with docs, not every team treats their tests with a high standard. Improving tests by covering edge cases or uncovered lines is a great way to dig deep into a specific piece of code. It also benefits the project and <strong>makes for a good early contribution.</strong></p>\n<p>If the project doesn’t have any tests then implementing them might be hard for you as a newcomer. You’ll have to earn trust with your team and manager before leading a big initiative like that. (But if you have a green light to do it, take it right away!)</p>\n<h3 id=\"Digging\"><a href=\"#Digging\" class=\"headerlink\" title=\"Digging\"></a>Digging</h3><p>This series of techniques is out-of-scope for the purposes of this article. I will list the concepts and trust you to do your homework and research the things you’re not familiar with.</p>\n<p><strong>But, it mostly boils down to using a good editor or IDE and actually using the features that make that editor awesome.</strong></p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/dont-dig-with-kids-toys.jpg\" alt=\"Image of children’s shovels on the beach.\"><figcaption>Use better tools. Photo by Efraimstochter via Pixabay.</figcaption></figure>\n\n<p>I use JetBrains WebStorm. (Visual Studio Code is a fine, open-source alternative.) As for you, you should use whatever you like. But bear in mind that some features are a “must have”, especially when jumping into a large codebase.</p>\n<p>I’d say that these features are:</p>\n<ul>\n<li><code>go-to</code> definition,</li>\n<li>intelligent code completion (<em>“intellisense”</em> and the like),</li>\n<li>structure pop-up,</li>\n<li>jump to deceleration,</li>\n<li>jump down the hierarchy,</li>\n<li>show usage, </li>\n<li>regex search, </li>\n<li>git integration (to quickly inspect file history), and</li>\n<li>linter integration.</li>\n</ul>\n<p>These make it easy to navigate any project with speed. They also shine when dealing with a new codebase.</p>\n<p>I would also note that using the search feature of your editor can be very powerful when all else fails. Remember to make your queries more precise with regular expressions and by filtering out directories and file types.</p>\n<h3 id=\"Breaking\"><a href=\"#Breaking\" class=\"headerlink\" title=\"Breaking\"></a>Breaking</h3><p>Debuggers and profilers are your friends! These tools are as important as your editor.  Spend time finding the best ones and getting to know them.</p>\n<p>Top features I look for:</p>\n<ul>\n<li>breakpoints (duh),</li>\n<li>change code at runtime,</li>\n<li>jump to line,</li>\n<li>performance profiling,</li>\n<li>track scope stack, and</li>\n<li>access values/methods in scope.</li>\n</ul>\n<p>It is not uncommon to have several tools that handle these instead of an all-in-one solution. Obviously, this depends on the language, the surrounding ecosystem, and tooling. (For example, you might use specialized tools like the <a href=\"https://github.com/xyc/react-inspector\" target=\"_blank\" rel=\"external\">React Inspector</a> and <a href=\"https://github.com/reduxjs/redux-devtools\" target=\"_blank\" rel=\"external\">Redux DevTools.</a>)</p>\n<h3 id=\"Time-Travel\"><a href=\"#Time-Travel\" class=\"headerlink\" title=\"Time Travel\"></a>Time Travel</h3><p>This tip boils down to one simple truth: <strong><code>git</code> is your friend!</strong></p>\n<p><strong>Scenario:</strong> Let’s say you’re fixing a complex bug. You’ve found all the important blocks of code, but you have a hard time figuring out how to actually fix the problem. What now?</p>\n<p>At this point, you’ll find yourself confused by something specific. This will likely be a block of code that was at some point introduced either as a bug fix or a feature.</p>\n<p>Looking at the history of that file will help you better understand how and when this happened.</p>\n<p>How you achieve this is up to you. Some prefer to use <code>git</code> from their CLI of choice. The obvious* commands here are:</p>\n<ul>\n<li><code>git log -p -- path/to/file</code></li>\n<li><code>git show</code></li>\n<li><code>git diff</code></li>\n</ul>\n<div class=\"footnote\"><p><em>*A not so obvious command would be something like <code>git bisect</code>. My friend Jovan wrote a quick intro for <a href=\"https://spicefactory.co/blog/2016/08/26/spicycomic-3-git-bisect/\" target=\"_blank\" rel=\"external\">the Spicefactory blog</a> about this topic.</em></p></div>\n\n<p>I prefer to the use the <code>git</code> tools built into my IDE. I find that they help save time overall and don’t require that you remember all the commands and options.</p>\n<p>Choose your tools as you see fit. But remember that the end goal is to go back in time. This should be efficient and yield as much useful information as possible.</p>\n<p>You’ll first look for the git message and diff. Then try to find something like this:</p>\n<ul>\n<li>The reference to the ticket (bug report or feature request) that was addressed by the commit(s).</li>\n<li>The pull request and any discussion thread that may have existed.</li>\n<li>The test cases that were introduced/modified when the code was introduced.</li>\n</ul>\n<p>And (this is somewhat my “favorite”):</p>\n<p><em>The rapid <code>“hotfixes”</code> that were merged to <code>“fix minor bugs”</code>. These bugs appeared along with the feature.</em></p>\n<p>Not sure what I mean? Tell me if this sounds familiar:</p>\n<p>On smaller teams where one individual owns too much of the codebase, you will see these things happen. The developer will commit a major change (new feature). The feature will generally work but soon a set of bug reports comes in from the QA team or stakeholders.</p>\n<p>In a race against time to complete their sprint, the developer will then introduce a series of rapid <em>“fixes.”</em></p>\n<p>These fixes never address the core problem. They instead introduce a solution to cover some edge-cases. If you’re ever in a situation like this one, consider this:</p>\n<ol>\n<li>Revert their bug fixes.</li>\n<li>Try to refactor.</li>\n<li>If the refactor fails, re-implement the feature from scratch.</li>\n</ol>\n<p>This will likely take a lot more time. Communicate what you plan on doing to your project manager and see if it’s alright to commit that time.</p>\n<h3 id=\"Resting\"><a href=\"#Resting\" class=\"headerlink\" title=\"Resting\"></a>Resting</h3><p>My final tip is this: don’t overwork yourself and do everything to avoid burnout.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/relax-like-a-cat.jpg\" alt=\"A cool cat, relaxing.\"><figcaption>Leave time for yourself. Photo by lppicture via Pixabay.</figcaption></figure>\n\n<p><strong><em>Programming is overwhelming.</em></strong></p>\n<p>New codebases (especially large ones!) are overwhelming. Trying to understand dozens of design decisions from the past is overwhelming.</p>\n<p>Are you a junior developer? Then all the new patterns and <del>needless</del> clever abstractions you encounter will probably be overwhelming.</p>\n<p>So with that in mind don’t make things harder for yourself.</p>\n<p>Give yourself time to breathe. Don’t lose sleep over this. Fight your managers if they try to put you in a crunch or assign impossible-to-hit deadlines.</p>\n<h2 id=\"Final-Takeaways\"><a href=\"#Final-Takeaways\" class=\"headerlink\" title=\"Final Takeaways\"></a>Final Takeaways</h2><p>Fatigued by the article or just skipped ahead to see the titles and images? I feel you. Here’s what you should remember:</p>\n<ol>\n<li><strong>Do your homework:</strong> Learn as much as you can about the domain, the business problems, the app architecture, and find all the docs you can.</li>\n<li><strong>Gear up:</strong> Use a great IDE/Code editor that will make digging through the code easier.</li>\n<li><strong>Debug at runtime:</strong> Set breakpoints at critical sections. Monitor the stack. Follow what’s happening line-by-line.</li>\n<li><strong>Use git history:</strong> Remember to look at how a piece of code has changed over time whenever you are confused as to what it actually does. (Or why it even exists.)</li>\n<li><strong>Rest and don’t be overwhelmed:</strong> Programming is hard. Your job is hard. Don’t make it harder by being tired and stressed.</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Jumping into a new project can be scary. Especially if <em>“legacy”</em> the words used to describe it. But if you learn the right techniques to navigating a new codebase then on-boarding will take a lot less time.</p>\n<p>Over my 5+ year career I’ve had to switch between projects of various sizes. It’s been frustrating at times, but I’ve noticed certain <em>patterns</em> over the years. </p>\n<p>This article is an evolving collection of techniques that I’ve developed to help me become as productive as possible. I recently <a href=\"/2020/hello-amsterdam\">joined Amazon</a> and this methodology has proven its worth for me – allowing me to contribute since week 1!</p>\n<h2 id=\"Traversing-Uncharted-Territory\"><a href=\"#Traversing-Uncharted-Territory\" class=\"headerlink\" title=\"Traversing Uncharted Territory\"></a>Traversing Uncharted Territory</h2><figure class=\"blog-post-image\"><img src=\"/content/images/2017/uncharted-lands.jpg\" alt=\"The great outdoors: mountains, trees, a lake.\"><figcaption>Where do you start? Photo by tpsdave via Pixabay.</figcaption></figure>\n\n<p><em>Let me set the scene. This is a short personal anecdote from 5 years ago that will be entertaining to read. It’s purpose is to show just how hard it can be to join a large codebase. (You can skip this part <a href=\"#How-to-Dive-Into-a-Large-Codebase\">by clicking here.</a>)</em></p>\n<h3 id=\"Part-1-Problem-Setup\"><a href=\"#Part-1-Problem-Setup\" class=\"headerlink\" title=\"Part 1: Problem Setup\"></a>Part 1: Problem Setup</h3><p>Ever read a murder mystery, but instead of solving a murder, the character is fixing a bug? Here’s the scenario for out little detective mystery:</p>\n<p><strong>🔎 Context:</strong> You’re working on a giant monolith app. The tech is somewhat outdated. (New questions stopped appearing on Stack Overflow around 2010.) There’s also little documentation left by the previous team.</p>\n<p><strong>📝 Task:</strong> The client reported a bug with one of the form components on the interface. We will henceforth call this <code>Component A</code>. The client is using Chrome on Windows 10.</p>\n<p><strong>😵 Confusion:</strong> Upon inspection in Chrome on Mac OS, you cannot reproduce the bug. You could also not replicate the bug on your virtual machine. (It works great both on Edge, Chrome, and IE11!)</p>\n<p><strong>💡 To clarify:</strong> The client is not making this up. You refer to their screenshots and also note that the form looks different on their end. (The styles don’t match.)</p>\n<p>How do you tackle this? Working with bugs that are hard to reproduce is a hard time. What’s the thought process and where do you start looking first? Also, remember: <em>you’re new to this large codebase.</em></p>\n<div class=\"alert-box alert-box__info\">🤔 Try to think of a couple of possible problems. Let me know if your intuition guessed what the problem was!</div>\n\n<h3 id=\"Part-2-Initial-Approach\"><a href=\"#Part-2-Initial-Approach\" class=\"headerlink\" title=\"Part 2: Initial Approach\"></a>Part 2: Initial Approach</h3><p>I was lucky to have a colleague who uses Windows. I got them to open the staging app and check it out. And the bug was there in all its glory.</p>\n<p><strong>I found it strange that the bug was not present on VirtualBox. Was the version of Chrome on the VM different?</strong></p>\n<p>I borrowed their computer over lunch. Then, I inspected the generated HTML and JavaScript bundle via Chrome Developer Tools. My findings were surprising. This strange component was not our <code>Component A</code>.</p>\n<p>Since the bundled code is obfuscated it was hard to figure out what I was looking at. But, I was able to eventually find this component. This <code>Component B</code> performed the same functionality but had different styles and behavior.</p>\n<p>Knowing the name of the component I fixed the bug – that was related to the logic – and tested the changes. Sure enough, the component on the screen still had different styles, but the bug had been solved.</p>\n<h3 id=\"Part-3-Digging-Deeper\"><a href=\"#Part-3-Digging-Deeper\" class=\"headerlink\" title=\"Part 3: Digging Deeper\"></a>Part 3: Digging Deeper</h3><figure class=\"blog-post-image\"><img src=\"/content/images/2017/prairie-dogs-debugging-and-diggin.jpg\" alt=\"Image of prairie dogs. The joke is that they’re digging.\"><figcaption>Prairie dogs or programmers? Photo by Kapa65 via Pixabay.</figcaption></figure>\n\n<p>Yay, bug solved, case closed, right? <em>Well, not quite.</em> This is an interesting find and it has to be resolved. Anything else would be dishonest to the client and disrespectful to my craft.</p>\n<div class=\"alert-box alert-box__info\">✨ Always try to find the root cause of the problem. Try to avoid compromising with a workaround solution.</div>\n\n<p><strong>Some more context:</strong> These two components are date inputs. (Very specialized to the business process.) They achieve the same result in the end, but the input flows are very different. These components also look strikingly different in their visual style.</p>\n<p>My suspicion was that there had to be some sort of <code>if/else</code> switch that determines when B is inserted instead of A.</p>\n<p>I started looking at the controller that instantiates the component and worked my way up.</p>\n<p>I did not find any such logic on my way to the final file. This was a top-level “bootstrap” file that registers every component that’s used in the app.  It imports these components and makes them available to the global namespace. It does this via a <code>registerImplementation()</code> method.</p>\n<p>At this point, I am a bit fatigued. I had crawled my way up a big dependency graph, but have not found what I was looking for.</p>\n<p>Rotten luck, so far.</p>\n<p>Now, I’ve seen this “bootstrap” file before, but don’t remember seeing any real logic inside of it.</p>\n<p>As expected I did not find any magical <code>if/else</code> statement. What I did find was a <code>registerImplementation()</code> call for <code>Component A</code>, but none for <code>Component B</code>.</p>\n<p>I read the file line-by-line and towards the bottom of the file, I noticed something I missed earlier. There was a <code>require</code> statement for a file called <code>mobileAppClient</code>. </p>\n<h4 id=\"The-Mystery-Solved\"><a href=\"#The-Mystery-Solved\" class=\"headerlink\" title=\"The Mystery Solved\"></a>The Mystery Solved</h4><p>In this file was a magical block of code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">if (app.getIsMobile()) &#123;</div><div class=\"line\">  overrideImplementation(componentA, componentB);</div><div class=\"line\">  // …other code</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>This was no doubt the problem. The app would use <code>Component B</code> over <code>Component A</code> on mobile devices. And I suspected that this magical <code>getIsMobile()</code> method was the problem. (Spoiler: Yes, yes it was!)</p>\n<p>The implementation was naïve. Much like this:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">function app.getIsMobile() &#123;</div><div class=\"line\">  return Modernizer.touchEvents;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>This logic treated every device with a touchscreen as a mobile device. Sure enough, my colleague’s laptop did have a touchscreen. And so did the client who reported the bug.</p>\n<p>I reimplemented this method in a more sophisticated way and <strong>properly</strong> solved the bug. Hooray!</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/crawl-graph.png\" alt=\"A simplified version of our crawl path.\"><figcaption>A simplified view of all the files I had to go through.</figcaption></figure>\n\n\n<h2 id=\"Grasping-The-Unfamiliar\"><a href=\"#Grasping-The-Unfamiliar\" class=\"headerlink\" title=\"Grasping The Unfamiliar\"></a>Grasping The Unfamiliar</h2><p>The hunt for the source of this little bug took around 3 hours.</p>\n<p><strong>The business value was also greater than initially expected. This bugfix solved several other issues the client was having.</strong></p>\n<p>It also lead us to a bigger discussion about the app’s mobile experience. (Which was in poor state.)</p>\n<p>As for me, this experience helped me get a better grasp of the entire system. As I encountered something new or unusual I’d take a note of it. I was writing a <em>“traveler’s journal”</em> of this unfamiliar codebase.</p>\n<p>This is why hunting bugs in a large codebase you’re not familiar with can be summed up as: <em>“Solving a (<del>murder</del>) mystery in an unfamiliar land.”</em></p>\n<p>You first have to get your bearings, chart out the land, and then start gathering clues and cracking the case.</p>\n<h2 id=\"How-to-Dive-Into-a-Large-Codebase\"><a href=\"#How-to-Dive-Into-a-Large-Codebase\" class=\"headerlink\" title=\"How to Dive Into a Large Codebase\"></a>How to Dive Into a Large Codebase</h2><p>First of all, understanding the codebase is something that is bound to happen <em>eventually.</em> But, if you’re expected to do it often then it helps to develop the techniques that make it easier.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/diving-into-code.jpg\" alt=\"Image of a diver in the sea.\"><figcaption>Diving deep. Photo by uccisea1970 via Pixabay.</figcaption></figure>\n\n<p>But, if you have to do this on a regular basis, how can you get good (and fast!) at doing it? It comes down to a couple of techniques. I call them:</p>\n<ul>\n<li>Observing and researching,</li>\n<li>Testing,</li>\n<li>Digging,</li>\n<li>Breaking,</li>\n<li>Time traveling, and</li>\n<li>Resting</li>\n</ul>\n<p>I know the names are not brilliant, but let’s see what they bring to the table.</p>\n<h3 id=\"Observing-and-Researching\"><a href=\"#Observing-and-Researching\" class=\"headerlink\" title=\"Observing and Researching\"></a>Observing and Researching</h3><p>The first thing you should do on a new project is to spend time using the app in a production environment. Get to know all the features and the business problems the app is solving.</p>\n<p>The best way to go about this is <a href=\"/2018/guide-to-exploratory-testing\">exploratory testing.</a></p>\n<p>This step is crucial to understanding the project. Especially if this is a business domain that you are unfamiliar with.</p>\n<h4 id=\"Get-an-On-boarding-Buddy\"><a href=\"#Get-an-On-boarding-Buddy\" class=\"headerlink\" title=\"Get an On-boarding Buddy\"></a>Get an On-boarding Buddy</h4><p>Your time will be a lot easier if you find someone who has tenure in the project and is open to answering your question. </p>\n<p>Don’t disregard engineers who might have much less experience than you. Anyone who has been around longer than you is a great source of knowledge. <em>Project tenure</em> is the most important metric.</p>\n<p>It’s best for this person to be a fellow engineer. You can find a separate person who you can look up to as a domain expert.</p>\n<h4 id=\"Read-the-Docs\"><a href=\"#Read-the-Docs\" class=\"headerlink\" title=\"Read the Docs\"></a>Read the Docs</h4><p>After that, you should do detailed research to find all the documentation that exists. (But, take the docs with a grain of salt as they are likely outdated.)</p>\n<p>Here’s what you’re looking for (in order of importance):</p>\n<ul>\n<li>All the project README files. (Check when they were last updated.)</li>\n<li>A project wiki.</li>\n<li>Recent meeting notes (preferably with key stakeholders.)</li>\n<li>Architecture design docs.</li>\n<li>Deployment docs.</li>\n<li>Backlog of upcoming epics.</li>\n<li>Backlog of <em>fixed</em> issues.</li>\n<li>User interview reports, videos, etc.</li>\n<li>Mockups of upcoming features.</li>\n</ul>\n<h4 id=\"Improve-the-Docs\"><a href=\"#Improve-the-Docs\" class=\"headerlink\" title=\"Improve the Docs\"></a>Improve the Docs</h4><p>At a minimum there’s going be a README file for the project you just joined. This file will be outdated (I can bet on it!) and the instruction will likely be unclear.</p>\n<p>Most devs write this file from their point of understanding – they <em>already</em> know how to start the system. The README is just a short set of important notes for them. This is why newcomers to the project always struggle to follow the instructions.</p>\n<p>This means you have a great role to play. You are coming to the project with no prior understanding and you can (and must!) update everything as you go.</p>\n<h3 id=\"Read-the-Tests\"><a href=\"#Read-the-Tests\" class=\"headerlink\" title=\"Read the Tests\"></a>Read the Tests</h3><p>I hope you’ve just joined a project that actually has tests. If so, tests are basically a form of documentation. You can figure out a lot about the project by looking at:</p>\n<ul>\n<li>The names of the test cases.</li>\n<li>The associated inputs and expected outputs.</li>\n<li>Modules with the most edge cases covered – usually the most critical ones.</li>\n<li>The way third-party services are mocked and integrated.</li>\n</ul>\n<p>You don’t need to look too much into the implementation of the tests until it becomes relevant to your task.</p>\n<h4 id=\"Improve-the-Tests\"><a href=\"#Improve-the-Tests\" class=\"headerlink\" title=\"Improve the Tests\"></a>Improve the Tests</h4><p>Just like with docs, not every team treats their tests with a high standard. Improving tests by covering edge cases or uncovered lines is a great way to dig deep into a specific piece of code. It also benefits the project and <strong>makes for a good early contribution.</strong></p>\n<p>If the project doesn’t have any tests then implementing them might be hard for you as a newcomer. You’ll have to earn trust with your team and manager before leading a big initiative like that. (But if you have a green light to do it, take it right away!)</p>\n<h3 id=\"Digging\"><a href=\"#Digging\" class=\"headerlink\" title=\"Digging\"></a>Digging</h3><p>This series of techniques is out-of-scope for the purposes of this article. I will list the concepts and trust you to do your homework and research the things you’re not familiar with.</p>\n<p><strong>But, it mostly boils down to using a good editor or IDE and actually using the features that make that editor awesome.</strong></p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/dont-dig-with-kids-toys.jpg\" alt=\"Image of children’s shovels on the beach.\"><figcaption>Use better tools. Photo by Efraimstochter via Pixabay.</figcaption></figure>\n\n<p>I use JetBrains WebStorm. (Visual Studio Code is a fine, open-source alternative.) As for you, you should use whatever you like. But bear in mind that some features are a “must have”, especially when jumping into a large codebase.</p>\n<p>I’d say that these features are:</p>\n<ul>\n<li><code>go-to</code> definition,</li>\n<li>intelligent code completion (<em>“intellisense”</em> and the like),</li>\n<li>structure pop-up,</li>\n<li>jump to deceleration,</li>\n<li>jump down the hierarchy,</li>\n<li>show usage, </li>\n<li>regex search, </li>\n<li>git integration (to quickly inspect file history), and</li>\n<li>linter integration.</li>\n</ul>\n<p>These make it easy to navigate any project with speed. They also shine when dealing with a new codebase.</p>\n<p>I would also note that using the search feature of your editor can be very powerful when all else fails. Remember to make your queries more precise with regular expressions and by filtering out directories and file types.</p>\n<h3 id=\"Breaking\"><a href=\"#Breaking\" class=\"headerlink\" title=\"Breaking\"></a>Breaking</h3><p>Debuggers and profilers are your friends! These tools are as important as your editor.  Spend time finding the best ones and getting to know them.</p>\n<p>Top features I look for:</p>\n<ul>\n<li>breakpoints (duh),</li>\n<li>change code at runtime,</li>\n<li>jump to line,</li>\n<li>performance profiling,</li>\n<li>track scope stack, and</li>\n<li>access values/methods in scope.</li>\n</ul>\n<p>It is not uncommon to have several tools that handle these instead of an all-in-one solution. Obviously, this depends on the language, the surrounding ecosystem, and tooling. (For example, you might use specialized tools like the <a href=\"https://github.com/xyc/react-inspector\" target=\"_blank\" rel=\"external\">React Inspector</a> and <a href=\"https://github.com/reduxjs/redux-devtools\" target=\"_blank\" rel=\"external\">Redux DevTools.</a>)</p>\n<h3 id=\"Time-Travel\"><a href=\"#Time-Travel\" class=\"headerlink\" title=\"Time Travel\"></a>Time Travel</h3><p>This tip boils down to one simple truth: <strong><code>git</code> is your friend!</strong></p>\n<p><strong>Scenario:</strong> Let’s say you’re fixing a complex bug. You’ve found all the important blocks of code, but you have a hard time figuring out how to actually fix the problem. What now?</p>\n<p>At this point, you’ll find yourself confused by something specific. This will likely be a block of code that was at some point introduced either as a bug fix or a feature.</p>\n<p>Looking at the history of that file will help you better understand how and when this happened.</p>\n<p>How you achieve this is up to you. Some prefer to use <code>git</code> from their CLI of choice. The obvious* commands here are:</p>\n<ul>\n<li><code>git log -p -- path/to/file</code></li>\n<li><code>git show</code></li>\n<li><code>git diff</code></li>\n</ul>\n<div class=\"footnote\"><p><em>*A not so obvious command would be something like <code>git bisect</code>. My friend Jovan wrote a quick intro for <a href=\"https://spicefactory.co/blog/2016/08/26/spicycomic-3-git-bisect/\" target=\"_blank\" rel=\"external\">the Spicefactory blog</a> about this topic.</em></p></div>\n\n<p>I prefer to the use the <code>git</code> tools built into my IDE. I find that they help save time overall and don’t require that you remember all the commands and options.</p>\n<p>Choose your tools as you see fit. But remember that the end goal is to go back in time. This should be efficient and yield as much useful information as possible.</p>\n<p>You’ll first look for the git message and diff. Then try to find something like this:</p>\n<ul>\n<li>The reference to the ticket (bug report or feature request) that was addressed by the commit(s).</li>\n<li>The pull request and any discussion thread that may have existed.</li>\n<li>The test cases that were introduced/modified when the code was introduced.</li>\n</ul>\n<p>And (this is somewhat my “favorite”):</p>\n<p><em>The rapid <code>“hotfixes”</code> that were merged to <code>“fix minor bugs”</code>. These bugs appeared along with the feature.</em></p>\n<p>Not sure what I mean? Tell me if this sounds familiar:</p>\n<p>On smaller teams where one individual owns too much of the codebase, you will see these things happen. The developer will commit a major change (new feature). The feature will generally work but soon a set of bug reports comes in from the QA team or stakeholders.</p>\n<p>In a race against time to complete their sprint, the developer will then introduce a series of rapid <em>“fixes.”</em></p>\n<p>These fixes never address the core problem. They instead introduce a solution to cover some edge-cases. If you’re ever in a situation like this one, consider this:</p>\n<ol>\n<li>Revert their bug fixes.</li>\n<li>Try to refactor.</li>\n<li>If the refactor fails, re-implement the feature from scratch.</li>\n</ol>\n<p>This will likely take a lot more time. Communicate what you plan on doing to your project manager and see if it’s alright to commit that time.</p>\n<h3 id=\"Resting\"><a href=\"#Resting\" class=\"headerlink\" title=\"Resting\"></a>Resting</h3><p>My final tip is this: don’t overwork yourself and do everything to avoid burnout.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2017/relax-like-a-cat.jpg\" alt=\"A cool cat, relaxing.\"><figcaption>Leave time for yourself. Photo by lppicture via Pixabay.</figcaption></figure>\n\n<p><strong><em>Programming is overwhelming.</em></strong></p>\n<p>New codebases (especially large ones!) are overwhelming. Trying to understand dozens of design decisions from the past is overwhelming.</p>\n<p>Are you a junior developer? Then all the new patterns and <del>needless</del> clever abstractions you encounter will probably be overwhelming.</p>\n<p>So with that in mind don’t make things harder for yourself.</p>\n<p>Give yourself time to breathe. Don’t lose sleep over this. Fight your managers if they try to put you in a crunch or assign impossible-to-hit deadlines.</p>\n<h2 id=\"Final-Takeaways\"><a href=\"#Final-Takeaways\" class=\"headerlink\" title=\"Final Takeaways\"></a>Final Takeaways</h2><p>Fatigued by the article or just skipped ahead to see the titles and images? I feel you. Here’s what you should remember:</p>\n<ol>\n<li><strong>Do your homework:</strong> Learn as much as you can about the domain, the business problems, the app architecture, and find all the docs you can.</li>\n<li><strong>Gear up:</strong> Use a great IDE/Code editor that will make digging through the code easier.</li>\n<li><strong>Debug at runtime:</strong> Set breakpoints at critical sections. Monitor the stack. Follow what’s happening line-by-line.</li>\n<li><strong>Use git history:</strong> Remember to look at how a piece of code has changed over time whenever you are confused as to what it actually does. (Or why it even exists.)</li>\n<li><strong>Rest and don’t be overwhelmed:</strong> Programming is hard. Your job is hard. Don’t make it harder by being tired and stressed.</li>\n</ol>\n"},{"title":"Memoir of the SpiceFactory Workation (Catalonia, 2018)","seo_description":"A collection of stories and photos from the annual SpiceFactory workation.","promo_photo":"/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg","date":"2018-10-03T00:00:00.000Z","_content":"\n\nThe [SpiceFactory](https://spicefactory.co/) annual workation is the embodiment of our culture. It’s more than a company retreat and not just another empty team building project. Once a year we pack our bags, grab our significant others and kids, and go somewhere abroad to live, work, and play. In 2016 it was Belgium, 2017 was Italy, and this year it was Spain – the region of Catalonia to be precise.\n\nThis is a short “memoir” and photo blog of the places we visited and the experiences we shared.\n\n## Day 1: Belgrade ➡ Barcelona ➡ Mas Grau\n\nEvery workation starts at the Nikola Tesla Airport. Preferably at 2 AM because we’re vampires and love to fly at night. 🧛‍♂️ Spirits are high, everything is on time, and we’re ready to hit the skies!\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg\" alt=\"SpiceFactory group photo\" /><figcaption>Group photo from the Nikola Tesla Airport.</figcaption></figure>\n\nAlthough we initially arrived at Barcelona Airport, our destination is still an hour away. Once we picked up our rent-a-cars, we were ready to travel to our villa – _Mas Grau_ – near the sleepy village of Estanyol in [Bescanó.](https://en.wikipedia.org/wiki/Bescan%C3%B3)\n\nI had the pleasure of being the navigator for my good friend and colleague  Branko. Here’s a photo of our cabin crew.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/02_cabin_crew.jpg\" alt=\"Me, Tea, Branko, Marina, and Pablo\" /><figcaption>The 9049 JHX Crew.</figcaption></figure>\n\nThat’s me in the purple shirt, with my girlfriend Tea. Branko is holding the camera, and his wife Marina is holding their son Pavlo (or Pablo as he has been referred to during the workation.)\n\nWhen we finally reached our accommodations, it was really a sight to behold:\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/03_mas_grau.jpg\" alt=\"Mas Grau Front\" /><figcaption>Front View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/04_mas_grau.jpg\" alt=\"Mas Grau Side View\" /><figcaption>Side View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/05_mas_grau.jpg\" alt=\"The Swimming Pool\" /><figcaption>The Pool</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/06_mas_grau.jpg\" alt=\"View from the villa\" /><figcaption>The View</figcaption></figure>\n\nThe villa isn’t just pretty. It’s equipped with a jacuzzi, sauna, turkish bath, pool table, badminton gear, and a swimming pool. Practically designed for relaxation and community-driven fun.\n\n## Day 2: Garrotxa Volcanic Zone Natural Park and Figueres\n\nStarting our workation off with a hike only seems natural at this point. The Garrotxa Park is beautiful and the trail, although challenging at some places, was wonderful. In the belly of the inactive volcano awaits a charming little church and a great photo opportunity!\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/07_group_hike.jpg\" alt=\"A group polaroid photo\" /><figcaption>Photo by: instagram.com/dushichiza</figcaption></figure>\n\nAfter the hike, we went to a local restaurant where some of us tried escargot for the first time. Can’t say I’m a fan though! 🐌\n\nAfterwards, we set sail for Figueres, the birthplace of Salvador Dalí, and home to the Dalí Museum. To put it bluntly, it was as eccentric as I expected.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/08_dali_museum.jpg\" alt=\"The facade of the Dalí Museum\" /><figcaption>As you can see, the museum isn’t hard to miss!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/09_dali_museum.jpg\" alt=\"Outside the Dalí Museum entrance\" /><figcaption>Even the entrance is intriguing!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/10_figueres.jpg\" alt=\"Figueres streets and Parish church of St. Peter\" /><figcaption>Parish church of St. Peter</figcaption></figure>\n\n\n## Day 3: Chill\n\nThe excitement caught up to some of us at this point and we needed to take it easy. While part of the crew went on _yet another_ hike, the rest of us stayed back. We were kicking by the pool and downing some beers.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/11_poolside_view.jpg\" alt=\"Swimming pool and view\" /><figcaption>The Fun Zone™</figcaption></figure>\n\n## Day 4: Girona\n\nGirona is a charming Catalan city with some of the most beautiful streets and churches you’ll ever see.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/12_girona.jpg\" alt=\"Photo from Girona Cathedral\" /><figcaption>The view from Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/13_girona.jpg\" alt=\"Photo from Girona Cathedral\" /><figcaption>The Collegiate Church of Sant Feliu in the distance.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/14_girona.jpg\" alt=\"Photo of Girona Cathedral\" /><figcaption>The stairs of the Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/15_girona.jpg\" alt=\"Photo of Girona Streets\" /><figcaption>A Girona street along with the view of the Cathedral’s bell tower in the distance.</figcaption></figure>\n\nIt’s no surprise that this town was chosen as the filming spot for the HBO hit series _“Game of Thrones.”_ Some of its iconic locations were used for the city of Braavos and King’s Landing. In fact, here’s a side by side comparison.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/16_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 1\" /><figcaption>Only the first building on the left is real.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/17_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 2\" /><figcaption>Notice how they cover the statues with banners to avoid any need for CGI.</figcaption></figure>\n\n## Day 5: Sant Feliu de Guíxols\n\nChilling by the pool is one thing. But, chilling on the beautiful Costa Brava is a whole different level. I envy the Guixolense for the beautiful <a href=\"https://en.wikipedia.org/wiki/Golden_hour_(photography)\" target=\"_blank\" title=\"Wikipedia: Golden Hour (Photography)\">golden hour</a> that they get to enjoy every day.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/18_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 1\" /><figcaption>The marina on the left.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/19_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 2\" /><figcaption>The horizon.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/20_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 3\" /><figcaption>Sant Feliu.</figcaption></figure>\n\n## Day 6: The Sheep of Siurana\n\nWe visited the Mas Marcè farm and got to learn about the rare Ripollesa sheep and how this family-owned farm makes specialty cheese. And we got to taste all of it! 🐑\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/21_siurana.jpg\" alt=\"Cheese making Photo 1\" /><figcaption>They’re making _Cuajada_, which we were told would be like unsweetened panna cotta. It didn’t really turn out like that at all! :)</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/22_siurana.jpg\" alt=\"Cheese making Photo 2\" /><figcaption>Draining the whey.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/23_siurana.jpg\" alt=\"Photo of Ripollesa sheep\" /><figcaption>Feeding the sheep.</figcaption></figure>\n\n## Day 7: Platja d'Aro Costa Brava\n\nOriginally a small fishing town, Platja d'Aro is now a major resort. Still, it remains fairly untouched and quiet. We got to do some kayaking along this 2km stretch of Costa Brava.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/24_costa_brava.jpg\" alt=\"Beach and kayaks\" /><figcaption>Kayaking preparations.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/25_costa_brava.jpg\" alt=\"The beach\" /><figcaption>The Beach.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/26_costa_brava.jpg\" alt=\"The gentle sunset\" /><figcaption>The gentle sunset.</figcaption></figure>\n\n## Day 8: Barcelona\n\nI’ll be honest, I didn’t care much for Sagrada Familia or the Gaudi walking tour. I’m the type of person who likes quiet, charming streets over massively hyped tourist attractions. Barcelona’s city center is just too much for me.\n\nBut there’s a whole different world outside this busy, noisy area. You know how you sometimes stumble upon a charming coffee shop? Or maybe a beautiful bookstore? Or how you accidentally end up atop of some high hill, just as the most amazing sunset hits your eye?\n\nOnce you leave the crowded city center, Barcelona offers so many of those opportunities and these photographs don’t do it justice.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/27_barcelona.jpg\" alt=\"Gaudí House\" /><figcaption>Have to put some Gaudí in here.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/28_barcelona.jpg\" alt=\"Skyline view with Cathedral of the Holy Cross and Saint Eulalia poking out\" /><figcaption>That’s the Cathedral of the Holy Cross and Saint Eulalia poking out.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/29_barcelona.jpg\" alt=\"Photo of Barcelona streets\" /><figcaption>Unusually thin buildings.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/30_barcelona.jpg\" alt=\"Photo of Castell dels Tres Dragons\" /><figcaption>Castell dels Tres Dragons, seen from Ciutadella Park.</figcaption></figure>\n\n## Day 9: Biking\n\nHere’s something you probably didn’t know – I can’t ride a bike. 🚲 So, how did I, a non-biker, go biking across the Catalonian countryside? Well, I didn’t! But I walked my away in the blazing hot sun and reached the destination 5 minutes before the other part of the expedition.\n\n(Yes, my route was shorter, but that’s just a footnote in the history books!)\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/31_biking.jpg\" alt=\"Monells church and countryside.\" /><figcaption>Outside the town of Monells.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/32_biking.jpg\" alt=\"Tea riding a bike.\" /><figcaption>Tea on a bike.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/33_biking.jpg\" alt=\"Madremanya castle.\" /><figcaption>A castle near Madremanya.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/34_biking.jpg\" alt=\"Sunset\" /><figcaption>Sunset.</figcaption></figure>\n\n## Day 10: Shopping!\n\nLet’s just say there’s a couple of good outlet centers near Girona and we just _had_ to visit some! No photos here!\n\n## Day 11: Barcelona ➡ Belgrade\n\nWe got to spend our last day in Barcelona. (Before boarding our flight back home.) We had to split the gang so we could cover more ground. I went along with the group that decided to visit **Museo Picasso.**\n\n> For those who know how to read, I have painted my autobiography.\n\nIt’s one of the best art museums I’ve visited and I can boil it down to two reasons:\n\n1. **The layout** of the museum is designed to tell a story. As you go from room to room, you’re looking at Picasso’s work in chronological order and with just enough detail about his life to make everything click.\n2. They added an entire section full of artwork from artists who Picasso met and worked with while in Paris.\n  - Seeing the work of other artists, who no doubt left their mark of Picasso, promotes a sort of **historical dialog.**\n  - It gives you a new way of looking at his work from that period. (And it also helped me discover the brilliant work of [Ramon Casas.](https://en.wikipedia.org/wiki/Ramon_Casas))\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/35_museo_picasso.jpg\" alt=\"Tea in Museo Picasso\" /><figcaption>Tea on a balcony in Museo Picasso. Taking photos is prohibited inside the museum.</figcaption></figure>\n\n## Home Sweet Home\n\nWhen we left Belgrade, the weather was a sunny 26℃. The weather in Catalonia was similar. But when we got back, we were greeted by a chilly 6℃ and risk of rain.\n\nBut it’s good to be home. And home is never really the same once you return from somewhere. But it’s not the places that change. It’s us.\n\nAnd that’s amazing!\n\nPromoting change and personal growth is what we excel at over at SpiceFactory. If you’re interested in joining a team like that, our careers page [is always up to date.](https://spicefactory.co/careers/)\n","source":"_posts/spicefactory-workation-2018.md","raw":"---\ntitle: Memoir of The SpiceFactory Workation (Catalonia, 2018)\nseo_description: A collection of stories and photos from the annual SpiceFactory workation.\npromo_photo: /content/images/2018/workation/01_airport_spicefactory_group_photo.jpg\ndate: 2018-10-03\ntags:\n---\n\n\nThe [SpiceFactory](https://spicefactory.co/) annual workation is the embodiment of our culture. It’s more than a company retreat and not just another empty team building project. Once a year we pack our bags, grab our significant others and kids, and go somewhere abroad to live, work, and play. In 2016 it was Belgium, 2017 was Italy, and this year it was Spain – the region of Catalonia to be precise.\n\nThis is a short “memoir” and photo blog of the places we visited and the experiences we shared.\n\n## Day 1: Belgrade ➡ Barcelona ➡ Mas Grau\n\nEvery workation starts at the Nikola Tesla Airport. Preferably at 2 AM because we’re vampires and love to fly at night. 🧛‍♂️ Spirits are high, everything is on time, and we’re ready to hit the skies!\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg\" alt=\"SpiceFactory group photo\" /><figcaption>Group photo from the Nikola Tesla Airport.</figcaption></figure>\n\nAlthough we initially arrived at Barcelona Airport, our destination is still an hour away. Once we picked up our rent-a-cars, we were ready to travel to our villa – _Mas Grau_ – near the sleepy village of Estanyol in [Bescanó.](https://en.wikipedia.org/wiki/Bescan%C3%B3)\n\nI had the pleasure of being the navigator for my good friend and colleague  Branko. Here’s a photo of our cabin crew.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/02_cabin_crew.jpg\" alt=\"Me, Tea, Branko, Marina, and Pablo\" /><figcaption>The 9049 JHX Crew.</figcaption></figure>\n\nThat’s me in the purple shirt, with my girlfriend Tea. Branko is holding the camera, and his wife Marina is holding their son Pavlo (or Pablo as he has been referred to during the workation.)\n\nWhen we finally reached our accommodations, it was really a sight to behold:\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/03_mas_grau.jpg\" alt=\"Mas Grau Front\" /><figcaption>Front View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/04_mas_grau.jpg\" alt=\"Mas Grau Side View\" /><figcaption>Side View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/05_mas_grau.jpg\" alt=\"The Swimming Pool\" /><figcaption>The Pool</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/06_mas_grau.jpg\" alt=\"View from the villa\" /><figcaption>The View</figcaption></figure>\n\nThe villa isn’t just pretty. It’s equipped with a jacuzzi, sauna, turkish bath, pool table, badminton gear, and a swimming pool. Practically designed for relaxation and community-driven fun.\n\n## Day 2: Garrotxa Volcanic Zone Natural Park and Figueres\n\nStarting our workation off with a hike only seems natural at this point. The Garrotxa Park is beautiful and the trail, although challenging at some places, was wonderful. In the belly of the inactive volcano awaits a charming little church and a great photo opportunity!\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/07_group_hike.jpg\" alt=\"A group polaroid photo\" /><figcaption>Photo by: instagram.com/dushichiza</figcaption></figure>\n\nAfter the hike, we went to a local restaurant where some of us tried escargot for the first time. Can’t say I’m a fan though! 🐌\n\nAfterwards, we set sail for Figueres, the birthplace of Salvador Dalí, and home to the Dalí Museum. To put it bluntly, it was as eccentric as I expected.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/08_dali_museum.jpg\" alt=\"The facade of the Dalí Museum\" /><figcaption>As you can see, the museum isn’t hard to miss!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/09_dali_museum.jpg\" alt=\"Outside the Dalí Museum entrance\" /><figcaption>Even the entrance is intriguing!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/10_figueres.jpg\" alt=\"Figueres streets and Parish church of St. Peter\" /><figcaption>Parish church of St. Peter</figcaption></figure>\n\n\n## Day 3: Chill\n\nThe excitement caught up to some of us at this point and we needed to take it easy. While part of the crew went on _yet another_ hike, the rest of us stayed back. We were kicking by the pool and downing some beers.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/11_poolside_view.jpg\" alt=\"Swimming pool and view\" /><figcaption>The Fun Zone™</figcaption></figure>\n\n## Day 4: Girona\n\nGirona is a charming Catalan city with some of the most beautiful streets and churches you’ll ever see.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/12_girona.jpg\" alt=\"Photo from Girona Cathedral\" /><figcaption>The view from Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/13_girona.jpg\" alt=\"Photo from Girona Cathedral\" /><figcaption>The Collegiate Church of Sant Feliu in the distance.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/14_girona.jpg\" alt=\"Photo of Girona Cathedral\" /><figcaption>The stairs of the Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/15_girona.jpg\" alt=\"Photo of Girona Streets\" /><figcaption>A Girona street along with the view of the Cathedral’s bell tower in the distance.</figcaption></figure>\n\nIt’s no surprise that this town was chosen as the filming spot for the HBO hit series _“Game of Thrones.”_ Some of its iconic locations were used for the city of Braavos and King’s Landing. In fact, here’s a side by side comparison.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/16_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 1\" /><figcaption>Only the first building on the left is real.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/17_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 2\" /><figcaption>Notice how they cover the statues with banners to avoid any need for CGI.</figcaption></figure>\n\n## Day 5: Sant Feliu de Guíxols\n\nChilling by the pool is one thing. But, chilling on the beautiful Costa Brava is a whole different level. I envy the Guixolense for the beautiful <a href=\"https://en.wikipedia.org/wiki/Golden_hour_(photography)\" target=\"_blank\" title=\"Wikipedia: Golden Hour (Photography)\">golden hour</a> that they get to enjoy every day.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/18_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 1\" /><figcaption>The marina on the left.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/19_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 2\" /><figcaption>The horizon.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/20_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 3\" /><figcaption>Sant Feliu.</figcaption></figure>\n\n## Day 6: The Sheep of Siurana\n\nWe visited the Mas Marcè farm and got to learn about the rare Ripollesa sheep and how this family-owned farm makes specialty cheese. And we got to taste all of it! 🐑\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/21_siurana.jpg\" alt=\"Cheese making Photo 1\" /><figcaption>They’re making _Cuajada_, which we were told would be like unsweetened panna cotta. It didn’t really turn out like that at all! :)</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/22_siurana.jpg\" alt=\"Cheese making Photo 2\" /><figcaption>Draining the whey.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/23_siurana.jpg\" alt=\"Photo of Ripollesa sheep\" /><figcaption>Feeding the sheep.</figcaption></figure>\n\n## Day 7: Platja d'Aro Costa Brava\n\nOriginally a small fishing town, Platja d'Aro is now a major resort. Still, it remains fairly untouched and quiet. We got to do some kayaking along this 2km stretch of Costa Brava.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/24_costa_brava.jpg\" alt=\"Beach and kayaks\" /><figcaption>Kayaking preparations.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/25_costa_brava.jpg\" alt=\"The beach\" /><figcaption>The Beach.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/26_costa_brava.jpg\" alt=\"The gentle sunset\" /><figcaption>The gentle sunset.</figcaption></figure>\n\n## Day 8: Barcelona\n\nI’ll be honest, I didn’t care much for Sagrada Familia or the Gaudi walking tour. I’m the type of person who likes quiet, charming streets over massively hyped tourist attractions. Barcelona’s city center is just too much for me.\n\nBut there’s a whole different world outside this busy, noisy area. You know how you sometimes stumble upon a charming coffee shop? Or maybe a beautiful bookstore? Or how you accidentally end up atop of some high hill, just as the most amazing sunset hits your eye?\n\nOnce you leave the crowded city center, Barcelona offers so many of those opportunities and these photographs don’t do it justice.\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/27_barcelona.jpg\" alt=\"Gaudí House\" /><figcaption>Have to put some Gaudí in here.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/28_barcelona.jpg\" alt=\"Skyline view with Cathedral of the Holy Cross and Saint Eulalia poking out\" /><figcaption>That’s the Cathedral of the Holy Cross and Saint Eulalia poking out.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/29_barcelona.jpg\" alt=\"Photo of Barcelona streets\" /><figcaption>Unusually thin buildings.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/30_barcelona.jpg\" alt=\"Photo of Castell dels Tres Dragons\" /><figcaption>Castell dels Tres Dragons, seen from Ciutadella Park.</figcaption></figure>\n\n## Day 9: Biking\n\nHere’s something you probably didn’t know – I can’t ride a bike. 🚲 So, how did I, a non-biker, go biking across the Catalonian countryside? Well, I didn’t! But I walked my away in the blazing hot sun and reached the destination 5 minutes before the other part of the expedition.\n\n(Yes, my route was shorter, but that’s just a footnote in the history books!)\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/31_biking.jpg\" alt=\"Monells church and countryside.\" /><figcaption>Outside the town of Monells.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/32_biking.jpg\" alt=\"Tea riding a bike.\" /><figcaption>Tea on a bike.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/33_biking.jpg\" alt=\"Madremanya castle.\" /><figcaption>A castle near Madremanya.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/34_biking.jpg\" alt=\"Sunset\" /><figcaption>Sunset.</figcaption></figure>\n\n## Day 10: Shopping!\n\nLet’s just say there’s a couple of good outlet centers near Girona and we just _had_ to visit some! No photos here!\n\n## Day 11: Barcelona ➡ Belgrade\n\nWe got to spend our last day in Barcelona. (Before boarding our flight back home.) We had to split the gang so we could cover more ground. I went along with the group that decided to visit **Museo Picasso.**\n\n> For those who know how to read, I have painted my autobiography.\n\nIt’s one of the best art museums I’ve visited and I can boil it down to two reasons:\n\n1. **The layout** of the museum is designed to tell a story. As you go from room to room, you’re looking at Picasso’s work in chronological order and with just enough detail about his life to make everything click.\n2. They added an entire section full of artwork from artists who Picasso met and worked with while in Paris.\n  - Seeing the work of other artists, who no doubt left their mark of Picasso, promotes a sort of **historical dialog.**\n  - It gives you a new way of looking at his work from that period. (And it also helped me discover the brilliant work of [Ramon Casas.](https://en.wikipedia.org/wiki/Ramon_Casas))\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/35_museo_picasso.jpg\" alt=\"Tea in Museo Picasso\" /><figcaption>Tea on a balcony in Museo Picasso. Taking photos is prohibited inside the museum.</figcaption></figure>\n\n## Home Sweet Home\n\nWhen we left Belgrade, the weather was a sunny 26℃. The weather in Catalonia was similar. But when we got back, we were greeted by a chilly 6℃ and risk of rain.\n\nBut it’s good to be home. And home is never really the same once you return from somewhere. But it’s not the places that change. It’s us.\n\nAnd that’s amazing!\n\nPromoting change and personal growth is what we excel at over at SpiceFactory. If you’re interested in joining a team like that, our careers page [is always up to date.](https://spicefactory.co/careers/)\n","slug":"spicefactory-workation-2018","published":1,"updated":"2020-09-24T11:18:29.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfi82tre000erkripksvyc97","content":"<p>The <a href=\"https://spicefactory.co/\" target=\"_blank\" rel=\"external\">SpiceFactory</a> annual workation is the embodiment of our culture. It’s more than a company retreat and not just another empty team building project. Once a year we pack our bags, grab our significant others and kids, and go somewhere abroad to live, work, and play. In 2016 it was Belgium, 2017 was Italy, and this year it was Spain – the region of Catalonia to be precise.</p>\n<p>This is a short “memoir” and photo blog of the places we visited and the experiences we shared.</p>\n<h2 id=\"Day-1-Belgrade-➡-Barcelona-➡-Mas-Grau\"><a href=\"#Day-1-Belgrade-➡-Barcelona-➡-Mas-Grau\" class=\"headerlink\" title=\"Day 1: Belgrade ➡ Barcelona ➡ Mas Grau\"></a>Day 1: Belgrade ➡ Barcelona ➡ Mas Grau</h2><p>Every workation starts at the Nikola Tesla Airport. Preferably at 2 AM because we’re vampires and love to fly at night. 🧛‍♂️ Spirits are high, everything is on time, and we’re ready to hit the skies!</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg\" alt=\"SpiceFactory group photo\"><figcaption>Group photo from the Nikola Tesla Airport.</figcaption></figure>\n\n<p>Although we initially arrived at Barcelona Airport, our destination is still an hour away. Once we picked up our rent-a-cars, we were ready to travel to our villa – <em>Mas Grau</em> – near the sleepy village of Estanyol in <a href=\"https://en.wikipedia.org/wiki/Bescan%C3%B3\" target=\"_blank\" rel=\"external\">Bescanó.</a></p>\n<p>I had the pleasure of being the navigator for my good friend and colleague  Branko. Here’s a photo of our cabin crew.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/02_cabin_crew.jpg\" alt=\"Me, Tea, Branko, Marina, and Pablo\"><figcaption>The 9049 JHX Crew.</figcaption></figure>\n\n<p>That’s me in the purple shirt, with my girlfriend Tea. Branko is holding the camera, and his wife Marina is holding their son Pavlo (or Pablo as he has been referred to during the workation.)</p>\n<p>When we finally reached our accommodations, it was really a sight to behold:</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/03_mas_grau.jpg\" alt=\"Mas Grau Front\"><figcaption>Front View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/04_mas_grau.jpg\" alt=\"Mas Grau Side View\"><figcaption>Side View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/05_mas_grau.jpg\" alt=\"The Swimming Pool\"><figcaption>The Pool</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/06_mas_grau.jpg\" alt=\"View from the villa\"><figcaption>The View</figcaption></figure>\n\n<p>The villa isn’t just pretty. It’s equipped with a jacuzzi, sauna, turkish bath, pool table, badminton gear, and a swimming pool. Practically designed for relaxation and community-driven fun.</p>\n<h2 id=\"Day-2-Garrotxa-Volcanic-Zone-Natural-Park-and-Figueres\"><a href=\"#Day-2-Garrotxa-Volcanic-Zone-Natural-Park-and-Figueres\" class=\"headerlink\" title=\"Day 2: Garrotxa Volcanic Zone Natural Park and Figueres\"></a>Day 2: Garrotxa Volcanic Zone Natural Park and Figueres</h2><p>Starting our workation off with a hike only seems natural at this point. The Garrotxa Park is beautiful and the trail, although challenging at some places, was wonderful. In the belly of the inactive volcano awaits a charming little church and a great photo opportunity!</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/07_group_hike.jpg\" alt=\"A group polaroid photo\"><figcaption>Photo by: instagram.com/dushichiza</figcaption></figure>\n\n<p>After the hike, we went to a local restaurant where some of us tried escargot for the first time. Can’t say I’m a fan though! 🐌</p>\n<p>Afterwards, we set sail for Figueres, the birthplace of Salvador Dalí, and home to the Dalí Museum. To put it bluntly, it was as eccentric as I expected.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/08_dali_museum.jpg\" alt=\"The facade of the Dalí Museum\"><figcaption>As you can see, the museum isn’t hard to miss!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/09_dali_museum.jpg\" alt=\"Outside the Dalí Museum entrance\"><figcaption>Even the entrance is intriguing!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/10_figueres.jpg\" alt=\"Figueres streets and Parish church of St. Peter\"><figcaption>Parish church of St. Peter</figcaption></figure>\n\n\n<h2 id=\"Day-3-Chill\"><a href=\"#Day-3-Chill\" class=\"headerlink\" title=\"Day 3: Chill\"></a>Day 3: Chill</h2><p>The excitement caught up to some of us at this point and we needed to take it easy. While part of the crew went on <em>yet another</em> hike, the rest of us stayed back. We were kicking by the pool and downing some beers.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/11_poolside_view.jpg\" alt=\"Swimming pool and view\"><figcaption>The Fun Zone™</figcaption></figure>\n\n<h2 id=\"Day-4-Girona\"><a href=\"#Day-4-Girona\" class=\"headerlink\" title=\"Day 4: Girona\"></a>Day 4: Girona</h2><p>Girona is a charming Catalan city with some of the most beautiful streets and churches you’ll ever see.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/12_girona.jpg\" alt=\"Photo from Girona Cathedral\"><figcaption>The view from Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/13_girona.jpg\" alt=\"Photo from Girona Cathedral\"><figcaption>The Collegiate Church of Sant Feliu in the distance.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/14_girona.jpg\" alt=\"Photo of Girona Cathedral\"><figcaption>The stairs of the Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/15_girona.jpg\" alt=\"Photo of Girona Streets\"><figcaption>A Girona street along with the view of the Cathedral’s bell tower in the distance.</figcaption></figure>\n\n<p>It’s no surprise that this town was chosen as the filming spot for the HBO hit series <em>“Game of Thrones.”</em> Some of its iconic locations were used for the city of Braavos and King’s Landing. In fact, here’s a side by side comparison.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/16_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 1\"><figcaption>Only the first building on the left is real.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/17_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 2\"><figcaption>Notice how they cover the statues with banners to avoid any need for CGI.</figcaption></figure>\n\n<h2 id=\"Day-5-Sant-Feliu-de-Guixols\"><a href=\"#Day-5-Sant-Feliu-de-Guixols\" class=\"headerlink\" title=\"Day 5: Sant Feliu de Guíxols\"></a>Day 5: Sant Feliu de Guíxols</h2><p>Chilling by the pool is one thing. But, chilling on the beautiful Costa Brava is a whole different level. I envy the Guixolense for the beautiful <a href=\"https://en.wikipedia.org/wiki/Golden_hour_(photography)\" target=\"_blank\" title=\"Wikipedia: Golden Hour (Photography)\">golden hour</a> that they get to enjoy every day.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/18_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 1\"><figcaption>The marina on the left.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/19_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 2\"><figcaption>The horizon.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/20_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 3\"><figcaption>Sant Feliu.</figcaption></figure>\n\n<h2 id=\"Day-6-The-Sheep-of-Siurana\"><a href=\"#Day-6-The-Sheep-of-Siurana\" class=\"headerlink\" title=\"Day 6: The Sheep of Siurana\"></a>Day 6: The Sheep of Siurana</h2><p>We visited the Mas Marcè farm and got to learn about the rare Ripollesa sheep and how this family-owned farm makes specialty cheese. And we got to taste all of it! 🐑</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/21_siurana.jpg\" alt=\"Cheese making Photo 1\"><figcaption>They’re making <em>Cuajada</em>, which we were told would be like unsweetened panna cotta. It didn’t really turn out like that at all! :)</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/22_siurana.jpg\" alt=\"Cheese making Photo 2\"><figcaption>Draining the whey.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/23_siurana.jpg\" alt=\"Photo of Ripollesa sheep\"><figcaption>Feeding the sheep.</figcaption></figure>\n\n<h2 id=\"Day-7-Platja-d’Aro-Costa-Brava\"><a href=\"#Day-7-Platja-d’Aro-Costa-Brava\" class=\"headerlink\" title=\"Day 7: Platja d’Aro Costa Brava\"></a>Day 7: Platja d’Aro Costa Brava</h2><p>Originally a small fishing town, Platja d’Aro is now a major resort. Still, it remains fairly untouched and quiet. We got to do some kayaking along this 2km stretch of Costa Brava.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/24_costa_brava.jpg\" alt=\"Beach and kayaks\"><figcaption>Kayaking preparations.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/25_costa_brava.jpg\" alt=\"The beach\"><figcaption>The Beach.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/26_costa_brava.jpg\" alt=\"The gentle sunset\"><figcaption>The gentle sunset.</figcaption></figure>\n\n<h2 id=\"Day-8-Barcelona\"><a href=\"#Day-8-Barcelona\" class=\"headerlink\" title=\"Day 8: Barcelona\"></a>Day 8: Barcelona</h2><p>I’ll be honest, I didn’t care much for Sagrada Familia or the Gaudi walking tour. I’m the type of person who likes quiet, charming streets over massively hyped tourist attractions. Barcelona’s city center is just too much for me.</p>\n<p>But there’s a whole different world outside this busy, noisy area. You know how you sometimes stumble upon a charming coffee shop? Or maybe a beautiful bookstore? Or how you accidentally end up atop of some high hill, just as the most amazing sunset hits your eye?</p>\n<p>Once you leave the crowded city center, Barcelona offers so many of those opportunities and these photographs don’t do it justice.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/27_barcelona.jpg\" alt=\"Gaudí House\"><figcaption>Have to put some Gaudí in here.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/28_barcelona.jpg\" alt=\"Skyline view with Cathedral of the Holy Cross and Saint Eulalia poking out\"><figcaption>That’s the Cathedral of the Holy Cross and Saint Eulalia poking out.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/29_barcelona.jpg\" alt=\"Photo of Barcelona streets\"><figcaption>Unusually thin buildings.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/30_barcelona.jpg\" alt=\"Photo of Castell dels Tres Dragons\"><figcaption>Castell dels Tres Dragons, seen from Ciutadella Park.</figcaption></figure>\n\n<h2 id=\"Day-9-Biking\"><a href=\"#Day-9-Biking\" class=\"headerlink\" title=\"Day 9: Biking\"></a>Day 9: Biking</h2><p>Here’s something you probably didn’t know – I can’t ride a bike. 🚲 So, how did I, a non-biker, go biking across the Catalonian countryside? Well, I didn’t! But I walked my away in the blazing hot sun and reached the destination 5 minutes before the other part of the expedition.</p>\n<p>(Yes, my route was shorter, but that’s just a footnote in the history books!)</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/31_biking.jpg\" alt=\"Monells church and countryside.\"><figcaption>Outside the town of Monells.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/32_biking.jpg\" alt=\"Tea riding a bike.\"><figcaption>Tea on a bike.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/33_biking.jpg\" alt=\"Madremanya castle.\"><figcaption>A castle near Madremanya.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/34_biking.jpg\" alt=\"Sunset\"><figcaption>Sunset.</figcaption></figure>\n\n<h2 id=\"Day-10-Shopping\"><a href=\"#Day-10-Shopping\" class=\"headerlink\" title=\"Day 10: Shopping!\"></a>Day 10: Shopping!</h2><p>Let’s just say there’s a couple of good outlet centers near Girona and we just <em>had</em> to visit some! No photos here!</p>\n<h2 id=\"Day-11-Barcelona-➡-Belgrade\"><a href=\"#Day-11-Barcelona-➡-Belgrade\" class=\"headerlink\" title=\"Day 11: Barcelona ➡ Belgrade\"></a>Day 11: Barcelona ➡ Belgrade</h2><p>We got to spend our last day in Barcelona. (Before boarding our flight back home.) We had to split the gang so we could cover more ground. I went along with the group that decided to visit <strong>Museo Picasso.</strong></p>\n<blockquote>\n<p>For those who know how to read, I have painted my autobiography.</p>\n</blockquote>\n<p>It’s one of the best art museums I’ve visited and I can boil it down to two reasons:</p>\n<ol>\n<li><strong>The layout</strong> of the museum is designed to tell a story. As you go from room to room, you’re looking at Picasso’s work in chronological order and with just enough detail about his life to make everything click.</li>\n<li>They added an entire section full of artwork from artists who Picasso met and worked with while in Paris.<ul>\n<li>Seeing the work of other artists, who no doubt left their mark of Picasso, promotes a sort of <strong>historical dialog.</strong></li>\n<li>It gives you a new way of looking at his work from that period. (And it also helped me discover the brilliant work of <a href=\"https://en.wikipedia.org/wiki/Ramon_Casas\" target=\"_blank\" rel=\"external\">Ramon Casas.</a>)</li>\n</ul>\n</li>\n</ol>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/35_museo_picasso.jpg\" alt=\"Tea in Museo Picasso\"><figcaption>Tea on a balcony in Museo Picasso. Taking photos is prohibited inside the museum.</figcaption></figure>\n\n<h2 id=\"Home-Sweet-Home\"><a href=\"#Home-Sweet-Home\" class=\"headerlink\" title=\"Home Sweet Home\"></a>Home Sweet Home</h2><p>When we left Belgrade, the weather was a sunny 26℃. The weather in Catalonia was similar. But when we got back, we were greeted by a chilly 6℃ and risk of rain.</p>\n<p>But it’s good to be home. And home is never really the same once you return from somewhere. But it’s not the places that change. It’s us.</p>\n<p>And that’s amazing!</p>\n<p>Promoting change and personal growth is what we excel at over at SpiceFactory. If you’re interested in joining a team like that, our careers page <a href=\"https://spicefactory.co/careers/\" target=\"_blank\" rel=\"external\">is always up to date.</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>The <a href=\"https://spicefactory.co/\" target=\"_blank\" rel=\"external\">SpiceFactory</a> annual workation is the embodiment of our culture. It’s more than a company retreat and not just another empty team building project. Once a year we pack our bags, grab our significant others and kids, and go somewhere abroad to live, work, and play. In 2016 it was Belgium, 2017 was Italy, and this year it was Spain – the region of Catalonia to be precise.</p>\n<p>This is a short “memoir” and photo blog of the places we visited and the experiences we shared.</p>\n<h2 id=\"Day-1-Belgrade-➡-Barcelona-➡-Mas-Grau\"><a href=\"#Day-1-Belgrade-➡-Barcelona-➡-Mas-Grau\" class=\"headerlink\" title=\"Day 1: Belgrade ➡ Barcelona ➡ Mas Grau\"></a>Day 1: Belgrade ➡ Barcelona ➡ Mas Grau</h2><p>Every workation starts at the Nikola Tesla Airport. Preferably at 2 AM because we’re vampires and love to fly at night. 🧛‍♂️ Spirits are high, everything is on time, and we’re ready to hit the skies!</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/01_airport_spicefactory_group_photo.jpg\" alt=\"SpiceFactory group photo\"><figcaption>Group photo from the Nikola Tesla Airport.</figcaption></figure>\n\n<p>Although we initially arrived at Barcelona Airport, our destination is still an hour away. Once we picked up our rent-a-cars, we were ready to travel to our villa – <em>Mas Grau</em> – near the sleepy village of Estanyol in <a href=\"https://en.wikipedia.org/wiki/Bescan%C3%B3\" target=\"_blank\" rel=\"external\">Bescanó.</a></p>\n<p>I had the pleasure of being the navigator for my good friend and colleague  Branko. Here’s a photo of our cabin crew.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/02_cabin_crew.jpg\" alt=\"Me, Tea, Branko, Marina, and Pablo\"><figcaption>The 9049 JHX Crew.</figcaption></figure>\n\n<p>That’s me in the purple shirt, with my girlfriend Tea. Branko is holding the camera, and his wife Marina is holding their son Pavlo (or Pablo as he has been referred to during the workation.)</p>\n<p>When we finally reached our accommodations, it was really a sight to behold:</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/03_mas_grau.jpg\" alt=\"Mas Grau Front\"><figcaption>Front View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/04_mas_grau.jpg\" alt=\"Mas Grau Side View\"><figcaption>Side View</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/05_mas_grau.jpg\" alt=\"The Swimming Pool\"><figcaption>The Pool</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/06_mas_grau.jpg\" alt=\"View from the villa\"><figcaption>The View</figcaption></figure>\n\n<p>The villa isn’t just pretty. It’s equipped with a jacuzzi, sauna, turkish bath, pool table, badminton gear, and a swimming pool. Practically designed for relaxation and community-driven fun.</p>\n<h2 id=\"Day-2-Garrotxa-Volcanic-Zone-Natural-Park-and-Figueres\"><a href=\"#Day-2-Garrotxa-Volcanic-Zone-Natural-Park-and-Figueres\" class=\"headerlink\" title=\"Day 2: Garrotxa Volcanic Zone Natural Park and Figueres\"></a>Day 2: Garrotxa Volcanic Zone Natural Park and Figueres</h2><p>Starting our workation off with a hike only seems natural at this point. The Garrotxa Park is beautiful and the trail, although challenging at some places, was wonderful. In the belly of the inactive volcano awaits a charming little church and a great photo opportunity!</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/07_group_hike.jpg\" alt=\"A group polaroid photo\"><figcaption>Photo by: instagram.com/dushichiza</figcaption></figure>\n\n<p>After the hike, we went to a local restaurant where some of us tried escargot for the first time. Can’t say I’m a fan though! 🐌</p>\n<p>Afterwards, we set sail for Figueres, the birthplace of Salvador Dalí, and home to the Dalí Museum. To put it bluntly, it was as eccentric as I expected.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/08_dali_museum.jpg\" alt=\"The facade of the Dalí Museum\"><figcaption>As you can see, the museum isn’t hard to miss!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/09_dali_museum.jpg\" alt=\"Outside the Dalí Museum entrance\"><figcaption>Even the entrance is intriguing!</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/10_figueres.jpg\" alt=\"Figueres streets and Parish church of St. Peter\"><figcaption>Parish church of St. Peter</figcaption></figure>\n\n\n<h2 id=\"Day-3-Chill\"><a href=\"#Day-3-Chill\" class=\"headerlink\" title=\"Day 3: Chill\"></a>Day 3: Chill</h2><p>The excitement caught up to some of us at this point and we needed to take it easy. While part of the crew went on <em>yet another</em> hike, the rest of us stayed back. We were kicking by the pool and downing some beers.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/11_poolside_view.jpg\" alt=\"Swimming pool and view\"><figcaption>The Fun Zone™</figcaption></figure>\n\n<h2 id=\"Day-4-Girona\"><a href=\"#Day-4-Girona\" class=\"headerlink\" title=\"Day 4: Girona\"></a>Day 4: Girona</h2><p>Girona is a charming Catalan city with some of the most beautiful streets and churches you’ll ever see.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/12_girona.jpg\" alt=\"Photo from Girona Cathedral\"><figcaption>The view from Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/13_girona.jpg\" alt=\"Photo from Girona Cathedral\"><figcaption>The Collegiate Church of Sant Feliu in the distance.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/14_girona.jpg\" alt=\"Photo of Girona Cathedral\"><figcaption>The stairs of the Cathedral of Saint Mary of Girona.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/15_girona.jpg\" alt=\"Photo of Girona Streets\"><figcaption>A Girona street along with the view of the Cathedral’s bell tower in the distance.</figcaption></figure>\n\n<p>It’s no surprise that this town was chosen as the filming spot for the HBO hit series <em>“Game of Thrones.”</em> Some of its iconic locations were used for the city of Braavos and King’s Landing. In fact, here’s a side by side comparison.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/16_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 1\"><figcaption>Only the first building on the left is real.</figcaption></figure>\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/17_girona_got.jpg\" alt=\"Game of Thrones Comparison Number 2\"><figcaption>Notice how they cover the statues with banners to avoid any need for CGI.</figcaption></figure>\n\n<h2 id=\"Day-5-Sant-Feliu-de-Guixols\"><a href=\"#Day-5-Sant-Feliu-de-Guixols\" class=\"headerlink\" title=\"Day 5: Sant Feliu de Guíxols\"></a>Day 5: Sant Feliu de Guíxols</h2><p>Chilling by the pool is one thing. But, chilling on the beautiful Costa Brava is a whole different level. I envy the Guixolense for the beautiful <a href=\"https://en.wikipedia.org/wiki/Golden_hour_(photography)\" target=\"_blank\" title=\"Wikipedia: Golden Hour (Photography)\">golden hour</a> that they get to enjoy every day.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/18_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 1\"><figcaption>The marina on the left.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/19_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 2\"><figcaption>The horizon.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/20_sant_feliu_de_guixols.jpg\" alt=\"Golden Hour Photo 3\"><figcaption>Sant Feliu.</figcaption></figure>\n\n<h2 id=\"Day-6-The-Sheep-of-Siurana\"><a href=\"#Day-6-The-Sheep-of-Siurana\" class=\"headerlink\" title=\"Day 6: The Sheep of Siurana\"></a>Day 6: The Sheep of Siurana</h2><p>We visited the Mas Marcè farm and got to learn about the rare Ripollesa sheep and how this family-owned farm makes specialty cheese. And we got to taste all of it! 🐑</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/21_siurana.jpg\" alt=\"Cheese making Photo 1\"><figcaption>They’re making <em>Cuajada</em>, which we were told would be like unsweetened panna cotta. It didn’t really turn out like that at all! :)</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/22_siurana.jpg\" alt=\"Cheese making Photo 2\"><figcaption>Draining the whey.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/23_siurana.jpg\" alt=\"Photo of Ripollesa sheep\"><figcaption>Feeding the sheep.</figcaption></figure>\n\n<h2 id=\"Day-7-Platja-d’Aro-Costa-Brava\"><a href=\"#Day-7-Platja-d’Aro-Costa-Brava\" class=\"headerlink\" title=\"Day 7: Platja d’Aro Costa Brava\"></a>Day 7: Platja d’Aro Costa Brava</h2><p>Originally a small fishing town, Platja d’Aro is now a major resort. Still, it remains fairly untouched and quiet. We got to do some kayaking along this 2km stretch of Costa Brava.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/24_costa_brava.jpg\" alt=\"Beach and kayaks\"><figcaption>Kayaking preparations.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/25_costa_brava.jpg\" alt=\"The beach\"><figcaption>The Beach.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/26_costa_brava.jpg\" alt=\"The gentle sunset\"><figcaption>The gentle sunset.</figcaption></figure>\n\n<h2 id=\"Day-8-Barcelona\"><a href=\"#Day-8-Barcelona\" class=\"headerlink\" title=\"Day 8: Barcelona\"></a>Day 8: Barcelona</h2><p>I’ll be honest, I didn’t care much for Sagrada Familia or the Gaudi walking tour. I’m the type of person who likes quiet, charming streets over massively hyped tourist attractions. Barcelona’s city center is just too much for me.</p>\n<p>But there’s a whole different world outside this busy, noisy area. You know how you sometimes stumble upon a charming coffee shop? Or maybe a beautiful bookstore? Or how you accidentally end up atop of some high hill, just as the most amazing sunset hits your eye?</p>\n<p>Once you leave the crowded city center, Barcelona offers so many of those opportunities and these photographs don’t do it justice.</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/27_barcelona.jpg\" alt=\"Gaudí House\"><figcaption>Have to put some Gaudí in here.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/28_barcelona.jpg\" alt=\"Skyline view with Cathedral of the Holy Cross and Saint Eulalia poking out\"><figcaption>That’s the Cathedral of the Holy Cross and Saint Eulalia poking out.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/29_barcelona.jpg\" alt=\"Photo of Barcelona streets\"><figcaption>Unusually thin buildings.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/30_barcelona.jpg\" alt=\"Photo of Castell dels Tres Dragons\"><figcaption>Castell dels Tres Dragons, seen from Ciutadella Park.</figcaption></figure>\n\n<h2 id=\"Day-9-Biking\"><a href=\"#Day-9-Biking\" class=\"headerlink\" title=\"Day 9: Biking\"></a>Day 9: Biking</h2><p>Here’s something you probably didn’t know – I can’t ride a bike. 🚲 So, how did I, a non-biker, go biking across the Catalonian countryside? Well, I didn’t! But I walked my away in the blazing hot sun and reached the destination 5 minutes before the other part of the expedition.</p>\n<p>(Yes, my route was shorter, but that’s just a footnote in the history books!)</p>\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/31_biking.jpg\" alt=\"Monells church and countryside.\"><figcaption>Outside the town of Monells.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/32_biking.jpg\" alt=\"Tea riding a bike.\"><figcaption>Tea on a bike.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/33_biking.jpg\" alt=\"Madremanya castle.\"><figcaption>A castle near Madremanya.</figcaption></figure>\n\n<figure class=\"blog-post-image blog-post-image-small\"><img src=\"/content/images/2018/workation/34_biking.jpg\" alt=\"Sunset\"><figcaption>Sunset.</figcaption></figure>\n\n<h2 id=\"Day-10-Shopping\"><a href=\"#Day-10-Shopping\" class=\"headerlink\" title=\"Day 10: Shopping!\"></a>Day 10: Shopping!</h2><p>Let’s just say there’s a couple of good outlet centers near Girona and we just <em>had</em> to visit some! No photos here!</p>\n<h2 id=\"Day-11-Barcelona-➡-Belgrade\"><a href=\"#Day-11-Barcelona-➡-Belgrade\" class=\"headerlink\" title=\"Day 11: Barcelona ➡ Belgrade\"></a>Day 11: Barcelona ➡ Belgrade</h2><p>We got to spend our last day in Barcelona. (Before boarding our flight back home.) We had to split the gang so we could cover more ground. I went along with the group that decided to visit <strong>Museo Picasso.</strong></p>\n<blockquote>\n<p>For those who know how to read, I have painted my autobiography.</p>\n</blockquote>\n<p>It’s one of the best art museums I’ve visited and I can boil it down to two reasons:</p>\n<ol>\n<li><strong>The layout</strong> of the museum is designed to tell a story. As you go from room to room, you’re looking at Picasso’s work in chronological order and with just enough detail about his life to make everything click.</li>\n<li>They added an entire section full of artwork from artists who Picasso met and worked with while in Paris.<ul>\n<li>Seeing the work of other artists, who no doubt left their mark of Picasso, promotes a sort of <strong>historical dialog.</strong></li>\n<li>It gives you a new way of looking at his work from that period. (And it also helped me discover the brilliant work of <a href=\"https://en.wikipedia.org/wiki/Ramon_Casas\" target=\"_blank\" rel=\"external\">Ramon Casas.</a>)</li>\n</ul>\n</li>\n</ol>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2018/workation/35_museo_picasso.jpg\" alt=\"Tea in Museo Picasso\"><figcaption>Tea on a balcony in Museo Picasso. Taking photos is prohibited inside the museum.</figcaption></figure>\n\n<h2 id=\"Home-Sweet-Home\"><a href=\"#Home-Sweet-Home\" class=\"headerlink\" title=\"Home Sweet Home\"></a>Home Sweet Home</h2><p>When we left Belgrade, the weather was a sunny 26℃. The weather in Catalonia was similar. But when we got back, we were greeted by a chilly 6℃ and risk of rain.</p>\n<p>But it’s good to be home. And home is never really the same once you return from somewhere. But it’s not the places that change. It’s us.</p>\n<p>And that’s amazing!</p>\n<p>Promoting change and personal growth is what we excel at over at SpiceFactory. If you’re interested in joining a team like that, our careers page <a href=\"https://spicefactory.co/careers/\" target=\"_blank\" rel=\"external\">is always up to date.</a></p>\n"},{"title":"The Red Flags on Your Resume","seo_description":"Lear about the red flags that recruiters look on your resume. Learn how to write a good resume or CV!","promo_photo":"/content/images/2020/resume-red-flags.jpg","date":"2020-09-28T00:00:00.000Z","updated":"2020-10-07T00:00:00.000Z","_content":"\nThis week I left [a comment on the React subreddit](https://www.reddit.com/r/reactjs/comments/j013yg/i_applied_for_100_jobs_but_no_interview/g6n876s/?utm_source=reddit&utm_medium=web2x&context=3) that critiqued a resume that was posted. It got **_a lot of_** upvotes. \n\nApparently, [swyx](https://twitter.com/swyx) thinks it might be the most upvoted comment on the sub. Since there seems to be some interest in this, I thought I’d expand and turn it into a blog post.\n\nI’m going to give insight into the red flags that I notice on people’s resumes. I’m not just going to list them. I’ll try to dig deeper and explain the reasoning behind them. Also, we’ll figure out some “metrics” you should aspire to when writing your resume.\n\n## Signals vs Noise \n\nReading a resume is about identifying signals and skipping the “noise.” Let’s stick to positive things for now. These are my favorite signals:\n\n- Attention to detail.\n- Technical mastery.\n- Drive to lead or innovate.\n- Unique experiences and perspectives. \n- Ability to work _with_ a team.\n- [Focuses on outcomes, not output.](/2018/output-vs-outcome)\n\nFor every positive signal I can find, the likelihood of moving the candidate to the next phase increases.\n\n### Signals per Line as a Metric \n \nAs a candidate, it is your goal to help make this job easier for me by highlighting and focusing on the good stuff.\n\nTake the signals I outlined above and think about how many of them I can find per line on your resume.\n\n<div class=\"alert-box alert-box__info\">✨ You have about 40 lines of text on a single page. It should be more than enough space to include all signals.</div>\n\n### Resumes are Full of Noise\n\nI’ve seen hundreds of resumes and many of them are so full of noise. If you have under 5 years of experience, you can fit your resume to a single page. You might have to use a 2-column layout, but you can definitely do it. Even if you have 10+ years of experience, a single page is probably enough.\n\nWe expect engineers to write clean, concise, well-structured code. The same goes for resumes. If you can’t get the point across in just one page, then you need to get back to the drawing board.\n\nMore than 1 page is obviously fine. Nobody will fault you for it. But everything important should be on the first page.\n\n### Avoid BBoT\n\n_Big blocks of Text_ are a good way to make the recruiter lose focus and skip important details. Avoid long sentences and giant paragraphs. Use spacing and subtitles to break up blocks so they don’t clump together.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/resume-refactor.png\" alt=\"Comparison showing how better spacing and shorter sentences improve readability.\" /><figcaption>Compare the two. They provide the same information, but one is clearly easier to read.</figcaption></figure>\n\nI like to think of the example above as a type of _“resume refactor.”_ A writer could also tell us that the first block is a “draft” and that the second is the edited version.\n\nSpeaking of writers, there’s a free online tool called [Hemingway Editor](http://www.hemingwayapp.com/) that will help you figure out if your sentences are readable.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/hemingwayapp-example.png\" alt=\"Our first block of text analyzed with the Hemingway Editor.\" /><figcaption>The tagline is “a spell-checker for readability.”</figcaption></figure>\n\n\n### You Only Get 60 seconds\n\nIf there’s a flood of resumes then you probably only get 60 seconds of a recruiter’s time. If you’re lucky the company has employed enough people to give each resume a better chance. But that’s not a guarantee.\n\nBut why would you even hope for that and why would you need more? Strive to make a resume so good that 60 seconds is enough time for me to go _“Yeah, this person seems like a great candidate!”_\n\n### Don’t Overuse Links\n\nResumes seem to be full of links to various projects, open-source repositories, and social profiles. \n\nIf provided without context they just waste the 60 seconds you have. \n\nI already have another 50 resumes to look at, why should I waste my time and click this link? Sell me a story that makes me want to check it out! And make sure you’re including a **link that’s worth clicking.**\n\nIf you’re linking to a project, it should be obvious from the resume what it is and what you did there. I shouldn’t have to go through the link to actually figure that out.\n\nIf you’re linking to a repository, it should have a good README that explains things in detail and highlights the good stuff that I should look for.\n\nIf you’re linking to a profile, it should be up to date and professional.\n\nAll links should be working. A broken link is not a good look.\n\n## Avoid The First Bias\n\nAnother thing to consider is: _how long will it take the recruiter to notice the first positive signal?_\n\nIt seems like our brains form a first impression **[after just 100 milliseconds!](https://web.archive.org/web/20140715094146/http://psych.princeton.edu/psychology/research/todorov/pdf/Willis%26Todorov-PsychScience.pdf)**\n\nI’m not sure it’s possible to present a positive signal that fast, but it is definitely possible to present a negative one. For that reason, avoiding a red flag is critical. \n\nYou don’t want the first impression to be a red flag. Even if you got a lot of other things right, the unconscious bias against you has already set in.\n\n## Spelling, Grammar, and Styling\n\n100ms is enough for me to take in the layout of the resume and decide where I want to start reading from. It’s usually your name, followed by your short summary or the first section in the resume.\n\nBefore I can get any positive signals I might encounter negative ones in form of spelling, grammar, or styling errors. This is “first bias” territory.\n\nThese are not acceptable and they will weigh against you. If your resume is not in your native language, you do not get a free pass. You are judged the same as everyone else.\n\nThese errors indicate that you do not take things seriously. You lack attention to detail and professionalism. How can I expect you to communicate well with the team or our clients if you can’t communicate well on your own resume? \n\n_**On the other hand, a spotless resume also comes with the benefit of sending out some positive signals.**_\n\nIf it’s in your native language then it shows professionalism and attention to detail. If it’s in a language that’s not your native one, then it also showcases some bonus points for your expected communication level.\n\n### Learning to Write\n\nWriting is a craft. If you really want to up your game, then reading Ann Handley’s _[“Everybody Writes”](https://www.amazon.com/Everybody-Writes-Go-Creating-Ridiculously/dp/1118905555)_ is my recommendation. It’s a goldmine of advice that will help you avoid all communication-related red flags on your resume.\n\n### Fluff Sentences\n\nAnother red flag this odd type of “noise” that also comes with some impossible claims. My favorite line goes something like this:\n\n> I wrote fully-functional, high-quality clean code.\n\nI’ve seen many variations of this sentence. Let’s break it down:\n- _**“Fully-functional code?”**_ Really? So, you mean to tell me you did the bare minimum we all do, but you want to dress it up in a fancy suit and tie?\n  - Imagine for a moment if a restaurant advertised with the line _“we deliver fully-eatable food.”_  \n- _**\"High-quality code?\"**_ In what way? Any metrics? Did you decide it was “high quality” or someone else?\n- _**“Clean code?”**_ As in you followed all of Uncle Bob’s advice? Or is there some other definition? And you did this by yourself without anyone checking it?\n\nIt’s a bit risky to say these things because engineers [don’t really agree](/2020/boolean_trap_when_desgining_react_components_revisited/) on a definition for any of these terms. But there’s something else that’s great about this type of fluff. \n\nThe remarks I outlined above are not what make this a red flag. Maybe I’ll look at their project on GitHub and I’ll really go _“wow, that’s some awesome code!”_\n\nWhat makes this a red flag is that this type of candidate usually focuses only on their output, not [the outcomes](/2018/output-vs-outcome) they’ve achieved during their career.\n\nFor a junior position that’s fine. But for a senior engineer? Now that’s a big problem.\n\nAnother red flag is that this reads a lot like: _“I don’t really have that much experience, so I’m listing off words that will impress you.”_\n\nAgain, not a great look.\n\n## Focus on Your Work Experience\n\nIf you have work experience already, then this should be the meat of your resume. This is the focus. Tell us what you did and what value you delivered.\n\nYour work experience is not the place to list off a hundred technologies and libraries. It’s not there for you to write about “clean code” and “best practices.”\n\nIt’s there for you to show you have a proven track record of delivering value and problem-solving. Focus on:\n- What you shipped and some of the toughest challenges you solved.\n- The processes and practices you implemented, innovated, or improved.\n- The people you lead and/or mentored.\n\nIf you can back up these claims with some data points that you can defend and elaborate on further in the interview, then that’s a **big positive signal.**\n\nOne thing I used to mention on my own resume was how I completed a big refactor that modernized the codebase and increased velocity by ~80%. \n\nThis was an intense 2-month long task and I have years of data points to prove the increase in velocity. It’s a great example of the stuff people like to hear about. It’s also a great story to discuss at conferences and meetups.\n\n### Work Experience Red Flags\n\nI already mentioned that listing off a bunch of libraries in your work section is not the best idea. It’s a red flag that you think that that’s the important information you should be presenting.\n\nAnother one is the abuse of the words _“we”_ and _”team.”_ This might seem counter-intuitive as good teamwork is an important skill. One of my good signals at the start wars indeed: “Ability to work _with_ a team.”\n    \nBut this section is about you and your work experience. We know that you work in a team. Feel free to tell us a bit about that. Afterward, **focus on what you contributed.**\n\nThe red flag here is that if you always use the plural form, we are left without the knowledge of what you’re capable of on your own.\n\n<div class=\"alert-box alert-box__info\">✨ I acknowledge that this might be a cultural thing that mostly applies to the US and Western Europe. If you are applying to western companies, but come from a different cultural mindset, you should research and adapt to this.</div>\n\n## Skill Sections\n\nI don’t know who invented the resume templates that use graphs, dots, and stars to measure your skills, but they really pulled one over on us.\n\nWhat does “80% JavaScript” mean as a skill? Or a score of 4/5 on React. What measures are you using and who are you benchmarking against?\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/skills-section-horror.png\" alt=\"An example of the horrible skill chart.\" /><figcaption>This one is especially interesting to me because HTML and CSS are clumped together. That’s a red flag on its own.</figcaption></figure>\n\nAnother bad thing is that these graphics usually take at least half of the page. Yikes!\n\nThey provide no information and raise a red flag because I constantly ask myself: _“Why did they think this was a good idea?”_\n\nHere’s an [article from Resume Genius](https://resumegenius.com/blog/resume-help/dumbest-resume-trend) that really goes in-depth on why this is such a horrible idea.\n\n### It’s Not a `package.json` File \n\nIt’s amazing what people have listed on their resume. It really ends up looking like a `package.json` file.\n\nIt doesn’t matter if you’ve used MaterialUI or Bootstrap. We’re not going to give you a big plus even if we use them. And we’re not going to give you a minus if something we like is missing.\n\nThe only exception I see here is if you applying as a freelancer for short-term contracts. In that case, an employer will likely want to know what you know right now and what you’ll have to learn along the way.\n \n## Education\n\nDid you study computer science or a related field? Highlight this even if  you haven’t graduated. Usually you want this after your work experience and skills section.\n\nIf you have a masters, PHD, or an MBA, then make this section a bit more prominent. Include graduation dates or years of active study.\n\nIf you’re switching from a different industry, then it’s a complicated subject. Some argue against including it. Personally, I see nothing wrong with it.\n\nTo me, it shows dedication that you’ve completed something. I think it’s normal to switch careers and develop new interests. It’s a very “human thing” to do.\n\nBut in that case, it should not be placed on a prominent position on your resume. The info should probably be slim.\n\n### Diverse Education as a Strength\n\nHowever, if you finished a degree in agriculture and are applying to a company that makes software for farms… guess what? Bingo!\n\nNow that’s an opportunity to show that not only will you get the work done, but you’ll also have **the domain knowledge to lead.**\n\nIt doesn’t just have to be a degree. There might be an angle to make your non-tech education or past experiences shine if you know they will help your application. A motivational letter might be the better place for this.\n\n### Courses? Bootcamps? Certificates?\n\nI think it’s fine to include these as well. But only if they were something that actually took some time and effort to complete. A two-week course on Udemy is not much to go on and could be seen as a bit of a red flag.\n\nCourses that took months of continual work and learning are what you should focus on. You don’t really have to include too much info here. Keep the section small.\n\nThe same goes for certificates.\n \n## Unprofessional Photographs\n\nI personally don’t include my photo in my resume. It’s present on my LinkedIn and GitHub profile if anyone cares that much.\n\nRacism and sexism are definitely a concern for a lot of groups. I’m not qualified to give any advice on this.  \n\nIn some cultures (like Japan) it’s almost mandatory to include one, so the culture is definitely another aspect.\n\nRegardless, if you choose to include a photo, then it has to be a professional photograph. You should be placed against a neutral background with your face making up most of the picture.\n\nI’ve seen many unprofessional photographs and they instill a bad feeling. People crop out their portrait from events such as weddings, graduation day, and prom. Yikes!\n\n## (Un)Interesting Interests\n\nThe same person who invented the “graphical skills section” probably invented _the awkward interests section._ \n\nMy rule of thumb is to skip this section unless:\n- There’s something that ties into your work or is unique.\n- Your hobbies fit the company culture of the place you’re applying to.\n- You don’t have much work experience to focus on, but your hobbies showcase technical skills.\n\nAs an example of the first, let’s say you love baking. And you love it so much you built a custom Arduino rig that measures your sourdough starter’s activity.\n \nNow that’s definitely interesting and worth including in a small “interests” section. It also shows that you’re capable of being passionate about something and going the extra mile for it. As an employer, I’d love to see that and find a way to get you that invested in my company.\n\nAn example of the second: there’s a company in my hometown that organizes some sort of group cooking day as a company activity. If you’re a passionate home cook, you’d probably like to include this as a sign that you fit in with the culture.\n\nHowever, if you’re just going to list off _“the usual boring stuff,”_ then skip the section. It’s not a red flag, but the space could probably be used better.\n\nOh, and if you include “reading” as a hobby, be prepared to answer the question: _“What’s the last book you read?”_ I’d never do that to someone, but it seems a lot of recruiters and HR do this.\n\n## Over-designed\n\nSome of the resumes I’ve seen featured over-the-top design with all sorts of colors, icons, and graphics. You don’t need these to stand out. They just contribute to the noise factor.\n\nIf having a nice design is something you want to achieve as it’s part of the position, then I would suggest going with minimalism.\n\n> “Less is more.”\n\nFocus on nice typography, appealing colors, and consistent spacing.\n\n## Ask People to Review\n\nLike with code, you want as many eyeballs on your resume as possible. If you pick out people at random, you might get some bad advice, so it’s best to find people who look at resumes for a living.\n\nYou should have some recruiters and HR in your professional network, so reach out for advice. If you go with a recruitment agency, they should also provide this service to you.\n\nThere are even people out there offering to review your resume for something like $40. That’s a relatively small investment for something that will help you land a bigger paycheck.\n\nIn fact, after writing this article, I feel like I should start a service like that myself.  \n","source":"_posts/red-flags-on-your-resume.md","raw":"---\ntitle: The Red Flags on Your Resume\nseo_description: Lear about the red flags that recruiters look on your resume. Learn how to write a good resume or CV!\npromo_photo: /content/images/2020/resume-red-flags.jpg\ndate: 2020-09-28\nupdated: 2020-10-07\ntags:\n---\n\nThis week I left [a comment on the React subreddit](https://www.reddit.com/r/reactjs/comments/j013yg/i_applied_for_100_jobs_but_no_interview/g6n876s/?utm_source=reddit&utm_medium=web2x&context=3) that critiqued a resume that was posted. It got **_a lot of_** upvotes. \n\nApparently, [swyx](https://twitter.com/swyx) thinks it might be the most upvoted comment on the sub. Since there seems to be some interest in this, I thought I’d expand and turn it into a blog post.\n\nI’m going to give insight into the red flags that I notice on people’s resumes. I’m not just going to list them. I’ll try to dig deeper and explain the reasoning behind them. Also, we’ll figure out some “metrics” you should aspire to when writing your resume.\n\n## Signals vs Noise \n\nReading a resume is about identifying signals and skipping the “noise.” Let’s stick to positive things for now. These are my favorite signals:\n\n- Attention to detail.\n- Technical mastery.\n- Drive to lead or innovate.\n- Unique experiences and perspectives. \n- Ability to work _with_ a team.\n- [Focuses on outcomes, not output.](/2018/output-vs-outcome)\n\nFor every positive signal I can find, the likelihood of moving the candidate to the next phase increases.\n\n### Signals per Line as a Metric \n \nAs a candidate, it is your goal to help make this job easier for me by highlighting and focusing on the good stuff.\n\nTake the signals I outlined above and think about how many of them I can find per line on your resume.\n\n<div class=\"alert-box alert-box__info\">✨ You have about 40 lines of text on a single page. It should be more than enough space to include all signals.</div>\n\n### Resumes are Full of Noise\n\nI’ve seen hundreds of resumes and many of them are so full of noise. If you have under 5 years of experience, you can fit your resume to a single page. You might have to use a 2-column layout, but you can definitely do it. Even if you have 10+ years of experience, a single page is probably enough.\n\nWe expect engineers to write clean, concise, well-structured code. The same goes for resumes. If you can’t get the point across in just one page, then you need to get back to the drawing board.\n\nMore than 1 page is obviously fine. Nobody will fault you for it. But everything important should be on the first page.\n\n### Avoid BBoT\n\n_Big blocks of Text_ are a good way to make the recruiter lose focus and skip important details. Avoid long sentences and giant paragraphs. Use spacing and subtitles to break up blocks so they don’t clump together.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/resume-refactor.png\" alt=\"Comparison showing how better spacing and shorter sentences improve readability.\" /><figcaption>Compare the two. They provide the same information, but one is clearly easier to read.</figcaption></figure>\n\nI like to think of the example above as a type of _“resume refactor.”_ A writer could also tell us that the first block is a “draft” and that the second is the edited version.\n\nSpeaking of writers, there’s a free online tool called [Hemingway Editor](http://www.hemingwayapp.com/) that will help you figure out if your sentences are readable.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/hemingwayapp-example.png\" alt=\"Our first block of text analyzed with the Hemingway Editor.\" /><figcaption>The tagline is “a spell-checker for readability.”</figcaption></figure>\n\n\n### You Only Get 60 seconds\n\nIf there’s a flood of resumes then you probably only get 60 seconds of a recruiter’s time. If you’re lucky the company has employed enough people to give each resume a better chance. But that’s not a guarantee.\n\nBut why would you even hope for that and why would you need more? Strive to make a resume so good that 60 seconds is enough time for me to go _“Yeah, this person seems like a great candidate!”_\n\n### Don’t Overuse Links\n\nResumes seem to be full of links to various projects, open-source repositories, and social profiles. \n\nIf provided without context they just waste the 60 seconds you have. \n\nI already have another 50 resumes to look at, why should I waste my time and click this link? Sell me a story that makes me want to check it out! And make sure you’re including a **link that’s worth clicking.**\n\nIf you’re linking to a project, it should be obvious from the resume what it is and what you did there. I shouldn’t have to go through the link to actually figure that out.\n\nIf you’re linking to a repository, it should have a good README that explains things in detail and highlights the good stuff that I should look for.\n\nIf you’re linking to a profile, it should be up to date and professional.\n\nAll links should be working. A broken link is not a good look.\n\n## Avoid The First Bias\n\nAnother thing to consider is: _how long will it take the recruiter to notice the first positive signal?_\n\nIt seems like our brains form a first impression **[after just 100 milliseconds!](https://web.archive.org/web/20140715094146/http://psych.princeton.edu/psychology/research/todorov/pdf/Willis%26Todorov-PsychScience.pdf)**\n\nI’m not sure it’s possible to present a positive signal that fast, but it is definitely possible to present a negative one. For that reason, avoiding a red flag is critical. \n\nYou don’t want the first impression to be a red flag. Even if you got a lot of other things right, the unconscious bias against you has already set in.\n\n## Spelling, Grammar, and Styling\n\n100ms is enough for me to take in the layout of the resume and decide where I want to start reading from. It’s usually your name, followed by your short summary or the first section in the resume.\n\nBefore I can get any positive signals I might encounter negative ones in form of spelling, grammar, or styling errors. This is “first bias” territory.\n\nThese are not acceptable and they will weigh against you. If your resume is not in your native language, you do not get a free pass. You are judged the same as everyone else.\n\nThese errors indicate that you do not take things seriously. You lack attention to detail and professionalism. How can I expect you to communicate well with the team or our clients if you can’t communicate well on your own resume? \n\n_**On the other hand, a spotless resume also comes with the benefit of sending out some positive signals.**_\n\nIf it’s in your native language then it shows professionalism and attention to detail. If it’s in a language that’s not your native one, then it also showcases some bonus points for your expected communication level.\n\n### Learning to Write\n\nWriting is a craft. If you really want to up your game, then reading Ann Handley’s _[“Everybody Writes”](https://www.amazon.com/Everybody-Writes-Go-Creating-Ridiculously/dp/1118905555)_ is my recommendation. It’s a goldmine of advice that will help you avoid all communication-related red flags on your resume.\n\n### Fluff Sentences\n\nAnother red flag this odd type of “noise” that also comes with some impossible claims. My favorite line goes something like this:\n\n> I wrote fully-functional, high-quality clean code.\n\nI’ve seen many variations of this sentence. Let’s break it down:\n- _**“Fully-functional code?”**_ Really? So, you mean to tell me you did the bare minimum we all do, but you want to dress it up in a fancy suit and tie?\n  - Imagine for a moment if a restaurant advertised with the line _“we deliver fully-eatable food.”_  \n- _**\"High-quality code?\"**_ In what way? Any metrics? Did you decide it was “high quality” or someone else?\n- _**“Clean code?”**_ As in you followed all of Uncle Bob’s advice? Or is there some other definition? And you did this by yourself without anyone checking it?\n\nIt’s a bit risky to say these things because engineers [don’t really agree](/2020/boolean_trap_when_desgining_react_components_revisited/) on a definition for any of these terms. But there’s something else that’s great about this type of fluff. \n\nThe remarks I outlined above are not what make this a red flag. Maybe I’ll look at their project on GitHub and I’ll really go _“wow, that’s some awesome code!”_\n\nWhat makes this a red flag is that this type of candidate usually focuses only on their output, not [the outcomes](/2018/output-vs-outcome) they’ve achieved during their career.\n\nFor a junior position that’s fine. But for a senior engineer? Now that’s a big problem.\n\nAnother red flag is that this reads a lot like: _“I don’t really have that much experience, so I’m listing off words that will impress you.”_\n\nAgain, not a great look.\n\n## Focus on Your Work Experience\n\nIf you have work experience already, then this should be the meat of your resume. This is the focus. Tell us what you did and what value you delivered.\n\nYour work experience is not the place to list off a hundred technologies and libraries. It’s not there for you to write about “clean code” and “best practices.”\n\nIt’s there for you to show you have a proven track record of delivering value and problem-solving. Focus on:\n- What you shipped and some of the toughest challenges you solved.\n- The processes and practices you implemented, innovated, or improved.\n- The people you lead and/or mentored.\n\nIf you can back up these claims with some data points that you can defend and elaborate on further in the interview, then that’s a **big positive signal.**\n\nOne thing I used to mention on my own resume was how I completed a big refactor that modernized the codebase and increased velocity by ~80%. \n\nThis was an intense 2-month long task and I have years of data points to prove the increase in velocity. It’s a great example of the stuff people like to hear about. It’s also a great story to discuss at conferences and meetups.\n\n### Work Experience Red Flags\n\nI already mentioned that listing off a bunch of libraries in your work section is not the best idea. It’s a red flag that you think that that’s the important information you should be presenting.\n\nAnother one is the abuse of the words _“we”_ and _”team.”_ This might seem counter-intuitive as good teamwork is an important skill. One of my good signals at the start wars indeed: “Ability to work _with_ a team.”\n    \nBut this section is about you and your work experience. We know that you work in a team. Feel free to tell us a bit about that. Afterward, **focus on what you contributed.**\n\nThe red flag here is that if you always use the plural form, we are left without the knowledge of what you’re capable of on your own.\n\n<div class=\"alert-box alert-box__info\">✨ I acknowledge that this might be a cultural thing that mostly applies to the US and Western Europe. If you are applying to western companies, but come from a different cultural mindset, you should research and adapt to this.</div>\n\n## Skill Sections\n\nI don’t know who invented the resume templates that use graphs, dots, and stars to measure your skills, but they really pulled one over on us.\n\nWhat does “80% JavaScript” mean as a skill? Or a score of 4/5 on React. What measures are you using and who are you benchmarking against?\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/skills-section-horror.png\" alt=\"An example of the horrible skill chart.\" /><figcaption>This one is especially interesting to me because HTML and CSS are clumped together. That’s a red flag on its own.</figcaption></figure>\n\nAnother bad thing is that these graphics usually take at least half of the page. Yikes!\n\nThey provide no information and raise a red flag because I constantly ask myself: _“Why did they think this was a good idea?”_\n\nHere’s an [article from Resume Genius](https://resumegenius.com/blog/resume-help/dumbest-resume-trend) that really goes in-depth on why this is such a horrible idea.\n\n### It’s Not a `package.json` File \n\nIt’s amazing what people have listed on their resume. It really ends up looking like a `package.json` file.\n\nIt doesn’t matter if you’ve used MaterialUI or Bootstrap. We’re not going to give you a big plus even if we use them. And we’re not going to give you a minus if something we like is missing.\n\nThe only exception I see here is if you applying as a freelancer for short-term contracts. In that case, an employer will likely want to know what you know right now and what you’ll have to learn along the way.\n \n## Education\n\nDid you study computer science or a related field? Highlight this even if  you haven’t graduated. Usually you want this after your work experience and skills section.\n\nIf you have a masters, PHD, or an MBA, then make this section a bit more prominent. Include graduation dates or years of active study.\n\nIf you’re switching from a different industry, then it’s a complicated subject. Some argue against including it. Personally, I see nothing wrong with it.\n\nTo me, it shows dedication that you’ve completed something. I think it’s normal to switch careers and develop new interests. It’s a very “human thing” to do.\n\nBut in that case, it should not be placed on a prominent position on your resume. The info should probably be slim.\n\n### Diverse Education as a Strength\n\nHowever, if you finished a degree in agriculture and are applying to a company that makes software for farms… guess what? Bingo!\n\nNow that’s an opportunity to show that not only will you get the work done, but you’ll also have **the domain knowledge to lead.**\n\nIt doesn’t just have to be a degree. There might be an angle to make your non-tech education or past experiences shine if you know they will help your application. A motivational letter might be the better place for this.\n\n### Courses? Bootcamps? Certificates?\n\nI think it’s fine to include these as well. But only if they were something that actually took some time and effort to complete. A two-week course on Udemy is not much to go on and could be seen as a bit of a red flag.\n\nCourses that took months of continual work and learning are what you should focus on. You don’t really have to include too much info here. Keep the section small.\n\nThe same goes for certificates.\n \n## Unprofessional Photographs\n\nI personally don’t include my photo in my resume. It’s present on my LinkedIn and GitHub profile if anyone cares that much.\n\nRacism and sexism are definitely a concern for a lot of groups. I’m not qualified to give any advice on this.  \n\nIn some cultures (like Japan) it’s almost mandatory to include one, so the culture is definitely another aspect.\n\nRegardless, if you choose to include a photo, then it has to be a professional photograph. You should be placed against a neutral background with your face making up most of the picture.\n\nI’ve seen many unprofessional photographs and they instill a bad feeling. People crop out their portrait from events such as weddings, graduation day, and prom. Yikes!\n\n## (Un)Interesting Interests\n\nThe same person who invented the “graphical skills section” probably invented _the awkward interests section._ \n\nMy rule of thumb is to skip this section unless:\n- There’s something that ties into your work or is unique.\n- Your hobbies fit the company culture of the place you’re applying to.\n- You don’t have much work experience to focus on, but your hobbies showcase technical skills.\n\nAs an example of the first, let’s say you love baking. And you love it so much you built a custom Arduino rig that measures your sourdough starter’s activity.\n \nNow that’s definitely interesting and worth including in a small “interests” section. It also shows that you’re capable of being passionate about something and going the extra mile for it. As an employer, I’d love to see that and find a way to get you that invested in my company.\n\nAn example of the second: there’s a company in my hometown that organizes some sort of group cooking day as a company activity. If you’re a passionate home cook, you’d probably like to include this as a sign that you fit in with the culture.\n\nHowever, if you’re just going to list off _“the usual boring stuff,”_ then skip the section. It’s not a red flag, but the space could probably be used better.\n\nOh, and if you include “reading” as a hobby, be prepared to answer the question: _“What’s the last book you read?”_ I’d never do that to someone, but it seems a lot of recruiters and HR do this.\n\n## Over-designed\n\nSome of the resumes I’ve seen featured over-the-top design with all sorts of colors, icons, and graphics. You don’t need these to stand out. They just contribute to the noise factor.\n\nIf having a nice design is something you want to achieve as it’s part of the position, then I would suggest going with minimalism.\n\n> “Less is more.”\n\nFocus on nice typography, appealing colors, and consistent spacing.\n\n## Ask People to Review\n\nLike with code, you want as many eyeballs on your resume as possible. If you pick out people at random, you might get some bad advice, so it’s best to find people who look at resumes for a living.\n\nYou should have some recruiters and HR in your professional network, so reach out for advice. If you go with a recruitment agency, they should also provide this service to you.\n\nThere are even people out there offering to review your resume for something like $40. That’s a relatively small investment for something that will help you land a bigger paycheck.\n\nIn fact, after writing this article, I feel like I should start a service like that myself.  \n","slug":"red-flags-on-your-resume","published":1,"_id":"ckfkuuwdh0000vurime97l4mh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>This week I left <a href=\"https://www.reddit.com/r/reactjs/comments/j013yg/i_applied_for_100_jobs_but_no_interview/g6n876s/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3\" target=\"_blank\" rel=\"external\">a comment on the React subreddit</a> that critiqued a resume that was posted. It got <strong><em>a lot of</em></strong> upvotes. </p>\n<p>Apparently, <a href=\"https://twitter.com/swyx\" target=\"_blank\" rel=\"external\">swyx</a> thinks it might be the most upvoted comment on the sub. Since there seems to be some interest in this, I thought I’d expand and turn it into a blog post.</p>\n<p>I’m going to give insight into the red flags that I notice on people’s resumes. I’m not just going to list them. I’ll try to dig deeper and explain the reasoning behind them. Also, we’ll figure out some “metrics” you should aspire to when writing your resume.</p>\n<h2 id=\"Signals-vs-Noise\"><a href=\"#Signals-vs-Noise\" class=\"headerlink\" title=\"Signals vs Noise\"></a>Signals vs Noise</h2><p>Reading a resume is about identifying signals and skipping the “noise.” Let’s stick to positive things for now. These are my favorite signals:</p>\n<ul>\n<li>Attention to detail.</li>\n<li>Technical mastery.</li>\n<li>Drive to lead or innovate.</li>\n<li>Unique experiences and perspectives. </li>\n<li>Ability to work <em>with</em> a team.</li>\n<li><a href=\"/2018/output-vs-outcome\">Focuses on outcomes, not output.</a></li>\n</ul>\n<p>For every positive signal I can find, the likelihood of moving the candidate to the next phase increases.</p>\n<h3 id=\"Signals-per-Line-as-a-Metric\"><a href=\"#Signals-per-Line-as-a-Metric\" class=\"headerlink\" title=\"Signals per Line as a Metric\"></a>Signals per Line as a Metric</h3><p>As a candidate, it is your goal to help make this job easier for me by highlighting and focusing on the good stuff.</p>\n<p>Take the signals I outlined above and think about how many of them I can find per line on your resume.</p>\n<div class=\"alert-box alert-box__info\">✨ You have about 40 lines of text on a single page. It should be more than enough space to include all signals.</div>\n\n<h3 id=\"Resumes-are-Full-of-Noise\"><a href=\"#Resumes-are-Full-of-Noise\" class=\"headerlink\" title=\"Resumes are Full of Noise\"></a>Resumes are Full of Noise</h3><p>I’ve seen hundreds of resumes and many of them are so full of noise. If you have under 5 years of experience, you can fit your resume to a single page. You might have to use a 2-column layout, but you can definitely do it. Even if you have 10+ years of experience, a single page is probably enough.</p>\n<p>We expect engineers to write clean, concise, well-structured code. The same goes for resumes. If you can’t get the point across in just one page, then you need to get back to the drawing board.</p>\n<p>More than 1 page is obviously fine. Nobody will fault you for it. But everything important should be on the first page.</p>\n<h3 id=\"Avoid-BBoT\"><a href=\"#Avoid-BBoT\" class=\"headerlink\" title=\"Avoid BBoT\"></a>Avoid BBoT</h3><p><em>Big blocks of Text</em> are a good way to make the recruiter lose focus and skip important details. Avoid long sentences and giant paragraphs. Use spacing and subtitles to break up blocks so they don’t clump together.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/resume-refactor.png\" alt=\"Comparison showing how better spacing and shorter sentences improve readability.\"><figcaption>Compare the two. They provide the same information, but one is clearly easier to read.</figcaption></figure>\n\n<p>I like to think of the example above as a type of <em>“resume refactor.”</em> A writer could also tell us that the first block is a “draft” and that the second is the edited version.</p>\n<p>Speaking of writers, there’s a free online tool called <a href=\"http://www.hemingwayapp.com/\" target=\"_blank\" rel=\"external\">Hemingway Editor</a> that will help you figure out if your sentences are readable.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/hemingwayapp-example.png\" alt=\"Our first block of text analyzed with the Hemingway Editor.\"><figcaption>The tagline is “a spell-checker for readability.”</figcaption></figure>\n\n\n<h3 id=\"You-Only-Get-60-seconds\"><a href=\"#You-Only-Get-60-seconds\" class=\"headerlink\" title=\"You Only Get 60 seconds\"></a>You Only Get 60 seconds</h3><p>If there’s a flood of resumes then you probably only get 60 seconds of a recruiter’s time. If you’re lucky the company has employed enough people to give each resume a better chance. But that’s not a guarantee.</p>\n<p>But why would you even hope for that and why would you need more? Strive to make a resume so good that 60 seconds is enough time for me to go <em>“Yeah, this person seems like a great candidate!”</em></p>\n<h3 id=\"Don’t-Overuse-Links\"><a href=\"#Don’t-Overuse-Links\" class=\"headerlink\" title=\"Don’t Overuse Links\"></a>Don’t Overuse Links</h3><p>Resumes seem to be full of links to various projects, open-source repositories, and social profiles. </p>\n<p>If provided without context they just waste the 60 seconds you have. </p>\n<p>I already have another 50 resumes to look at, why should I waste my time and click this link? Sell me a story that makes me want to check it out! And make sure you’re including a <strong>link that’s worth clicking.</strong></p>\n<p>If you’re linking to a project, it should be obvious from the resume what it is and what you did there. I shouldn’t have to go through the link to actually figure that out.</p>\n<p>If you’re linking to a repository, it should have a good README that explains things in detail and highlights the good stuff that I should look for.</p>\n<p>If you’re linking to a profile, it should be up to date and professional.</p>\n<p>All links should be working. A broken link is not a good look.</p>\n<h2 id=\"Avoid-The-First-Bias\"><a href=\"#Avoid-The-First-Bias\" class=\"headerlink\" title=\"Avoid The First Bias\"></a>Avoid The First Bias</h2><p>Another thing to consider is: <em>how long will it take the recruiter to notice the first positive signal?</em></p>\n<p>It seems like our brains form a first impression <strong><a href=\"https://web.archive.org/web/20140715094146/http://psych.princeton.edu/psychology/research/todorov/pdf/Willis%26Todorov-PsychScience.pdf\" target=\"_blank\" rel=\"external\">after just 100 milliseconds!</a></strong></p>\n<p>I’m not sure it’s possible to present a positive signal that fast, but it is definitely possible to present a negative one. For that reason, avoiding a red flag is critical. </p>\n<p>You don’t want the first impression to be a red flag. Even if you got a lot of other things right, the unconscious bias against you has already set in.</p>\n<h2 id=\"Spelling-Grammar-and-Styling\"><a href=\"#Spelling-Grammar-and-Styling\" class=\"headerlink\" title=\"Spelling, Grammar, and Styling\"></a>Spelling, Grammar, and Styling</h2><p>100ms is enough for me to take in the layout of the resume and decide where I want to start reading from. It’s usually your name, followed by your short summary or the first section in the resume.</p>\n<p>Before I can get any positive signals I might encounter negative ones in form of spelling, grammar, or styling errors. This is “first bias” territory.</p>\n<p>These are not acceptable and they will weigh against you. If your resume is not in your native language, you do not get a free pass. You are judged the same as everyone else.</p>\n<p>These errors indicate that you do not take things seriously. You lack attention to detail and professionalism. How can I expect you to communicate well with the team or our clients if you can’t communicate well on your own resume? </p>\n<p><em><strong>On the other hand, a spotless resume also comes with the benefit of sending out some positive signals.</strong></em></p>\n<p>If it’s in your native language then it shows professionalism and attention to detail. If it’s in a language that’s not your native one, then it also showcases some bonus points for your expected communication level.</p>\n<h3 id=\"Learning-to-Write\"><a href=\"#Learning-to-Write\" class=\"headerlink\" title=\"Learning to Write\"></a>Learning to Write</h3><p>Writing is a craft. If you really want to up your game, then reading Ann Handley’s <em><a href=\"https://www.amazon.com/Everybody-Writes-Go-Creating-Ridiculously/dp/1118905555\" target=\"_blank\" rel=\"external\">“Everybody Writes”</a></em> is my recommendation. It’s a goldmine of advice that will help you avoid all communication-related red flags on your resume.</p>\n<h3 id=\"Fluff-Sentences\"><a href=\"#Fluff-Sentences\" class=\"headerlink\" title=\"Fluff Sentences\"></a>Fluff Sentences</h3><p>Another red flag this odd type of “noise” that also comes with some impossible claims. My favorite line goes something like this:</p>\n<blockquote>\n<p>I wrote fully-functional, high-quality clean code.</p>\n</blockquote>\n<p>I’ve seen many variations of this sentence. Let’s break it down:</p>\n<ul>\n<li><em><strong>“Fully-functional code?”</strong></em> Really? So, you mean to tell me you did the bare minimum we all do, but you want to dress it up in a fancy suit and tie?<ul>\n<li>Imagine for a moment if a restaurant advertised with the line <em>“we deliver fully-eatable food.”</em>  </li>\n</ul>\n</li>\n<li><em><strong>“High-quality code?”</strong></em> In what way? Any metrics? Did you decide it was “high quality” or someone else?</li>\n<li><em><strong>“Clean code?”</strong></em> As in you followed all of Uncle Bob’s advice? Or is there some other definition? And you did this by yourself without anyone checking it?</li>\n</ul>\n<p>It’s a bit risky to say these things because engineers <a href=\"/2020/boolean_trap_when_desgining_react_components_revisited/\">don’t really agree</a> on a definition for any of these terms. But there’s something else that’s great about this type of fluff. </p>\n<p>The remarks I outlined above are not what make this a red flag. Maybe I’ll look at their project on GitHub and I’ll really go <em>“wow, that’s some awesome code!”</em></p>\n<p>What makes this a red flag is that this type of candidate usually focuses only on their output, not <a href=\"/2018/output-vs-outcome\">the outcomes</a> they’ve achieved during their career.</p>\n<p>For a junior position that’s fine. But for a senior engineer? Now that’s a big problem.</p>\n<p>Another red flag is that this reads a lot like: <em>“I don’t really have that much experience, so I’m listing off words that will impress you.”</em></p>\n<p>Again, not a great look.</p>\n<h2 id=\"Focus-on-Your-Work-Experience\"><a href=\"#Focus-on-Your-Work-Experience\" class=\"headerlink\" title=\"Focus on Your Work Experience\"></a>Focus on Your Work Experience</h2><p>If you have work experience already, then this should be the meat of your resume. This is the focus. Tell us what you did and what value you delivered.</p>\n<p>Your work experience is not the place to list off a hundred technologies and libraries. It’s not there for you to write about “clean code” and “best practices.”</p>\n<p>It’s there for you to show you have a proven track record of delivering value and problem-solving. Focus on:</p>\n<ul>\n<li>What you shipped and some of the toughest challenges you solved.</li>\n<li>The processes and practices you implemented, innovated, or improved.</li>\n<li>The people you lead and/or mentored.</li>\n</ul>\n<p>If you can back up these claims with some data points that you can defend and elaborate on further in the interview, then that’s a <strong>big positive signal.</strong></p>\n<p>One thing I used to mention on my own resume was how I completed a big refactor that modernized the codebase and increased velocity by ~80%. </p>\n<p>This was an intense 2-month long task and I have years of data points to prove the increase in velocity. It’s a great example of the stuff people like to hear about. It’s also a great story to discuss at conferences and meetups.</p>\n<h3 id=\"Work-Experience-Red-Flags\"><a href=\"#Work-Experience-Red-Flags\" class=\"headerlink\" title=\"Work Experience Red Flags\"></a>Work Experience Red Flags</h3><p>I already mentioned that listing off a bunch of libraries in your work section is not the best idea. It’s a red flag that you think that that’s the important information you should be presenting.</p>\n<p>Another one is the abuse of the words <em>“we”</em> and <em>”team.”</em> This might seem counter-intuitive as good teamwork is an important skill. One of my good signals at the start wars indeed: “Ability to work <em>with</em> a team.”</p>\n<p>But this section is about you and your work experience. We know that you work in a team. Feel free to tell us a bit about that. Afterward, <strong>focus on what you contributed.</strong></p>\n<p>The red flag here is that if you always use the plural form, we are left without the knowledge of what you’re capable of on your own.</p>\n<div class=\"alert-box alert-box__info\">✨ I acknowledge that this might be a cultural thing that mostly applies to the US and Western Europe. If you are applying to western companies, but come from a different cultural mindset, you should research and adapt to this.</div>\n\n<h2 id=\"Skill-Sections\"><a href=\"#Skill-Sections\" class=\"headerlink\" title=\"Skill Sections\"></a>Skill Sections</h2><p>I don’t know who invented the resume templates that use graphs, dots, and stars to measure your skills, but they really pulled one over on us.</p>\n<p>What does “80% JavaScript” mean as a skill? Or a score of 4/5 on React. What measures are you using and who are you benchmarking against?</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/skills-section-horror.png\" alt=\"An example of the horrible skill chart.\"><figcaption>This one is especially interesting to me because HTML and CSS are clumped together. That’s a red flag on its own.</figcaption></figure>\n\n<p>Another bad thing is that these graphics usually take at least half of the page. Yikes!</p>\n<p>They provide no information and raise a red flag because I constantly ask myself: <em>“Why did they think this was a good idea?”</em></p>\n<p>Here’s an <a href=\"https://resumegenius.com/blog/resume-help/dumbest-resume-trend\" target=\"_blank\" rel=\"external\">article from Resume Genius</a> that really goes in-depth on why this is such a horrible idea.</p>\n<h3 id=\"It’s-Not-a-package-json-File\"><a href=\"#It’s-Not-a-package-json-File\" class=\"headerlink\" title=\"It’s Not a package.json File\"></a>It’s Not a <code>package.json</code> File</h3><p>It’s amazing what people have listed on their resume. It really ends up looking like a <code>package.json</code> file.</p>\n<p>It doesn’t matter if you’ve used MaterialUI or Bootstrap. We’re not going to give you a big plus even if we use them. And we’re not going to give you a minus if something we like is missing.</p>\n<p>The only exception I see here is if you applying as a freelancer for short-term contracts. In that case, an employer will likely want to know what you know right now and what you’ll have to learn along the way.</p>\n<h2 id=\"Education\"><a href=\"#Education\" class=\"headerlink\" title=\"Education\"></a>Education</h2><p>Did you study computer science or a related field? Highlight this even if  you haven’t graduated. Usually you want this after your work experience and skills section.</p>\n<p>If you have a masters, PHD, or an MBA, then make this section a bit more prominent. Include graduation dates or years of active study.</p>\n<p>If you’re switching from a different industry, then it’s a complicated subject. Some argue against including it. Personally, I see nothing wrong with it.</p>\n<p>To me, it shows dedication that you’ve completed something. I think it’s normal to switch careers and develop new interests. It’s a very “human thing” to do.</p>\n<p>But in that case, it should not be placed on a prominent position on your resume. The info should probably be slim.</p>\n<h3 id=\"Diverse-Education-as-a-Strength\"><a href=\"#Diverse-Education-as-a-Strength\" class=\"headerlink\" title=\"Diverse Education as a Strength\"></a>Diverse Education as a Strength</h3><p>However, if you finished a degree in agriculture and are applying to a company that makes software for farms… guess what? Bingo!</p>\n<p>Now that’s an opportunity to show that not only will you get the work done, but you’ll also have <strong>the domain knowledge to lead.</strong></p>\n<p>It doesn’t just have to be a degree. There might be an angle to make your non-tech education or past experiences shine if you know they will help your application. A motivational letter might be the better place for this.</p>\n<h3 id=\"Courses-Bootcamps-Certificates\"><a href=\"#Courses-Bootcamps-Certificates\" class=\"headerlink\" title=\"Courses? Bootcamps? Certificates?\"></a>Courses? Bootcamps? Certificates?</h3><p>I think it’s fine to include these as well. But only if they were something that actually took some time and effort to complete. A two-week course on Udemy is not much to go on and could be seen as a bit of a red flag.</p>\n<p>Courses that took months of continual work and learning are what you should focus on. You don’t really have to include too much info here. Keep the section small.</p>\n<p>The same goes for certificates.</p>\n<h2 id=\"Unprofessional-Photographs\"><a href=\"#Unprofessional-Photographs\" class=\"headerlink\" title=\"Unprofessional Photographs\"></a>Unprofessional Photographs</h2><p>I personally don’t include my photo in my resume. It’s present on my LinkedIn and GitHub profile if anyone cares that much.</p>\n<p>Racism and sexism are definitely a concern for a lot of groups. I’m not qualified to give any advice on this.  </p>\n<p>In some cultures (like Japan) it’s almost mandatory to include one, so the culture is definitely another aspect.</p>\n<p>Regardless, if you choose to include a photo, then it has to be a professional photograph. You should be placed against a neutral background with your face making up most of the picture.</p>\n<p>I’ve seen many unprofessional photographs and they instill a bad feeling. People crop out their portrait from events such as weddings, graduation day, and prom. Yikes!</p>\n<h2 id=\"Un-Interesting-Interests\"><a href=\"#Un-Interesting-Interests\" class=\"headerlink\" title=\"(Un)Interesting Interests\"></a>(Un)Interesting Interests</h2><p>The same person who invented the “graphical skills section” probably invented <em>the awkward interests section.</em> </p>\n<p>My rule of thumb is to skip this section unless:</p>\n<ul>\n<li>There’s something that ties into your work or is unique.</li>\n<li>Your hobbies fit the company culture of the place you’re applying to.</li>\n<li>You don’t have much work experience to focus on, but your hobbies showcase technical skills.</li>\n</ul>\n<p>As an example of the first, let’s say you love baking. And you love it so much you built a custom Arduino rig that measures your sourdough starter’s activity.</p>\n<p>Now that’s definitely interesting and worth including in a small “interests” section. It also shows that you’re capable of being passionate about something and going the extra mile for it. As an employer, I’d love to see that and find a way to get you that invested in my company.</p>\n<p>An example of the second: there’s a company in my hometown that organizes some sort of group cooking day as a company activity. If you’re a passionate home cook, you’d probably like to include this as a sign that you fit in with the culture.</p>\n<p>However, if you’re just going to list off <em>“the usual boring stuff,”</em> then skip the section. It’s not a red flag, but the space could probably be used better.</p>\n<p>Oh, and if you include “reading” as a hobby, be prepared to answer the question: <em>“What’s the last book you read?”</em> I’d never do that to someone, but it seems a lot of recruiters and HR do this.</p>\n<h2 id=\"Over-designed\"><a href=\"#Over-designed\" class=\"headerlink\" title=\"Over-designed\"></a>Over-designed</h2><p>Some of the resumes I’ve seen featured over-the-top design with all sorts of colors, icons, and graphics. You don’t need these to stand out. They just contribute to the noise factor.</p>\n<p>If having a nice design is something you want to achieve as it’s part of the position, then I would suggest going with minimalism.</p>\n<blockquote>\n<p>“Less is more.”</p>\n</blockquote>\n<p>Focus on nice typography, appealing colors, and consistent spacing.</p>\n<h2 id=\"Ask-People-to-Review\"><a href=\"#Ask-People-to-Review\" class=\"headerlink\" title=\"Ask People to Review\"></a>Ask People to Review</h2><p>Like with code, you want as many eyeballs on your resume as possible. If you pick out people at random, you might get some bad advice, so it’s best to find people who look at resumes for a living.</p>\n<p>You should have some recruiters and HR in your professional network, so reach out for advice. If you go with a recruitment agency, they should also provide this service to you.</p>\n<p>There are even people out there offering to review your resume for something like $40. That’s a relatively small investment for something that will help you land a bigger paycheck.</p>\n<p>In fact, after writing this article, I feel like I should start a service like that myself.  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>This week I left <a href=\"https://www.reddit.com/r/reactjs/comments/j013yg/i_applied_for_100_jobs_but_no_interview/g6n876s/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3\" target=\"_blank\" rel=\"external\">a comment on the React subreddit</a> that critiqued a resume that was posted. It got <strong><em>a lot of</em></strong> upvotes. </p>\n<p>Apparently, <a href=\"https://twitter.com/swyx\" target=\"_blank\" rel=\"external\">swyx</a> thinks it might be the most upvoted comment on the sub. Since there seems to be some interest in this, I thought I’d expand and turn it into a blog post.</p>\n<p>I’m going to give insight into the red flags that I notice on people’s resumes. I’m not just going to list them. I’ll try to dig deeper and explain the reasoning behind them. Also, we’ll figure out some “metrics” you should aspire to when writing your resume.</p>\n<h2 id=\"Signals-vs-Noise\"><a href=\"#Signals-vs-Noise\" class=\"headerlink\" title=\"Signals vs Noise\"></a>Signals vs Noise</h2><p>Reading a resume is about identifying signals and skipping the “noise.” Let’s stick to positive things for now. These are my favorite signals:</p>\n<ul>\n<li>Attention to detail.</li>\n<li>Technical mastery.</li>\n<li>Drive to lead or innovate.</li>\n<li>Unique experiences and perspectives. </li>\n<li>Ability to work <em>with</em> a team.</li>\n<li><a href=\"/2018/output-vs-outcome\">Focuses on outcomes, not output.</a></li>\n</ul>\n<p>For every positive signal I can find, the likelihood of moving the candidate to the next phase increases.</p>\n<h3 id=\"Signals-per-Line-as-a-Metric\"><a href=\"#Signals-per-Line-as-a-Metric\" class=\"headerlink\" title=\"Signals per Line as a Metric\"></a>Signals per Line as a Metric</h3><p>As a candidate, it is your goal to help make this job easier for me by highlighting and focusing on the good stuff.</p>\n<p>Take the signals I outlined above and think about how many of them I can find per line on your resume.</p>\n<div class=\"alert-box alert-box__info\">✨ You have about 40 lines of text on a single page. It should be more than enough space to include all signals.</div>\n\n<h3 id=\"Resumes-are-Full-of-Noise\"><a href=\"#Resumes-are-Full-of-Noise\" class=\"headerlink\" title=\"Resumes are Full of Noise\"></a>Resumes are Full of Noise</h3><p>I’ve seen hundreds of resumes and many of them are so full of noise. If you have under 5 years of experience, you can fit your resume to a single page. You might have to use a 2-column layout, but you can definitely do it. Even if you have 10+ years of experience, a single page is probably enough.</p>\n<p>We expect engineers to write clean, concise, well-structured code. The same goes for resumes. If you can’t get the point across in just one page, then you need to get back to the drawing board.</p>\n<p>More than 1 page is obviously fine. Nobody will fault you for it. But everything important should be on the first page.</p>\n<h3 id=\"Avoid-BBoT\"><a href=\"#Avoid-BBoT\" class=\"headerlink\" title=\"Avoid BBoT\"></a>Avoid BBoT</h3><p><em>Big blocks of Text</em> are a good way to make the recruiter lose focus and skip important details. Avoid long sentences and giant paragraphs. Use spacing and subtitles to break up blocks so they don’t clump together.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/resume-refactor.png\" alt=\"Comparison showing how better spacing and shorter sentences improve readability.\"><figcaption>Compare the two. They provide the same information, but one is clearly easier to read.</figcaption></figure>\n\n<p>I like to think of the example above as a type of <em>“resume refactor.”</em> A writer could also tell us that the first block is a “draft” and that the second is the edited version.</p>\n<p>Speaking of writers, there’s a free online tool called <a href=\"http://www.hemingwayapp.com/\" target=\"_blank\" rel=\"external\">Hemingway Editor</a> that will help you figure out if your sentences are readable.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/hemingwayapp-example.png\" alt=\"Our first block of text analyzed with the Hemingway Editor.\"><figcaption>The tagline is “a spell-checker for readability.”</figcaption></figure>\n\n\n<h3 id=\"You-Only-Get-60-seconds\"><a href=\"#You-Only-Get-60-seconds\" class=\"headerlink\" title=\"You Only Get 60 seconds\"></a>You Only Get 60 seconds</h3><p>If there’s a flood of resumes then you probably only get 60 seconds of a recruiter’s time. If you’re lucky the company has employed enough people to give each resume a better chance. But that’s not a guarantee.</p>\n<p>But why would you even hope for that and why would you need more? Strive to make a resume so good that 60 seconds is enough time for me to go <em>“Yeah, this person seems like a great candidate!”</em></p>\n<h3 id=\"Don’t-Overuse-Links\"><a href=\"#Don’t-Overuse-Links\" class=\"headerlink\" title=\"Don’t Overuse Links\"></a>Don’t Overuse Links</h3><p>Resumes seem to be full of links to various projects, open-source repositories, and social profiles. </p>\n<p>If provided without context they just waste the 60 seconds you have. </p>\n<p>I already have another 50 resumes to look at, why should I waste my time and click this link? Sell me a story that makes me want to check it out! And make sure you’re including a <strong>link that’s worth clicking.</strong></p>\n<p>If you’re linking to a project, it should be obvious from the resume what it is and what you did there. I shouldn’t have to go through the link to actually figure that out.</p>\n<p>If you’re linking to a repository, it should have a good README that explains things in detail and highlights the good stuff that I should look for.</p>\n<p>If you’re linking to a profile, it should be up to date and professional.</p>\n<p>All links should be working. A broken link is not a good look.</p>\n<h2 id=\"Avoid-The-First-Bias\"><a href=\"#Avoid-The-First-Bias\" class=\"headerlink\" title=\"Avoid The First Bias\"></a>Avoid The First Bias</h2><p>Another thing to consider is: <em>how long will it take the recruiter to notice the first positive signal?</em></p>\n<p>It seems like our brains form a first impression <strong><a href=\"https://web.archive.org/web/20140715094146/http://psych.princeton.edu/psychology/research/todorov/pdf/Willis%26Todorov-PsychScience.pdf\" target=\"_blank\" rel=\"external\">after just 100 milliseconds!</a></strong></p>\n<p>I’m not sure it’s possible to present a positive signal that fast, but it is definitely possible to present a negative one. For that reason, avoiding a red flag is critical. </p>\n<p>You don’t want the first impression to be a red flag. Even if you got a lot of other things right, the unconscious bias against you has already set in.</p>\n<h2 id=\"Spelling-Grammar-and-Styling\"><a href=\"#Spelling-Grammar-and-Styling\" class=\"headerlink\" title=\"Spelling, Grammar, and Styling\"></a>Spelling, Grammar, and Styling</h2><p>100ms is enough for me to take in the layout of the resume and decide where I want to start reading from. It’s usually your name, followed by your short summary or the first section in the resume.</p>\n<p>Before I can get any positive signals I might encounter negative ones in form of spelling, grammar, or styling errors. This is “first bias” territory.</p>\n<p>These are not acceptable and they will weigh against you. If your resume is not in your native language, you do not get a free pass. You are judged the same as everyone else.</p>\n<p>These errors indicate that you do not take things seriously. You lack attention to detail and professionalism. How can I expect you to communicate well with the team or our clients if you can’t communicate well on your own resume? </p>\n<p><em><strong>On the other hand, a spotless resume also comes with the benefit of sending out some positive signals.</strong></em></p>\n<p>If it’s in your native language then it shows professionalism and attention to detail. If it’s in a language that’s not your native one, then it also showcases some bonus points for your expected communication level.</p>\n<h3 id=\"Learning-to-Write\"><a href=\"#Learning-to-Write\" class=\"headerlink\" title=\"Learning to Write\"></a>Learning to Write</h3><p>Writing is a craft. If you really want to up your game, then reading Ann Handley’s <em><a href=\"https://www.amazon.com/Everybody-Writes-Go-Creating-Ridiculously/dp/1118905555\" target=\"_blank\" rel=\"external\">“Everybody Writes”</a></em> is my recommendation. It’s a goldmine of advice that will help you avoid all communication-related red flags on your resume.</p>\n<h3 id=\"Fluff-Sentences\"><a href=\"#Fluff-Sentences\" class=\"headerlink\" title=\"Fluff Sentences\"></a>Fluff Sentences</h3><p>Another red flag this odd type of “noise” that also comes with some impossible claims. My favorite line goes something like this:</p>\n<blockquote>\n<p>I wrote fully-functional, high-quality clean code.</p>\n</blockquote>\n<p>I’ve seen many variations of this sentence. Let’s break it down:</p>\n<ul>\n<li><em><strong>“Fully-functional code?”</strong></em> Really? So, you mean to tell me you did the bare minimum we all do, but you want to dress it up in a fancy suit and tie?<ul>\n<li>Imagine for a moment if a restaurant advertised with the line <em>“we deliver fully-eatable food.”</em>  </li>\n</ul>\n</li>\n<li><em><strong>“High-quality code?”</strong></em> In what way? Any metrics? Did you decide it was “high quality” or someone else?</li>\n<li><em><strong>“Clean code?”</strong></em> As in you followed all of Uncle Bob’s advice? Or is there some other definition? And you did this by yourself without anyone checking it?</li>\n</ul>\n<p>It’s a bit risky to say these things because engineers <a href=\"/2020/boolean_trap_when_desgining_react_components_revisited/\">don’t really agree</a> on a definition for any of these terms. But there’s something else that’s great about this type of fluff. </p>\n<p>The remarks I outlined above are not what make this a red flag. Maybe I’ll look at their project on GitHub and I’ll really go <em>“wow, that’s some awesome code!”</em></p>\n<p>What makes this a red flag is that this type of candidate usually focuses only on their output, not <a href=\"/2018/output-vs-outcome\">the outcomes</a> they’ve achieved during their career.</p>\n<p>For a junior position that’s fine. But for a senior engineer? Now that’s a big problem.</p>\n<p>Another red flag is that this reads a lot like: <em>“I don’t really have that much experience, so I’m listing off words that will impress you.”</em></p>\n<p>Again, not a great look.</p>\n<h2 id=\"Focus-on-Your-Work-Experience\"><a href=\"#Focus-on-Your-Work-Experience\" class=\"headerlink\" title=\"Focus on Your Work Experience\"></a>Focus on Your Work Experience</h2><p>If you have work experience already, then this should be the meat of your resume. This is the focus. Tell us what you did and what value you delivered.</p>\n<p>Your work experience is not the place to list off a hundred technologies and libraries. It’s not there for you to write about “clean code” and “best practices.”</p>\n<p>It’s there for you to show you have a proven track record of delivering value and problem-solving. Focus on:</p>\n<ul>\n<li>What you shipped and some of the toughest challenges you solved.</li>\n<li>The processes and practices you implemented, innovated, or improved.</li>\n<li>The people you lead and/or mentored.</li>\n</ul>\n<p>If you can back up these claims with some data points that you can defend and elaborate on further in the interview, then that’s a <strong>big positive signal.</strong></p>\n<p>One thing I used to mention on my own resume was how I completed a big refactor that modernized the codebase and increased velocity by ~80%. </p>\n<p>This was an intense 2-month long task and I have years of data points to prove the increase in velocity. It’s a great example of the stuff people like to hear about. It’s also a great story to discuss at conferences and meetups.</p>\n<h3 id=\"Work-Experience-Red-Flags\"><a href=\"#Work-Experience-Red-Flags\" class=\"headerlink\" title=\"Work Experience Red Flags\"></a>Work Experience Red Flags</h3><p>I already mentioned that listing off a bunch of libraries in your work section is not the best idea. It’s a red flag that you think that that’s the important information you should be presenting.</p>\n<p>Another one is the abuse of the words <em>“we”</em> and <em>”team.”</em> This might seem counter-intuitive as good teamwork is an important skill. One of my good signals at the start wars indeed: “Ability to work <em>with</em> a team.”</p>\n<p>But this section is about you and your work experience. We know that you work in a team. Feel free to tell us a bit about that. Afterward, <strong>focus on what you contributed.</strong></p>\n<p>The red flag here is that if you always use the plural form, we are left without the knowledge of what you’re capable of on your own.</p>\n<div class=\"alert-box alert-box__info\">✨ I acknowledge that this might be a cultural thing that mostly applies to the US and Western Europe. If you are applying to western companies, but come from a different cultural mindset, you should research and adapt to this.</div>\n\n<h2 id=\"Skill-Sections\"><a href=\"#Skill-Sections\" class=\"headerlink\" title=\"Skill Sections\"></a>Skill Sections</h2><p>I don’t know who invented the resume templates that use graphs, dots, and stars to measure your skills, but they really pulled one over on us.</p>\n<p>What does “80% JavaScript” mean as a skill? Or a score of 4/5 on React. What measures are you using and who are you benchmarking against?</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/skills-section-horror.png\" alt=\"An example of the horrible skill chart.\"><figcaption>This one is especially interesting to me because HTML and CSS are clumped together. That’s a red flag on its own.</figcaption></figure>\n\n<p>Another bad thing is that these graphics usually take at least half of the page. Yikes!</p>\n<p>They provide no information and raise a red flag because I constantly ask myself: <em>“Why did they think this was a good idea?”</em></p>\n<p>Here’s an <a href=\"https://resumegenius.com/blog/resume-help/dumbest-resume-trend\" target=\"_blank\" rel=\"external\">article from Resume Genius</a> that really goes in-depth on why this is such a horrible idea.</p>\n<h3 id=\"It’s-Not-a-package-json-File\"><a href=\"#It’s-Not-a-package-json-File\" class=\"headerlink\" title=\"It’s Not a package.json File\"></a>It’s Not a <code>package.json</code> File</h3><p>It’s amazing what people have listed on their resume. It really ends up looking like a <code>package.json</code> file.</p>\n<p>It doesn’t matter if you’ve used MaterialUI or Bootstrap. We’re not going to give you a big plus even if we use them. And we’re not going to give you a minus if something we like is missing.</p>\n<p>The only exception I see here is if you applying as a freelancer for short-term contracts. In that case, an employer will likely want to know what you know right now and what you’ll have to learn along the way.</p>\n<h2 id=\"Education\"><a href=\"#Education\" class=\"headerlink\" title=\"Education\"></a>Education</h2><p>Did you study computer science or a related field? Highlight this even if  you haven’t graduated. Usually you want this after your work experience and skills section.</p>\n<p>If you have a masters, PHD, or an MBA, then make this section a bit more prominent. Include graduation dates or years of active study.</p>\n<p>If you’re switching from a different industry, then it’s a complicated subject. Some argue against including it. Personally, I see nothing wrong with it.</p>\n<p>To me, it shows dedication that you’ve completed something. I think it’s normal to switch careers and develop new interests. It’s a very “human thing” to do.</p>\n<p>But in that case, it should not be placed on a prominent position on your resume. The info should probably be slim.</p>\n<h3 id=\"Diverse-Education-as-a-Strength\"><a href=\"#Diverse-Education-as-a-Strength\" class=\"headerlink\" title=\"Diverse Education as a Strength\"></a>Diverse Education as a Strength</h3><p>However, if you finished a degree in agriculture and are applying to a company that makes software for farms… guess what? Bingo!</p>\n<p>Now that’s an opportunity to show that not only will you get the work done, but you’ll also have <strong>the domain knowledge to lead.</strong></p>\n<p>It doesn’t just have to be a degree. There might be an angle to make your non-tech education or past experiences shine if you know they will help your application. A motivational letter might be the better place for this.</p>\n<h3 id=\"Courses-Bootcamps-Certificates\"><a href=\"#Courses-Bootcamps-Certificates\" class=\"headerlink\" title=\"Courses? Bootcamps? Certificates?\"></a>Courses? Bootcamps? Certificates?</h3><p>I think it’s fine to include these as well. But only if they were something that actually took some time and effort to complete. A two-week course on Udemy is not much to go on and could be seen as a bit of a red flag.</p>\n<p>Courses that took months of continual work and learning are what you should focus on. You don’t really have to include too much info here. Keep the section small.</p>\n<p>The same goes for certificates.</p>\n<h2 id=\"Unprofessional-Photographs\"><a href=\"#Unprofessional-Photographs\" class=\"headerlink\" title=\"Unprofessional Photographs\"></a>Unprofessional Photographs</h2><p>I personally don’t include my photo in my resume. It’s present on my LinkedIn and GitHub profile if anyone cares that much.</p>\n<p>Racism and sexism are definitely a concern for a lot of groups. I’m not qualified to give any advice on this.  </p>\n<p>In some cultures (like Japan) it’s almost mandatory to include one, so the culture is definitely another aspect.</p>\n<p>Regardless, if you choose to include a photo, then it has to be a professional photograph. You should be placed against a neutral background with your face making up most of the picture.</p>\n<p>I’ve seen many unprofessional photographs and they instill a bad feeling. People crop out their portrait from events such as weddings, graduation day, and prom. Yikes!</p>\n<h2 id=\"Un-Interesting-Interests\"><a href=\"#Un-Interesting-Interests\" class=\"headerlink\" title=\"(Un)Interesting Interests\"></a>(Un)Interesting Interests</h2><p>The same person who invented the “graphical skills section” probably invented <em>the awkward interests section.</em> </p>\n<p>My rule of thumb is to skip this section unless:</p>\n<ul>\n<li>There’s something that ties into your work or is unique.</li>\n<li>Your hobbies fit the company culture of the place you’re applying to.</li>\n<li>You don’t have much work experience to focus on, but your hobbies showcase technical skills.</li>\n</ul>\n<p>As an example of the first, let’s say you love baking. And you love it so much you built a custom Arduino rig that measures your sourdough starter’s activity.</p>\n<p>Now that’s definitely interesting and worth including in a small “interests” section. It also shows that you’re capable of being passionate about something and going the extra mile for it. As an employer, I’d love to see that and find a way to get you that invested in my company.</p>\n<p>An example of the second: there’s a company in my hometown that organizes some sort of group cooking day as a company activity. If you’re a passionate home cook, you’d probably like to include this as a sign that you fit in with the culture.</p>\n<p>However, if you’re just going to list off <em>“the usual boring stuff,”</em> then skip the section. It’s not a red flag, but the space could probably be used better.</p>\n<p>Oh, and if you include “reading” as a hobby, be prepared to answer the question: <em>“What’s the last book you read?”</em> I’d never do that to someone, but it seems a lot of recruiters and HR do this.</p>\n<h2 id=\"Over-designed\"><a href=\"#Over-designed\" class=\"headerlink\" title=\"Over-designed\"></a>Over-designed</h2><p>Some of the resumes I’ve seen featured over-the-top design with all sorts of colors, icons, and graphics. You don’t need these to stand out. They just contribute to the noise factor.</p>\n<p>If having a nice design is something you want to achieve as it’s part of the position, then I would suggest going with minimalism.</p>\n<blockquote>\n<p>“Less is more.”</p>\n</blockquote>\n<p>Focus on nice typography, appealing colors, and consistent spacing.</p>\n<h2 id=\"Ask-People-to-Review\"><a href=\"#Ask-People-to-Review\" class=\"headerlink\" title=\"Ask People to Review\"></a>Ask People to Review</h2><p>Like with code, you want as many eyeballs on your resume as possible. If you pick out people at random, you might get some bad advice, so it’s best to find people who look at resumes for a living.</p>\n<p>You should have some recruiters and HR in your professional network, so reach out for advice. If you go with a recruitment agency, they should also provide this service to you.</p>\n<p>There are even people out there offering to review your resume for something like $40. That’s a relatively small investment for something that will help you land a bigger paycheck.</p>\n<p>In fact, after writing this article, I feel like I should start a service like that myself.  </p>\n"},{"title":"Hello, Amsterdam! Hello, Amazon!","seo_description":"How cities need to change and what they should avoid.","promo_photo":"/content/images/2020/amsterdam-canal.jpg","date":"2020-10-03T00:00:00.000Z","_content":"\nWith a global pandemic and all the chaos in the world, 2020 may not have been the best year to move to another country. Yet, here I find myself moving to the Netherlands to join Amazon!\n\nIt’s been a relatively fast journey all things considered as time really moved fast once I got the offer. Looking at things as they are right now, it hard for me to believe it’s October already.\n\nWith that being said, there are 2 goodbyes and 2 hellos for me to put in writing.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/sunny-osterpark.jpg\" alt=\"Sunny Oosterpark\" /><figcaption>Sunny Oosterpark</figcaption></figure>\n\n## Goodbye, SpiceFactory!  \n\nIt’s been almost 5 years since [Miloš](https://www.linkedin.com/in/miloszikic/) reached out to me via LinkedIn. Back then SpiceFactory was a 4-person company, but it already had the right culture and ambitions.\n\nI’m sad that I’m leaving. It’s a place where my coworkers were honestly my friends. A lot of companies play by the “family gimmick”, but it’s rare for that to be honest.\n\nIf you’re looking for a software engineering position in Belgrade, the [careers page](https://spicefactory.co/careers/) has some open positions.\n\n## Hello, Amazon!\n\nMoving from a product agency to one of the largest tech giants on the planet is quite a change. Changing things around like that has usually worked out really well for me, so I’m very excited!\n\nI can’t wait to see things move and operate at Amazon scale. I’ll be on the FinTech team, so I’m sure I’ll be able to peek inside of various organizations within Amazon.\n \nI’m sure I’ll get a chance to share the new things I discover and learn with you via this blog.\n\n## Goodbye, Belgrade!\n\nA few years ago, I didn’t think I’d become part of the [brain drain](https://europeanwesternbalkans.com/2018/12/25/brain-drain-important-migration-issue-western-balkans/) that Serbia is struggling with. Leaving my hometown is not easy. And it’s harder when you know you’ve left your family and friends in a country that’s [becoming a real dictatorship.](https://www.euractiv.com/section/enlargement/opinion/the-dictatorship-next-door-why-serbias-regime-threatens-europes-credibility/) \n\nVoting with my feet is the last resort I can think of. Until we think of something better at least.\n\n## Hello, Amsterdam!\n\nAmsterdam is definitely one of my favorite cities in the world! It made it easier to accept the Amazon offer when I heard that Amsterdam would be my new home.\n\nSince I got here I’ve already traveled over 100km on foot exploring the beautiful parks and calm streets. [Unlike Belgrade,](/2020/less-cars-more-trees) it’s actually really enjoyable to be a pedestrian here.\n\nA funny thing about me though: _I don’t know how to ride a bike!_ \n\nOf course, I’m learning (a lot of new things) and I can’t wait to share them with you.\n","source":"_posts/hello-amsterdam.md","raw":"---\ntitle: Hello, Amsterdam! Hello, Amazon!\nseo_description: How cities need to change and what they should avoid.\npromo_photo: /content/images/2020/amsterdam-canal.jpg\ndate: 2020-10-03\ntags:\n---\n\nWith a global pandemic and all the chaos in the world, 2020 may not have been the best year to move to another country. Yet, here I find myself moving to the Netherlands to join Amazon!\n\nIt’s been a relatively fast journey all things considered as time really moved fast once I got the offer. Looking at things as they are right now, it hard for me to believe it’s October already.\n\nWith that being said, there are 2 goodbyes and 2 hellos for me to put in writing.\n\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/sunny-osterpark.jpg\" alt=\"Sunny Oosterpark\" /><figcaption>Sunny Oosterpark</figcaption></figure>\n\n## Goodbye, SpiceFactory!  \n\nIt’s been almost 5 years since [Miloš](https://www.linkedin.com/in/miloszikic/) reached out to me via LinkedIn. Back then SpiceFactory was a 4-person company, but it already had the right culture and ambitions.\n\nI’m sad that I’m leaving. It’s a place where my coworkers were honestly my friends. A lot of companies play by the “family gimmick”, but it’s rare for that to be honest.\n\nIf you’re looking for a software engineering position in Belgrade, the [careers page](https://spicefactory.co/careers/) has some open positions.\n\n## Hello, Amazon!\n\nMoving from a product agency to one of the largest tech giants on the planet is quite a change. Changing things around like that has usually worked out really well for me, so I’m very excited!\n\nI can’t wait to see things move and operate at Amazon scale. I’ll be on the FinTech team, so I’m sure I’ll be able to peek inside of various organizations within Amazon.\n \nI’m sure I’ll get a chance to share the new things I discover and learn with you via this blog.\n\n## Goodbye, Belgrade!\n\nA few years ago, I didn’t think I’d become part of the [brain drain](https://europeanwesternbalkans.com/2018/12/25/brain-drain-important-migration-issue-western-balkans/) that Serbia is struggling with. Leaving my hometown is not easy. And it’s harder when you know you’ve left your family and friends in a country that’s [becoming a real dictatorship.](https://www.euractiv.com/section/enlargement/opinion/the-dictatorship-next-door-why-serbias-regime-threatens-europes-credibility/) \n\nVoting with my feet is the last resort I can think of. Until we think of something better at least.\n\n## Hello, Amsterdam!\n\nAmsterdam is definitely one of my favorite cities in the world! It made it easier to accept the Amazon offer when I heard that Amsterdam would be my new home.\n\nSince I got here I’ve already traveled over 100km on foot exploring the beautiful parks and calm streets. [Unlike Belgrade,](/2020/less-cars-more-trees) it’s actually really enjoyable to be a pedestrian here.\n\nA funny thing about me though: _I don’t know how to ride a bike!_ \n\nOf course, I’m learning (a lot of new things) and I can’t wait to share them with you.\n","slug":"hello-amsterdam","published":1,"updated":"2021-08-14T16:07:46.599Z","_id":"ckfte461m0000rarikssnmv8u","comments":1,"layout":"post","photos":[],"link":"","content":"<p>With a global pandemic and all the chaos in the world, 2020 may not have been the best year to move to another country. Yet, here I find myself moving to the Netherlands to join Amazon!</p>\n<p>It’s been a relatively fast journey all things considered as time really moved fast once I got the offer. Looking at things as they are right now, it hard for me to believe it’s October already.</p>\n<p>With that being said, there are 2 goodbyes and 2 hellos for me to put in writing.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/sunny-osterpark.jpg\" alt=\"Sunny Oosterpark\"><figcaption>Sunny Oosterpark</figcaption></figure>\n\n<h2 id=\"Goodbye-SpiceFactory\"><a href=\"#Goodbye-SpiceFactory\" class=\"headerlink\" title=\"Goodbye, SpiceFactory!\"></a>Goodbye, SpiceFactory!</h2><p>It’s been almost 5 years since <a href=\"https://www.linkedin.com/in/miloszikic/\" target=\"_blank\" rel=\"external\">Miloš</a> reached out to me via LinkedIn. Back then SpiceFactory was a 4-person company, but it already had the right culture and ambitions.</p>\n<p>I’m sad that I’m leaving. It’s a place where my coworkers were honestly my friends. A lot of companies play by the “family gimmick”, but it’s rare for that to be honest.</p>\n<p>If you’re looking for a software engineering position in Belgrade, the <a href=\"https://spicefactory.co/careers/\" target=\"_blank\" rel=\"external\">careers page</a> has some open positions.</p>\n<h2 id=\"Hello-Amazon\"><a href=\"#Hello-Amazon\" class=\"headerlink\" title=\"Hello, Amazon!\"></a>Hello, Amazon!</h2><p>Moving from a product agency to one of the largest tech giants on the planet is quite a change. Changing things around like that has usually worked out really well for me, so I’m very excited!</p>\n<p>I can’t wait to see things move and operate at Amazon scale. I’ll be on the FinTech team, so I’m sure I’ll be able to peek inside of various organizations within Amazon.</p>\n<p>I’m sure I’ll get a chance to share the new things I discover and learn with you via this blog.</p>\n<h2 id=\"Goodbye-Belgrade\"><a href=\"#Goodbye-Belgrade\" class=\"headerlink\" title=\"Goodbye, Belgrade!\"></a>Goodbye, Belgrade!</h2><p>A few years ago, I didn’t think I’d become part of the <a href=\"https://europeanwesternbalkans.com/2018/12/25/brain-drain-important-migration-issue-western-balkans/\" target=\"_blank\" rel=\"external\">brain drain</a> that Serbia is struggling with. Leaving my hometown is not easy. And it’s harder when you know you’ve left your family and friends in a country that’s <a href=\"https://www.euractiv.com/section/enlargement/opinion/the-dictatorship-next-door-why-serbias-regime-threatens-europes-credibility/\" target=\"_blank\" rel=\"external\">becoming a real dictatorship.</a> </p>\n<p>Voting with my feet is the last resort I can think of. Until we think of something better at least.</p>\n<h2 id=\"Hello-Amsterdam\"><a href=\"#Hello-Amsterdam\" class=\"headerlink\" title=\"Hello, Amsterdam!\"></a>Hello, Amsterdam!</h2><p>Amsterdam is definitely one of my favorite cities in the world! It made it easier to accept the Amazon offer when I heard that Amsterdam would be my new home.</p>\n<p>Since I got here I’ve already traveled over 100km on foot exploring the beautiful parks and calm streets. <a href=\"/2020/less-cars-more-trees\">Unlike Belgrade,</a> it’s actually really enjoyable to be a pedestrian here.</p>\n<p>A funny thing about me though: <em>I don’t know how to ride a bike!</em> </p>\n<p>Of course, I’m learning (a lot of new things) and I can’t wait to share them with you.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>With a global pandemic and all the chaos in the world, 2020 may not have been the best year to move to another country. Yet, here I find myself moving to the Netherlands to join Amazon!</p>\n<p>It’s been a relatively fast journey all things considered as time really moved fast once I got the offer. Looking at things as they are right now, it hard for me to believe it’s October already.</p>\n<p>With that being said, there are 2 goodbyes and 2 hellos for me to put in writing.</p>\n<figure class=\"blog-post-image\"><img src=\"/content/images/2020/sunny-osterpark.jpg\" alt=\"Sunny Oosterpark\"><figcaption>Sunny Oosterpark</figcaption></figure>\n\n<h2 id=\"Goodbye-SpiceFactory\"><a href=\"#Goodbye-SpiceFactory\" class=\"headerlink\" title=\"Goodbye, SpiceFactory!\"></a>Goodbye, SpiceFactory!</h2><p>It’s been almost 5 years since <a href=\"https://www.linkedin.com/in/miloszikic/\" target=\"_blank\" rel=\"external\">Miloš</a> reached out to me via LinkedIn. Back then SpiceFactory was a 4-person company, but it already had the right culture and ambitions.</p>\n<p>I’m sad that I’m leaving. It’s a place where my coworkers were honestly my friends. A lot of companies play by the “family gimmick”, but it’s rare for that to be honest.</p>\n<p>If you’re looking for a software engineering position in Belgrade, the <a href=\"https://spicefactory.co/careers/\" target=\"_blank\" rel=\"external\">careers page</a> has some open positions.</p>\n<h2 id=\"Hello-Amazon\"><a href=\"#Hello-Amazon\" class=\"headerlink\" title=\"Hello, Amazon!\"></a>Hello, Amazon!</h2><p>Moving from a product agency to one of the largest tech giants on the planet is quite a change. Changing things around like that has usually worked out really well for me, so I’m very excited!</p>\n<p>I can’t wait to see things move and operate at Amazon scale. I’ll be on the FinTech team, so I’m sure I’ll be able to peek inside of various organizations within Amazon.</p>\n<p>I’m sure I’ll get a chance to share the new things I discover and learn with you via this blog.</p>\n<h2 id=\"Goodbye-Belgrade\"><a href=\"#Goodbye-Belgrade\" class=\"headerlink\" title=\"Goodbye, Belgrade!\"></a>Goodbye, Belgrade!</h2><p>A few years ago, I didn’t think I’d become part of the <a href=\"https://europeanwesternbalkans.com/2018/12/25/brain-drain-important-migration-issue-western-balkans/\" target=\"_blank\" rel=\"external\">brain drain</a> that Serbia is struggling with. Leaving my hometown is not easy. And it’s harder when you know you’ve left your family and friends in a country that’s <a href=\"https://www.euractiv.com/section/enlargement/opinion/the-dictatorship-next-door-why-serbias-regime-threatens-europes-credibility/\" target=\"_blank\" rel=\"external\">becoming a real dictatorship.</a> </p>\n<p>Voting with my feet is the last resort I can think of. Until we think of something better at least.</p>\n<h2 id=\"Hello-Amsterdam\"><a href=\"#Hello-Amsterdam\" class=\"headerlink\" title=\"Hello, Amsterdam!\"></a>Hello, Amsterdam!</h2><p>Amsterdam is definitely one of my favorite cities in the world! It made it easier to accept the Amazon offer when I heard that Amsterdam would be my new home.</p>\n<p>Since I got here I’ve already traveled over 100km on foot exploring the beautiful parks and calm streets. <a href=\"/2020/less-cars-more-trees\">Unlike Belgrade,</a> it’s actually really enjoyable to be a pedestrian here.</p>\n<p>A funny thing about me though: <em>I don’t know how to ride a bike!</em> </p>\n<p>Of course, I’m learning (a lot of new things) and I can’t wait to share them with you.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}